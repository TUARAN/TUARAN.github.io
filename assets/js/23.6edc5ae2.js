(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{517:function(s,a,n){"use strict";n.r(a);var t=n(2),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"收集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#收集"}},[s._v("#")]),s._v(" 收集")]),s._v(" "),n("h3",{attrs:{id:"http、https、websocket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http、https、websocket"}},[s._v("#")]),s._v(" http、https、websocket")]),s._v(" "),n("ol",[n("li",[s._v("http:超文本传输协议")]),s._v(" "),n("li",[s._v("https:超文本安全传输协议")]),s._v(" "),n("li",[s._v("影响一个 HTTP 网络请求的因素主要有两个：带宽和延迟。")]),s._v(" "),n("li",[s._v("TCP/IP 是传输层的协议，而 http/https 是在应层的协议")]),s._v(" "),n("li",[s._v("Socket是对TCP/IP协议的封装")])]),s._v(" "),n("h3",{attrs:{id:"http2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[s._v("#")]),s._v(" http2")]),s._v(" "),n("p",[s._v("HTTP2.0和HTTP1.X相比的新特性")]),s._v(" "),n("ol",[n("li",[s._v("新的二进制格式（Binary Format），HTTP1.x的解析是基于文本。基于文本协议的格式解析存在天然缺陷，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只认0和1的组合。基于这种考虑HTTP2.0的协议解析决定采用二进制格式，实现方便且健壮。")]),s._v(" "),n("li",[s._v("多路复用（MultiPlexing），即连接共享，即每一个request都是是用作连接共享机制的。一个request对应一个id，这样一个连接上可以有多个request，每个连接的request可以随机的混杂在一起，接收方可以根据request的 id将request再归属到各自不同的服务端请求里面。")]),s._v(" "),n("li",[s._v("header压缩，如上文中所言，对前面提到过HTTP1.x的header带有大量信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。")]),s._v(" "),n("li",[s._v("服务端推送（server push），同SPDY一样，HTTP2.0也具有server push功能。")])]),s._v(" "),n("h3",{attrs:{id:"quic协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#quic协议"}},[s._v("#")]),s._v(" Quic协议")]),s._v(" "),n("h3",{attrs:{id:"settimeout-promise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-promise"}},[s._v("#")]),s._v(" setTimeout,promise")]),s._v(" "),n("p",[s._v("首先，任务分为同步任务和异步任务，异步任务又分为宏任务和微任务，setTimeout是异步任务下的宏任务，要放在宏任务队列里；promise是异步任务下的微任务，要放在微任务队列里。")]),s._v(" "),n("p",[s._v("同步任务的队列执行完了，就执行微任务，微任务执行完了且同步任务执行完了，才执行宏任务队列里的任务。")]),s._v(" "),n("h3",{attrs:{id:"跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[s._v("#")]),s._v(" 跨域")]),s._v(" "),n("ol",[n("li",[s._v("jsonp")]),s._v(" "),n("li",[s._v("CORS(跨域资源共享-服务器端设置)-如果是带cookie的需要设置的时候需要指定来源")]),s._v(" "),n("li",[s._v("proxy代理，niginx代理")]),s._v(" "),n("li",[s._v("websocket")]),s._v(" "),n("li",[s._v("postMessage")])]),s._v(" "),n("h3",{attrs:{id:"ot-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ot-算法"}},[s._v("#")]),s._v(" OT 算法")]),s._v(" "),n("h3",{attrs:{id:"vue-的虚拟dom、diff-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-的虚拟dom、diff-算法"}},[s._v("#")]),s._v(" vue 的虚拟Dom、diff 算法")]),s._v(" "),n("ol",[n("li",[s._v("缘由：操作真是DOM会整个Dom树执行一遍，造成卡顿，成本很高。")]),s._v(" "),n("li",[s._v("解决思路：js 运行比 DOM 操作要快很多，所以可以将DOM变化的对比，放到 Js 层来做。")]),s._v(" "),n("li",[s._v("背景：Vue2中使用的虚拟dom库 snabbdom，核心内容就是两个函数 -- h函数（生成vnode） 和 patch函数（对比vnode）")]),s._v(" "),n("li",[s._v("实际操作：虚拟dom不会直接操作真实dom，而是将更新的diff内容保存到本地js对象中，然后一次性attach到dom树上")]),s._v(" "),n("li",[s._v("核心：patch函数进行 diff 算法。")])]),s._v(" "),n("h3",{attrs:{id:"csrf攻击原理以及nodejs的实现和防御"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击原理以及nodejs的实现和防御"}},[s._v("#")]),s._v(" CSRF攻击原理以及nodejs的实现和防御")]),s._v(" "),n("p",[s._v("发生在现实场景中的 CSRF"),n("a",{attrs:{href:"https://www.davidairey.com/google-Gmail-security-hijack",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("用户在gmail浏览邮件，然后点击了一个非法链接，这个非法链接就会自动提交一个表单，伪造请求，操作安全漏洞。")]),s._v(" "),n("p",[s._v("利用的就是：受害者在被攻击网站已经获取的凭证")]),s._v(" "),n("ul",[n("li",[s._v("解决\n同源检测")])]),s._v(" "),n("p",[n("a",{attrs:{href:"https://tech.meituan.com/2018/10/11/fe-security-csrf.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"vue-router-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-原理"}},[s._v("#")]),s._v(" vue-router 原理")]),s._v(" "),n("p",[s._v("分为两种模式：hash和history")]),s._v(" "),n("ul",[n("li",[s._v("默认 hash 模式，通过加锚点的方式")]),s._v(" "),n("li",[s._v("history 利用 history.pushState API实现")])]),s._v(" "),n("p",[s._v("原生：\nHTML5引入了 history.pushState() 和 history.replaceState() 方法，它们分别可以添加和修改历史记录条目。这些方法通常与window.onpopstate 配合使用。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://www.renfei.org/blog/html5-introduction-3-history-api.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("linl"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"cdn缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cdn缓存"}},[s._v("#")]),s._v(" cdn缓存")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5cdb7e29e51d453a572aa2f1",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"函数柯里化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数柯里化"}},[s._v("#")]),s._v(" 函数柯里化")]),s._v(" "),n("h3",{attrs:{id:"斐波那契数列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#斐波那契数列"}},[s._v("#")]),s._v(" 斐波那契数列")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function result(){\n    if(n==1||n==2){\n        return 1\n    }\n    return reslt(n-2)+result(n-1)\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"网络安全"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络安全"}},[s._v("#")]),s._v(" 网络安全")]),s._v(" "),n("h3",{attrs:{id:"https原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#https原理"}},[s._v("#")]),s._v(" https原理")]),s._v(" "),n("h3",{attrs:{id:"vue-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-原理"}},[s._v("#")]),s._v(" vue 原理")]),s._v(" "),n("h3",{attrs:{id:"虚拟dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[s._v("#")]),s._v(" 虚拟Dom")]),s._v(" "),n("ul",[n("li",[s._v("在js里运行的速度要快于操作dom")])]),s._v(" "),n("p",[s._v("虚拟 DOM 就是为了解决浏览器性能问题而被设计出来的。如前，若一次操作中有 10 次更新 DOM 的动作，虚拟 DOM 不会立即操作 DOM，而是将这 10 次更新的 diff 内容保存到本地一个 JS 对象中，最终将这个 JS 对象一次性 attch 到 DOM 树上，再进行后续操作，避免大量无谓的计算量。所以，用 JS 对象模拟 DOM 节点的好处是，页面的更新可以先全部反映在 JS 对象(虚拟 DOM )上，操作内存中的 JS 对象的速度显然要更快，等更新完成后，再将最终的 JS 对象映射成真实的 DOM，交由浏览器去绘制。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5d36cc575188257aea108a74#heading-14",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"浏览器的渲染原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染原理"}},[s._v("#")]),s._v(" 浏览器的渲染原理")]),s._v(" "),n("p",[s._v("浏览器请求、加载、渲染一个页面，时间花在下面五件事情上：")]),s._v(" "),n("ol",[n("li",[s._v("DNS 查询")]),s._v(" "),n("li",[s._v("TCP 连接")]),s._v(" "),n("li",[s._v("HTTP 请求即响应")]),s._v(" "),n("li",[s._v("服务器响应")]),s._v(" "),n("li",[s._v("客户端渲染")])]),s._v(" "),n("p",[s._v("浏览器对内容的渲染，又可分为五个步骤：")]),s._v(" "),n("ol",[n("li",[s._v("处理 HTML 标记并构建 DOM 树。")]),s._v(" "),n("li",[s._v("处理 CSS 标记并构建 CSSOM 树。")]),s._v(" "),n("li",[s._v("将 DOM 与 CSSOM 合并成一个渲染树。")]),s._v(" "),n("li",[s._v("根据渲染树来布局，以计算每个节点的几何信息。")]),s._v(" "),n("li",[s._v("将各个节点绘制到屏幕上。")])]),s._v(" "),n("h3",{attrs:{id:"mock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mock"}},[s._v("#")]),s._v(" mock")]),s._v(" "),n("h3",{attrs:{id:"zrender"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zrender"}},[s._v("#")]),s._v(" Zrender")]),s._v(" "),n("h3",{attrs:{id:"eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[s._v("#")]),s._v(" Eslint")]),s._v(" "),n("h3",{attrs:{id:"node"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[s._v("#")]),s._v(" Node")]),s._v(" "),n("h3",{attrs:{id:"keep-alive"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[s._v("#")]),s._v(" keep-alive")]),s._v(" "),n("p",[n("code",[s._v("<keep-alive>")]),s._v(" 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们。")]),s._v(" "),n("h3",{attrs:{id:"vuex具体有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex具体有哪些"}},[s._v("#")]),s._v(" vuex具体有哪些")]),s._v(" "),n("h3",{attrs:{id:"快排"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快排"}},[s._v("#")]),s._v(" 快排")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 快排\nfunction quickSort(arr, i, j) {\n  if(i < j) {\n    let left = i;\n    let right = j;\n    let pivot = arr[left];\n    while(i < j) {\n      while(arr[j] >= pivot && i < j) {  // 从后往前找比基准小的数\n        j--;\n      }\n      if(i < j) {\n        arr[i++] = arr[j];\n      }\n      while(arr[i] <= pivot && i < j) {  // 从前往后找比基准大的数\n        i++;\n      }\n      if(i < j) {\n        arr[j--] = arr[i];\n      }\n    }\n    arr[i] = pivot;\n    quickSort(arr, left, i-1);\n    quickSort(arr, i+1, right);\n    return arr;\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("h3",{attrs:{id:"浏览器缓存流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存流程"}},[s._v("#")]),s._v(" 浏览器缓存流程")]),s._v(" "),n("h3",{attrs:{id:"webpckage-plugin实现-及优化速度-webpack-打包细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpckage-plugin实现-及优化速度-webpack-打包细节"}},[s._v("#")]),s._v(" webpckage plugin实现 及优化速度，webpack 打包细节")]),s._v(" "),n("h3",{attrs:{id:"https原理-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#https原理-2"}},[s._v("#")]),s._v(" https原理")]),s._v(" "),n("h3",{attrs:{id:"promise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[s._v("#")]),s._v(" promise")]),s._v(" "),n("h3",{attrs:{id:"跨域-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域-2"}},[s._v("#")]),s._v(" 跨域")]),s._v(" "),n("h3",{attrs:{id:"输入一个url会发生什么-三次握手"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#输入一个url会发生什么-三次握手"}},[s._v("#")]),s._v(" 输入一个Url会发生什么：三次握手")]),s._v(" "),n("h3",{attrs:{id:"连续n个基数数组-有几个"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#连续n个基数数组-有几个"}},[s._v("#")]),s._v(" 连续n个基数数组，有几个")]),s._v(" "),n("h3",{attrs:{id:"https-细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#https-细节"}},[s._v("#")]),s._v(" https 细节")]),s._v(" "),n("p",[s._v("HTTPS在传统的HTTP和TCP之间加了一层用于加密解密的SSL/TLS层（安全套接层Secure Sockets Layer/安全传输层Transport Layer Security）层。使用HTTPS必须要有一套自己的数字证书（包含公钥和私钥）")]),s._v(" "),n("h3",{attrs:{id:"进程线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程线程"}},[s._v("#")]),s._v(" 进程线程")]),s._v(" "),n("p",[s._v("进程是系统进行资源分配和调度的一个独立单位. 线程是进程的一个实体")]),s._v(" "),n("h3",{attrs:{id:"强缓存、协商缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强缓存、协商缓存"}},[s._v("#")]),s._v(" 强缓存、协商缓存")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/amandakelake/blog/issues/41",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"闭包细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包细节"}},[s._v("#")]),s._v(" 闭包细节")]),s._v(" "),n("h3",{attrs:{id:"从输入一个url-到-页面渲染-domtree-csstree-rendertree"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从输入一个url-到-页面渲染-domtree-csstree-rendertree"}},[s._v("#")]),s._v(" 从输入一个url 到 页面渲染，domtree+csstree+rendertree")]),s._v(" "),n("h3",{attrs:{id:"import-export-require-细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#import-export-require-细节"}},[s._v("#")]),s._v(" import export require 细节")]),s._v(" "),n("p",[s._v("import是ES6标准中的模块化解决方案，require是node中遵循CommonJS规范的模块化解决方案")]),s._v(" "),n("p",[s._v("后者支持动态引入，也就是require(${path}/xx.js)，前者目前不支持，但是已有提案")]),s._v(" "),n("p",[s._v("前者是关键词，后者不是")]),s._v(" "),n("p",[s._v("前者是编译时加载，必须放在模块顶部，在性能上会比后者好一些，后者是运行时加载，理论上来说放在哪里都可以")]),s._v(" "),n("p",[s._v("前者采用的是实时绑定方式，即导入和导出的值都指向同一个内存地址，所以导入值会随着导出值变化。而后者在导出时是指拷贝，就算导出的值变化了，导入的值也不会变化，如果想要更新值就要重新导入")]),s._v(" "),n("p",[s._v("前者会编译成require/exports来执行")]),s._v(" "),n("ul",[n("li",[s._v("AMD?CMD?")])]),s._v(" "),n("p",[s._v("AMD | 速度快 | 会浪费资源 | 预先加载所有的依赖，直到使用的时候才执行")]),s._v(" "),n("p",[s._v("CMD | 只有真正需要才加载依赖 | 性能较差 | 直到使用的时候才定义依赖")]),s._v(" "),n("h3",{attrs:{id:"render-tree-细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#render-tree-细节"}},[s._v("#")]),s._v(" render-tree 细节")]),s._v(" "),n("h3",{attrs:{id:"lru-缓存算法-lfu"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lru-缓存算法-lfu"}},[s._v("#")]),s._v(" LRU 缓存算法（LFU）")]),s._v(" "),n("h3",{attrs:{id:"tcp-滑动窗口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tcp-滑动窗口"}},[s._v("#")]),s._v(" TCP 滑动窗口")]),s._v(" "),n("h3",{attrs:{id:"v-if和v-show"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v-if和v-show"}},[s._v("#")]),s._v(" v-if和v-show")]),s._v(" "),n("h3",{attrs:{id:"svg和canvas的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#svg和canvas的区别"}},[s._v("#")]),s._v(" svg和canvas的区别")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" Canvas 和 SVG 的区别：\n　　SVG\n　　　　SVG 是一种使用 XML 描述 2D 图形的语言。\n　　　　SVG 基于 XML，这意味着 SVG DOM 中的每个元素都是可用的。您可以为某个元素附加 JavaScript 事件处理器。\n　　　　在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。\n　　　　特点：\n　　　　 　　不依赖分辨率\n　　　　 　　支持事件处理器\n　　　　 　　最适合带有大型渲染区域的应用程序（比如谷歌地图）\n　　　　　　 复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）\n　　　　 　　不适合游戏应用\n　　Canvas\n　　　　Canvas 通过 JavaScript 来绘制 2D 图形。\n　　　　Canvas 是逐像素进行渲染的。\n　　　　在 canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。\n　　　　特点：\n　　　    　　依赖分辨率\n　　　　 　　不支持事件处理器\n　　　　　　 弱的文本渲染能力\n　　　　　　 能够以 .png 或 .jpg 格式保存结果图像\n　　　　 　　最适合图像密集型的游戏，其中的许多对象会被频繁重绘\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[n("a",{attrs:{href:"https://github.com/abcrun/abcrun.github.com/issues/13",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"虚拟dom-attach"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom-attach"}},[s._v("#")]),s._v(" 虚拟dom attach")]),s._v(" "),n("h3",{attrs:{id:"localstorage-5m存满"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#localstorage-5m存满"}},[s._v("#")]),s._v(" localstorage 5M存满")]),s._v(" "),n("p",[s._v("衍生：indexedDB")]),s._v(" "),n("h3",{attrs:{id:"webp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webp"}},[s._v("#")]),s._v(" webp")]),s._v(" "),n("h3",{attrs:{id:"渐进式图片细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渐进式图片细节"}},[s._v("#")]),s._v(" 渐进式图片细节")]),s._v(" "),n("h3",{attrs:{id:"原生画一个饼状图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原生画一个饼状图"}},[s._v("#")]),s._v(" 原生画一个饼状图")]),s._v(" "),n("h3",{attrs:{id:"webpack-打包速度优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包速度优化"}},[s._v("#")]),s._v(" webpack 打包速度优化")]),s._v(" "),n("h3",{attrs:{id:"高性能渲染十万条数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高性能渲染十万条数据"}},[s._v("#")]),s._v(" 高性能渲染十万条数据")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU3Nzk3NDk5OQ==&mid=2247483815&idx=1&sn=8b52305534cae600abf27e041d1ad463&chksm=fd7d261fca0aaf09246d8ea0e06577e1bc380797d4813628594e3cfb8bcb9173cf7ea7a8fe93&token=1876016006&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[s._v("高性能渲染十万条数据"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("requestAnimationFrame")]),s._v(" "),n("p",[s._v("DocumentFragment")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1533206",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"rem-em-及屏幕换算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rem-em-及屏幕换算"}},[s._v("#")]),s._v(" rem,em 及屏幕换算")]),s._v(" "),n("p",[s._v("基准设置"),n("a",{attrs:{href:"https://imweb.io/topic/5a523cc0a192c3b460fce3a5",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const oHtml = document.getElementsByTagName('html')[0]\nconst width = oHtml.clientWidth;\n// 320px的屏幕基准像素为12px\noHtml.style.fontSize = 12 * (width / 320) + \"px\";\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"websocket-比较-http-轮询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#websocket-比较-http-轮询"}},[s._v("#")]),s._v(" websocket 比较 http 轮询")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5d0b1381e51d455a694f9544",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"js-defer-和-async-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-defer-和-async-的区别"}},[s._v("#")]),s._v(" js defer 和 async 的区别")]),s._v(" "),n("p",[s._v("defer 和 async 在网络读取（下载）这块儿是一样的，都是异步的（相较于 HTML 解析）\n它俩的差别在于脚本下载完之后何时执行，显然 defer 是最接近我们对于应用脚本加载和执行的要求的（页面渲染完再执行）。")]),s._v(" "),n("p",[n("img",{attrs:{src:"http://tuaran.site:3001/uploads/50ed42df741253b4e56e6bdf538cc852.png",alt:""}}),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"onready-和-onload-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#onready-和-onload-的区别"}},[s._v("#")]),s._v(" onready 和 onload 的区别")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("ready事件在DOM结构绘制完成之后就会执行，这样能确保就算有大量的媒体文件没加载出来，JS代码一样可以执行。")])]),s._v(" "),n("li",[n("p",[s._v("load事件必须等到网页中所有内容全部加载完毕之后才被执行。如果一个网页中有大量的图片的话，则就会出现这种情况：网页文档已经呈现出来，但由于网页数据还没有完全加载完毕，导致load事件不能够即时被触发。")])])]),s._v(" "),n("p",[s._v("注：在控制台的 network 可以看到两条垂直线，蓝色的表示 ready 事件。红色的表示 load 事件。")]),s._v(" "),n("h3",{attrs:{id:"腾讯一面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#腾讯一面"}},[s._v("#")]),s._v(" 腾讯一面")]),s._v(" "),n("p",[s._v("Flutter 和 RN 原理的区别\n性能优化\nWeb 安全\n错误监控\n首屏时间统计\nPerformance 中的其他api\n服务端渲染性能\n离线缓存 sw\nNode并发\nNode内存\nNode cluster 配置分发规则\nNode错误监控\nReact fiber\nDiff算法\nRequestidlecallback实现\nNode如何部署\nNode中间挂了怎么办")]),s._v(" "),n("h3",{attrs:{id:"腾讯二面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#腾讯二面"}},[s._v("#")]),s._v(" 腾讯二面")]),s._v(" "),n("p",[s._v("闭包\nES5 实现继承\nthis 指向\ncall apply 的区别\nNull 和 undefined 区别\n内存泄漏\n哪些操作会引起内存泄漏\n跨域\nWebsocket 原理\nCSRF\n性能优化统计\n前端性能优化\n如何判断在浏览器端还是在 Node 端\n前端路由\nFlutter 和 RN 原理的区别\n自动化部署"),n("br"),s._v("\n学习方法\n自己的缺点\n加班怎么看")]),s._v(" "),n("h3",{attrs:{id:"腾讯总经理面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#腾讯总经理面"}},[s._v("#")]),s._v(" 腾讯总经理面：")]),s._v(" "),n("p",[s._v("性能优化\n优化前后请求时间、Http 请求数量、体积对比\n项目中的难点\n闭包，闭包的用途\n闭包哪些场景会引发内存泄露\nTCP 三次握手和四次挥手有什么意义\n为什么挥手要四次，三次效率不是更高？\n虚拟 DOM 解决了什么，有什么好处\nReact Diff 算法，o(n3) 和 o(n) 时间复杂度是怎么得来的\nMVC 和 MVVM 的区别\nHttps\nHTTPS 加密是什么算法（这个不是问对称加密和非对称加密）\nHttp 哪些 Header 头对性能优化有帮助\nGzip 压缩率是多少\n协商缓存和强缓存有什么区别\nWebpack 插件，写过什么 webpack 插件\nCSRF 防范\n对未来移动端跨平台怎么看\n怎么看 Node，拿 Node 做什么\n前端小组内部的分享效果怎么样，如何提高\n职业规划")]),s._v(" "),n("h3",{attrs:{id:"腾讯面委面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#腾讯面委面"}},[s._v("#")]),s._v(" 腾讯面委面：")]),s._v(" "),n("p",[s._v("Vue 和 React 区别\nVue 和 React 怎么选\nXSS 攻击\n对 Flutter 怎么看\n服务端渲染和客户端渲染有什么不同\n首屏时间统计\nperformance.timing 哪个阶段是可交互时间\n移动端和 PC 开发有什么区别吗")]),s._v(" "),n("h3",{attrs:{id:"changeobjproperty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#changeobjproperty"}},[s._v("#")]),s._v(" changeObjProperty")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function changeObjProperty(o) {\n  o.siteUrl = "http://www.baidu.com"\n  o = new Object()\n  o.siteUrl = "http://www.google.com"\n} \nlet webSite = new Object();\nchangeObjProperty(webSite);\nconsole.log(webSite.siteUrl);\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"promise-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise-2"}},[s._v("#")]),s._v(" Promise")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("setTimeout(function() {\n\n  console.log(1)\n\n}, 0);\n\nnew Promise(function executor(resolve) {\n\n  console.log(2);\n\n  for( var i=0 ; i<10000 ; i++ ) {\n\n    i == 9999 && resolve();\n\n  }\n\n  console.log(3);\n\n}).then(function() {\n\n  console.log(4);\n\n});\n\nconsole.log(5);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h3",{attrs:{id:"dy评卷"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dy评卷"}},[s._v("#")]),s._v(" DY评卷")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("请简述[‘10’] == 10比较过程中的类型转换过程，并预测其比较结果。")])]),s._v(" "),n("li",[n("p",[s._v("设一棵完全二叉树共有699个结点,则在该二叉树中的叶子结点数? 请写出解题过程和结果")])]),s._v(" "),n("li")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("span { \n\n  display:inline-block;\n\n  width:100px;\n\n  background-color:palevioletred;}\n\n\n\n<p>\n\n  <span> Foo </span>\n\n  <span> Bar </span>\n\n</p>\n\n以上代码中span之间会多出4px的间隔，如何使用CSS的方法去掉？\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("ul",[n("li",[s._v("已知某二叉树先序遍历的表示方式为：['G', 'D', 'A', 'F', 'E', 'M', 'H', 'Z']，中序遍历的表示方式为：['A', 'D', 'E', 'F', 'G', 'H', 'M', 'Z']。")])]),s._v(" "),n("p",[s._v("请你补全以下代码，求出这棵二叉树后序遍历的表示方式。（要求先写思路，再进行编程，不写思路扣分）")]),s._v(" "),n("ul",[n("li",[s._v("问题：给定一个正整数 n，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的正方形矩阵。")])]),s._v(" "),n("p",[s._v("示例:")]),s._v(" "),n("p",[s._v("输入: 3\n输出:[\n[ 1, 2, 3 ],\n[ 8, 9, 4 ],\n[ 7, 6, 5 ]\n]")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("translate 和 transform")])]),s._v(" "),n("li")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var ary = [0,1,2];\n\nary[10] = 10;\n\nary.filter(function(x) { return x === undefined;}); \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var a = 0;\n(function() {\n    var a={a:0};\n    var b=function() {\n        setTimeout(() => {\n            console.log(this.a)\n        })\n    }\n    b();\n    b.call(a);\n    a.a=1;\n    a={a:2}\n})()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("ul",[n("li",[s._v("拆箱")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const a = {\n    toString() {\n        console.log('toString a')\n        return 'a'\n    },\n    valueOf() {\n        console.log('valueOf a')\n        return 'a'\n    }\n}\n \nconst b = {\n    toString() {\n        console.log('toString b')\n        return 'b'\n    },\n    valueOf() {\n        console.log('valueOf b')\n        return []\n    }\n}\n     \nalert(a)\na + '1'\na + 1\na * 1\nwindow[a]\nb + 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("ul",[n("li",[s._v("快排")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function quickSort(arr, p, r) {\n    if(p>=r) return;\n    \n    // 分区算法\n    let pivot = r;\n    let i = p;\n    let j = i;\n    while(j<= r-1) {\n        if(arr[j]<=arr[pivot]) {\n            let temp = arr[i];\n            arr[i++] = arr[j++];\n            arr[j-1] = temp;\n        }else {\n            j++;\n        }\n    }\n    let help = arr[i];\n    arr[i] = arr[pivot];\n    arr[pivot] = help;\n    \n    quickSort(arr, p, i-1);\n    quickSort(arr, i+1, r);\n    \n    return arr;\n}\n\nvar arr = [6, 3, 4, 1, 8];\nconsole.log(quickSort(arr, 0, arr.length-1));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("手动实现Promise.race和Promise.all")])]),s._v(" "),n("li",[n("p",[s._v("统计字符串中每个字符的出现频率，返回一个 Object，key 为统计字符，value 为出现频率")])])]),s._v(" "),n("ol",[n("li",[s._v("不限制 key 的顺序")]),s._v(" "),n("li",[s._v("输入的字符串参数不会为空")]),s._v(" "),n("li",[s._v("忽略空白字符")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("一个class为text-content的div,要求实现当里面的文本超过3行时,显示为3行,不足3行时显示全部(不考虑浏览器兼容性),请填写缺少样式以到达目的.")])]),s._v(" "),n("li")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("(function test() {\n\n    setTimeout(function() {\n\n        console.log(4)\n\n    },\n\n    0);\n\n    new Promise(function executor(resolve) {\n\n        console.log(1);\n\n        for (var i = 0; i < 10000; i++) {\n\n            i == 9999 && resolve();\n\n        }\n\n        console.log(2);\n\n    }).then(function() {\n\n        console.log(5);\n\n    });\n\n    console.log(3);\n\n})()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("实现一个函数clone(),可以对JavaScript中的5种主要数据类型（包括Number，String，Array,Boolean，Object）进行复制。")])]),s._v(" "),n("li",[n("p",[s._v("有表达式：[1 < 2 < 3, 3 < 2 < 1]，运行后结果是多少。")])]),s._v(" "),n("li")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("请写出以下代码的输出结果：\n\nconst data1 = {\n\n    2: 2,\n\n    3: 3\n\n}\n\nArray.prototype.push.call(data1, 4)\n\nconsole.log(data1)\n\n\n\nconst data2 = {\n\n    2: 2,\n\n    3: 3,\n\n    length: 2\n\n}\n\nArray.prototype.push.call(data2, 4)\n\nconsole.log(data2)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("谈谈你对css modules的理解，以及它与css scoped的差异是？")])]),s._v(" "),n("li",[n("p",[s._v("js用归并排序实现数组sort方法")])]),s._v(" "),n("li",[n("p",[s._v("给定一个数组nums，还有一个目标数target，实现一个函数twoSum，从数组中找到两个数字，使其和为target。（返回结果为数组，包含两个数字在nums中的index。要求时间复杂度尽量低。）")])])]),s._v(" "),n("p",[s._v("如:")]),s._v(" "),n("p",[s._v("nums = [2, 7, 11, 15]\ntarget = 9\ntwoSum(nums, target) = [0, 1]")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Math.floor、Math.round")])]),s._v(" "),n("li",[n("p",[s._v("简述Set，Map，WeakSet，WeakMap的区别")])]),s._v(" "),n("li",[n("p",[s._v("实现Promise.prototype.finally的polyfill")])]),s._v(" "),n("li",[n("p",[s._v("防抖")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('let timer=false;\n\ndocument.addEventListener("scroll",function(){\n\n  clearTimeout(timer);\n\n  timer=setTimeout(()=>{\n\n    console.log("我被下拉了一次")\n\n },1000)\n\n})\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);