(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{551:function(t,e,r){"use strict";r.r(e);var a=r(2),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("本文首发在我的博客："),r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202034.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端阿瓜每周速记（2020 第 34 周）"),r("OutboundLink")],1)]),t._v(" "),r("Boxx"),t._v(" "),r("h2",{attrs:{id:"引言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),r("p",[t._v("本瓜准备开始写这样的一个系列：《前端阿瓜每周速记》")]),t._v(" "),r("p",[t._v("用于记录每周或亲身经历、或道听途说、或意外所感的有关前端技术二三。")]),t._v(" "),r("p",[t._v("坚持一周一更！以期同各位相好们，哦，不，同各位同好们分享交流 ~")]),t._v(" "),r("ul",[r("li",[t._v("为什么是速记呢？")])]),t._v(" "),r("p",[t._v("毕竟不是全职写文，工作生活之余，遇到自己想写的，又不想随便水一水、或只做一个搬运工，往往需要查阅大量相关知识来吸收、总结、抽离、创新，时间上太紧，难成好作。")]),t._v(" "),r("p",[t._v("想去探索的点却又繁多、冗杂，食之不易，弃之可惜！遂速记之，抛砖引玉，期待日后涓涓细流有幸汇聚成河！")]),t._v(" "),r("ul",[r("li",[t._v("撰文不易 点赞鼓励")])]),t._v(" "),r("p",[t._v("本系列不会影响长篇输出，如“前端书签整理”、“TS 学习”、“Vue3 源码”等等，关注不迷路！")]),t._v(" "),r("h2",{attrs:{id:"值传递、引用传递、解释型、编译型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#值传递、引用传递、解释型、编译型"}},[t._v("#")]),t._v(" 值传递、引用传递、解释型、编译型")]),t._v(" "),r("p",[t._v("我知道你知道，JS 值有两大类型：基本类型和引用类型。基本类型按值传递，引用类型按引用传递。非常优秀，背的简直不要太熟，但你有想过为什么要这么划分吗？")]),t._v(" "),r("p",[t._v("这些变量保存在哪里？内存中？")]),t._v(" "),r("p",[t._v("内存的分配策略是如何的呢？")]),t._v(" "),r("p",[t._v("为什么是内存，不是 CPU？不是外存？"),r("sup",[t._v("本瓜在面试中被问过，面试官多半是后端或架构师")])]),t._v(" "),r("p",[t._v("不要方，抱紧我。芜湖起飞！🚀")]),t._v(" "),r("h3",{attrs:{id:"内存分配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存分配"}},[t._v("#")]),t._v(" 内存分配")]),t._v(" "),r("p",[t._v("程序运行时的内存分配的策略有三种：")]),t._v(" "),r("ol",[r("li",[t._v("静态存储。")]),t._v(" "),r("li",[t._v("栈式存储。")]),t._v(" "),r("li",[t._v("堆式存储。")])]),t._v(" "),r("blockquote",[r("p",[t._v("静态存储分配：是指在")]),r("div",{staticStyle:{color:"pink","font-wight":"500"}},[t._v("编译时")]),t._v("就能"),r("strong",[t._v("确定")]),t._v("每个数据目标在"),r("strong",[t._v("运行时刻的存储空间")]),t._v("需求,因而在编译时就可以给他们分配固定的内存空间.这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在,也不允许有嵌套或者递归的结构出现,因为它们都会导致编译程序无法计算准确的存储空间需求."),r("p"),t._v(" "),r("p",[t._v("栈式存储分配：也可称为动态存储分配,是由一个类似于堆栈的运行栈来实现的.和静态存储分配相反,在栈式存储方案中,程序对数据区的需求在编译时是完全未知的,只有到"),r("strong",[t._v("运行的时候才能够知道")]),t._v(",但是规定在运行中进入一个程序模块时,必须"),r("strong",[t._v("知道该程序模块所需的数据区大小")]),t._v("才能够为其分配内存.和我们在数据结构所熟知的栈一样,栈式存储分配按照"),r("strong",[t._v("先进后出")]),t._v("的原则进行分配。")]),t._v(" "),r("p",[t._v("堆式存储分配：则专门负责在编译时或运行时模块入口处都"),r("strong",[t._v("无法确定存储要求的数据结构")]),t._v("的内存分配,比如可变长度串和对象实例.堆由大片的可利用块或空闲块组成,堆中的内存可以按照任意顺序分配和释放.")])]),t._v(" "),r("p",[t._v("JS 是脚本语言，是解释型语言，即"),r("strong",[t._v("运行时翻译")]),t._v("。不清楚"),r("strong",[t._v("解释型语言")]),t._v("和"),r("strong",[t._v("编译型语言")]),t._v("的参见"),r("a",{attrs:{href:"https://blog.csdn.net/zhu_xun/article/details/16921413",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇"),r("OutboundLink")],1),t._v("。简单来说：解释型语言是边运行边翻译，编译型语言是翻译完后再运行。")]),t._v(" "),r("p",[t._v("那么可推断出内存分配策略采用的是"),r("strong",[t._v("栈式存储")]),t._v("和"),r("strong",[t._v("堆式存储")]),t._v("。（实际上也确实如此）")]),t._v(" "),r("p",[t._v("基础类型因为大小固定，采用"),r("strong",[t._v("栈式存储")]),t._v("。定义时，即系统自动分配，可直接访问，遵循后进先出原则。")]),t._v(" "),r("p",[t._v("引用类型因大小不固定，采用"),r("strong",[t._v("堆式存储")]),t._v("。")]),t._v(" "),r("blockquote",[r("p",[t._v("JS 不允许直接访问堆内存中的位置，因此我们不能直接操作对象的堆内存空间。")])]),t._v(" "),r("p",[t._v("操作对象时，实质上操作的是这个对象的引用，可理解为：在栈内存中的一个指针，指向堆内存的某个地址。")]),t._v(" "),r("ul",[r("li",[t._v("堆栈存储的优缺对比")])]),t._v(" "),r("p",[t._v("栈内存优缺：")]),t._v(" "),r("p",[t._v("优:  大小固定有限制，存取快，销毁快。")]),t._v(" "),r("p",[t._v("缺：不够灵活。编译时确定大小，运行时进行分配。")]),t._v(" "),r("p",[t._v("堆内存优缺：")]),t._v(" "),r("p",[t._v("优：编译器不必知道要从堆里分配多少存储空间，保存数据更灵活。")]),t._v(" "),r("p",[t._v("缺：运行时请求操作系统分配给自己内存，分配和销毁都要占用时间，效率非常低。")]),t._v(" "),r("p",[t._v("简单做了个图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/12f5a833d8264708867ec4e44bc31fdc~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),r("h3",{attrs:{id:"共享传递"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#共享传递"}},[t._v("#")]),t._v(" 共享传递")]),t._v(" "),r("p",[t._v("来看一道题（来自京东面试）：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('function changeObjProperty(o) {\n  o.siteUrl = "http://www.baidu.com"\n  o = {}\n  o.siteUrl = "http://www.google.com"\n} \nlet webSite = {};\nchangeObjProperty(webSite);\nconsole.log(webSite.siteUrl);\n')])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br")])]),r("p",[t._v("实际上，o 与后传进来的 webSite 的指针相同，o 是 webSite 的指针的副本，修改 o.siteUrl 会改变原指针，而直接修改 o ，不会改变原指针。这种传递值的方式叫做"),r("strong",[t._v("共享传递")])]),t._v(" "),r("blockquote",[r("p",[t._v("Stack Overflow 的解释：对于传递到函数参数的对象类型，如果直接改变了拷贝的引用的指向地址，那是不会影响到原来的那个对象；如果是通过拷贝的引用，去进行内部的值的操作，那么就会改变到原来的对象的。")])]),t._v(" "),r("p",[t._v("简单做了个图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b3dbc4849b24324ba9047f777f2e2be~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),r("h3",{attrs:{id:"内存管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),r("p",[t._v("几乎所有的语言的内存管理都要进行下面这三个步骤：")]),t._v(" "),r("ol",[r("li",[t._v("分配你所需要的内存。")]),t._v(" "),r("li",[t._v("使用分配到的内存（读、写）。")]),t._v(" "),r("li",[t._v("不需要时将其释放或归还。")])]),t._v(" "),r("blockquote",[r("p",[t._v("为了不让程序员费心分配内存，JavaScript 在定义变量时就完成了内存分配。———— MDN")])]),t._v(" "),r("p",[t._v("（os:还用我说什么吗？“JS是最好的语言”打在评论中。）")]),t._v(" "),r("p",[t._v("小结：")]),t._v(" "),r("p",[t._v("这里提到了的只是冰山一角，深可至 V8 引擎原理、计算机系统原理等。有兴趣的小伙伴可自行探索，CV不是计算机，这才是计算机！")]),t._v(" "),r("h2",{attrs:{id:"jquery-1-8-2-xss-攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jquery-1-8-2-xss-攻击"}},[t._v("#")]),t._v(" JQuery 1.8.2 XSS 攻击")]),t._v(" "),r("p",[t._v("本司安全组在扫码代码安全时检测出了本瓜所在项目存在 Jqurey 版本过低导致的 XSS 攻击（中危）。"),r("a",{attrs:{href:"https://snyk.io/vuln/SNYK-JS-JQUERY-565129",target:"_blank",rel:"noopener noreferrer"}},[t._v("报告"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("没道理啊，都是 Vue 项目，哪里来的 JQuery，后来全局搜索发现，还真有！原因是 svn 上后台的老旧模板引用了 JQuery 依赖。（别奇怪，历史遗留问题导致各种情况都会出现。）")]),t._v(" "),r("h3",{attrs:{id:"自查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自查"}},[t._v("#")]),t._v(" 自查")]),t._v(" "),r("p",[t._v("不查不知道，一查吓一跳，就连比较新的 JQuery 版本也存在 XSS 漏洞。")]),t._v(" "),r("p",[t._v("例（动动手）：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('<html>\n    <head>\n        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"><\/script>\n    </head>\n    <body>\n        <div id="div"></div>\n        <button onclick="test()">xss</button>\n        <script>\n            function test(){\n                    $(\'#div\').html(\'document.getElementById("div").innerHTML="<style><style /><img src=x onerror=alert(document.cookie)></style>"\');\n            }\n        <\/script>\n    </body>\n</html>\n')])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br"),r("span",{staticClass:"line-number"},[t._v("11")]),r("br"),r("span",{staticClass:"line-number"},[t._v("12")]),r("br"),r("span",{staticClass:"line-number"},[t._v("13")]),r("br"),r("span",{staticClass:"line-number"},[t._v("14")]),r("br")])]),r("p",[t._v("不同的版本下，不同的攻击字符串的标签匹配真是五花八门。")]),t._v(" "),r("p",[t._v("JQuery 很多函数/方法都是XSS接收器。所以说在我们用 JQuery 时，必须注意对 DOM 所做的更改以及传递，不要相信用户输入，常升级 JQuery 版本等。（套一个 Vue，渐进式不香吗？）")]),t._v(" "),r("p",[t._v("更多在 "),r("a",{attrs:{href:"http://www.dvwa.co.uk",target:"_blank",rel:"noopener noreferrer"}},[t._v("DVWA"),r("OutboundLink")],1),t._v(" 和"),r("a",{attrs:{href:"https://segmentfault.com/a/1190000019484055",target:"_blank",rel:"noopener noreferrer"}},[t._v("应用示例"),r("OutboundLink")],1),t._v("，也可借助辅助自查网站 "),r("a",{attrs:{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cross Site Scripting Prevention"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("h3",{attrs:{id:"类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),r("p",[t._v("回顾三种 XSS 类型：")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("DOM 型（DOM XSS），即用户输入没有提交到服务器，只是被前端js接收并显示所引起的XSS。")])]),t._v(" "),r("li",[r("p",[t._v("反射型（Reflected XSS），即用户输入被提交到服务器，服务器将用户输入写入本次请求的response的")]),r("html"),t._v("内引起的XSS。"),r("p")]),t._v(" "),r("li",[r("p",[t._v("存储型（Stored XSS），即用户输入被提交到服务器，服务器将用户输入写入到非本次请求的response的")]),r("html"),t._v("内引起的XSS。"),r("p")])]),t._v(" "),r("h2",{attrs:{id:"webpack-按需引入、预先加载-import、import"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webpack-按需引入、预先加载-import、import"}},[t._v("#")]),t._v(' webpack 按需引入、预先加载 import、import ("")')]),t._v(" "),r("p",[t._v("最近在重构个站，重拾 webpack 打包。")]),t._v(" "),r("h3",{attrs:{id:"按需引入和预先加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#按需引入和预先加载"}},[t._v("#")]),t._v(" 按需引入和预先加载")]),t._v(" "),r("p",[t._v("按需引入其实就是“延迟加载”，等到需要用的时候再加载。")]),t._v(" "),r("p",[t._v("预先加载是“提前加载”，把要用的东西先加载准备好。")]),t._v(" "),r("p",[t._v("这二者之前的平衡，决定了 webpack 的打包策略。")]),t._v(" "),r("h3",{attrs:{id:"import-import"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#import-import"}},[t._v("#")]),t._v(' import import ("")')]),t._v(" "),r("p",[t._v("前者指的是 ES6 的 import，静态的 import 语句用于导入由另一个模块导出的绑定。一般放在 js 头部。"),r("strong",[t._v("编译时加载")])]),t._v(" "),r("p",[t._v("后者指的是 webpack 的import，动态地加载模块。调用 import() 之处，被作为分离的模块起点，意思是，被请求的模块和它引用的所有子模块，会分离到一个单独的 chunk 中。"),r("strong",[t._v("运行时加载")])]),t._v(" "),r("p",[t._v("所以，对于按需加载来说：")]),t._v(" "),r("p",[t._v("如果是单页面应用的话，按照路由实现按需加载。监听路由，触发对应的 import('')。")]),t._v(" "),r("p",[t._v("如果是多页面应用的话，在 HtmlWebpackPlugin 中设置 chunks，即可按需加载。")]),t._v(" "),r("h2",{attrs:{id:"杂问杂记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#杂问杂记"}},[t._v("#")]),t._v(" 杂问杂记")]),t._v(" "),r("h3",{attrs:{id:"axios-会手动封装吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#axios-会手动封装吗"}},[t._v("#")]),t._v(" axios 会手动封装吗？")]),t._v(" "),r("p",[t._v("包含内容：拦截器、错误码、提示、请求类型、请求头、请求取消等。")]),t._v(" "),r("h3",{attrs:{id:"vuex-plugin-了解多少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vuex-plugin-了解多少"}},[t._v("#")]),t._v(" vuex plugin 了解多少？")]),t._v(" "),r("p",[t._v("核心的 State、Getter、Mutation、Action、Module 用的多，那 Plugin 呢？")]),t._v(" "),r("p",[t._v("解答：")]),t._v(" "),r("p",[t._v("通过 Vuex Plugin 可以轻松实现一些很酷的扩展功能。")]),t._v(" "),r("p",[t._v("例：")]),t._v(" "),r("ul",[r("li",[t._v("vuex-persistedstate 实现状态持久化")]),t._v(" "),r("li",[t._v("vuex-shared-mutations 同步标签页、窗口")]),t._v(" "),r("li",[t._v("vuex-loading 管理多个加载状态")])]),t._v(" "),r("h3",{attrs:{id:"中国有多少市"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#中国有多少市"}},[t._v("#")]),t._v(" 中国有多少市？")]),t._v(" "),r("p",[t._v("你估一下大概有多少地级市呢？如果要用 Echart 绘全国市级别的数据，打算如何处理呢？")]),t._v(" "),r("h2",{attrs:{id:"后记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[t._v("#")]),t._v(" 后记")]),t._v(" "),r("p",[t._v("哇哈哈，说是速记，此篇也并不是很速记。万事开头难，要求后面越来越精简扼要、快速记录吧！")]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Explaining Value vs. Reference in Javascript"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Memory_Management",target:"_blank",rel:"noopener noreferrer"}},[t._v("内存管理-MDN"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://developer.aliyun.com/article/63722",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构之堆和栈"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap",target:"_blank",rel:"noopener noreferrer"}},[t._v("what-and-where-are-the-stack-and-heap"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000013126460",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript到底是解释型语言还是编译型语言?"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/zhu_xun/article/details/16921413",target:"_blank",rel:"noopener noreferrer"}},[t._v("解释型语言和编译型语言的区别"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903618999500808#heading-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("10分钟了解JS堆、栈以及事件循环的概念"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/39c6ecc1b184",target:"_blank",rel:"noopener noreferrer"}},[t._v("栈内存和堆内存的一点小结"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/52b5a1879aa1",target:"_blank",rel:"noopener noreferrer"}},[t._v("内存中的堆和栈到底是什么"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903751090700295",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 编译器都做了啥？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903997615128583#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 变量存储？栈 & 堆？NONONO!"),r("OutboundLink")],1),t._v(" ⭐")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/10",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript深入之参数按值传递 "),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://snyk.io/test/npm/jquery/1.8.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cross-site Scripting (XSS)"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://vulnerabledoma.in/jquery_htmlPrefilter_xss.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("jquery_htmlPrefilter_xss"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/91437488",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何实施一次XSS攻击"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://stackoverflow.com/questions/8318581/html-vs-innerhtml-jquery-javascript-xss-attacks",target:"_blank",rel:"noopener noreferrer"}},[t._v("html-vs-innerhtml-jquery-javascript-xss-attacks"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://imweb.io/topic/582293894067ce9726778be9",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node中没搞明白require和import，你会被坑的很惨"),r("OutboundLink")],1)])])],1)}),[],!1,null,null,null);e.default=s.exports}}]);