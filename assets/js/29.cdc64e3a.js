(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{523:function(e,n,s){"use strict";s.r(n);var a=s(2),t=Object(a.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("Boxx"),e._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),s("p",[e._v("源码阅读可能会迟到，但是一定不会缺席！")]),e._v(" "),s("p",[e._v("众所周知，以下代码就是 vue 的一种直接上手方式。通过 cdn 可以在线打开 vue.js。一个文件，一万行源码，能让万千开发者赖以生存，它究竟做了什么？让人品味。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<html>\n<head></head>\n<body>\n    <div id=\"app\">\n        {{ message }}\n    </div>\n</body>\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"><\/script>\n<script>\n    var app = new Vue({\n        el: '#app',\n        data: {\n            message: 'See Vue again!'\n        },\n    })\n<\/script>\n</html>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("p",[e._v("源码cdn地址："),s("a",{attrs:{href:"https://cdn.jsdelivr.net/npm/vue/dist/vue.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cdn.jsdelivr.net/npm/vue/dist/vue.js"),s("OutboundLink")],1),e._v("，当下版本：v2.6.11")]),e._v(" "),s("p",[e._v("选择生啃的原因是，自认为已经有一定的基础，且可以更自主地选择代码段分轻重来阅读，一方面测试自己的掌握程度，一方面追求更直观的源码阅读。")]),e._v(" "),s("p",[e._v("当然你也可以选择在 "),s("a",{attrs:{href:"https://github.com/vuejs/vue/tree/dev/src",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/vuejs/vue/tree/dev/src"),s("OutboundLink")],1),e._v(" 分模块的阅读，也可以看各路大神的归类整理。")]),e._v(" "),s("p",[e._v("笔者尽量按 500 行作为一个模块来形成一个 md 文件，结合注释、自己的理解、以及附上对应查询链接来逐行细读源码。")]),e._v(" "),s("p",[e._v("目的：自我梳理，分享交流。")]),e._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc1.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（1/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc2.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（2/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc3.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（3/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc4.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（4/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc5.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（5/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc6.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（6/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc7.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（7/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc8.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（8/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc9.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（9/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc10.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（10/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc11.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（11/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc12.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（12/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc13.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（13/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc14.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（14/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc15.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（15/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc16.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（16/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc17.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（17/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc18.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（18/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc19.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（19/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc20.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（20/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc21.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（21/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc22.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（22/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc23.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（23/24）")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/interview/vue/vue-source-code/studyVuesc24.html"}},[e._v("Vue.js v2.6.11 生啃一万行源码（24/24）")])],1)]),e._v(" "),s("h2",{attrs:{id:"正文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[e._v("#")]),e._v(" 正文")]),e._v(" "),s("h3",{attrs:{id:"第-1-行至第-10-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1-行至第-10-行"}},[e._v("#")]),e._v(" 第 1 行至第 10 行")]),e._v(" "),s("p",[e._v("// init")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("(\n    function (global, factory) {\n        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Vue = factory());\n    }(\n        this,\n        function () {\n            'use strict';\n            //...核心代码...\n        }\n    )\n);\n// 变形\nif (typeof exports === 'object' && typeof module !== 'undefined') { // 检查 CommonJS\n    module.exports = factory()\n} else {\n    if (typeof define === 'function' && define.amd) { // AMD 异步模块定义 检查JavaScript依赖管理库 require.js 的存在 [link](https://stackoverflow.com/questions/30953589/what-is-typeof-define-function-defineamd-used-for)\n        define(factory)\n    } else {\n        (global = global || self, global.Vue = factory());\n    }\n}\n// 等价于\nwindow.Vue=factory() \n// factory 是个匿名函数,该匿名函数并没自执行 设计参数 window，并传入window对象。不污染全局变量，也不会被别的代码污染\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br")])]),s("h3",{attrs:{id:"第-11-行至第-111-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-11-行至第-111-行"}},[e._v("#")]),e._v(" 第 11 行至第 111 行")]),e._v(" "),s("p",[e._v("// 工具代码")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var emptyObject = Object.freeze({});// 冻结的对象无法再更改 [link](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("// 接下来是一些封装用来判断基本类型、引用类型、类型转换的方法")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("isUndef//判断未定义")])]),e._v(" "),s("li",[s("p",[e._v("isDef// 判断已定义")])]),e._v(" "),s("li",[s("p",[e._v("isTrue// 判断为 true")])]),e._v(" "),s("li",[s("p",[e._v("isFalse// 判断为 false")])]),e._v(" "),s("li",[s("p",[e._v("isPrimitive// 判断为原始类型")])]),e._v(" "),s("li",[s("p",[e._v("isObject// 判断为 obj")])]),e._v(" "),s("li",[s("p",[e._v("toRawType // 切割引用类型得到后面的基本类型，例如：[object RegExp] 得到的就是 RegExp")])]),e._v(" "),s("li",[s("p",[e._v('isPlainObject// 判断纯粹的对象："纯粹的对象"，就是通过 { }、new Object()、Object.create(null) 创建的对象')])]),e._v(" "),s("li",[s("p",[e._v("isRegExp// 判断原生引用类型")])]),e._v(" "),s("li",[s("p",[e._v("isValidArrayIndex// 检查val是否是一个有效的数组索引，其实就是验证是否是一个非无穷大的正整数")])]),e._v(" "),s("li",[s("p",[e._v("isPromise// 判断是否是 Promise")])]),e._v(" "),s("li",[s("p",[e._v("toString// 类型转成 String")])]),e._v(" "),s("li",[s("p",[e._v("toNumber// 类型转成 Number")])])]),e._v(" "),s("h3",{attrs:{id:"第-113-行至第-354-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-113-行至第-354-行"}},[e._v("#")]),e._v(" 第 113 行至第 354 行")]),e._v(" "),s("ul",[s("li",[e._v("makeMap// makeMap 方法将字符串切割，放到map中，用于校验其中的某个字符串是否存在（区分大小写）于map中\ne.g.")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var isBuiltInTag = makeMap('slot,component', true);// 是否为内置标签\nisBuiltInTag('slot'); //true\nisBuiltInTag('slot1'); //undefined\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');// 是否为保留属性\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ul",[s("li",[s("p",[e._v("remove// 数组移除元素方法")])]),e._v(" "),s("li",[s("p",[e._v("hasOwn// 判断对象是否含有某个属性")])]),e._v(" "),s("li",[s("p",[e._v("cached// ※高级函数 cached函数，输入参数为函数，返回值为函数。同时使用了闭包，其会将该传入的函数的运行结果缓存，创建一个cache对象用于缓存运行fn的运行结果。"),s("a",{attrs:{href:"http://u-to-world.com:8081/?p=287",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function cached(fn) {\n    var cache = Object.create(null);// 创建一个空对象\n    return (function cachedFn(str) {// 获取缓存对象str属性的值，如果该值存在，直接返回，不存在调用一次fn，然后将结果存放到缓存对象中\n        var hit = cache[str];\n        return hit || (cache[str] = fn(str))\n    })\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("ul",[s("li",[s("p",[e._v("camelize// 驼峰化一个连字符连接的字符串")])]),e._v(" "),s("li",[s("p",[e._v("capitalize// 对一个字符串首字母大写")])]),e._v(" "),s("li",[s("p",[e._v("hyphenateRE// 用字符号连接一个驼峰的字符串")])]),e._v(" "),s("li",[s("p",[e._v("polyfillBind// ※高级函数 参考"),s("a",{attrs:{href:"http://u-to-world.com:8081/?p=287",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)])]),e._v(" "),s("li",[s("p",[e._v("Function.prototype.bind() // "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind##Polyfill",target:"_blank",rel:"noopener noreferrer"}},[e._v("link1"),s("OutboundLink")],1),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",target:"_blank",rel:"noopener noreferrer"}},[e._v("link2"),s("OutboundLink")],1)])]),e._v(" "),s("li",[s("p",[e._v("toArray// 将"),s("a",{attrs:{href:"https://github.com/lessfish/underscore-analysis/issues/14",target:"_blank",rel:"noopener noreferrer"}},[e._v("像数组的"),s("OutboundLink")],1),e._v("转为真数组")])]),e._v(" "),s("li",[s("p",[e._v("extend// 将多个属性插入目标的对象")])]),e._v(" "),s("li",[s("p",[e._v("toObject// 将对象数组合并为单个对象。")])])]),e._v(" "),s("p",[e._v("e.g.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('console.log(toObject(["bilibli"]))\n//{0: "b", 1: "i", 2: "l", 3: "i", 4: "b", 5: "l", 6: "i", encodeHTML: ƒ}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[s("p",[e._v("no// 任何情况都返回false")])]),e._v(" "),s("li",[s("p",[e._v("identity // 返回自身")])]),e._v(" "),s("li",[s("p",[e._v("genStaticKeys// 从编译器模块生成包含静态键的字符串。TODO:demo")])]),e._v(" "),s("li",[s("p",[e._v("looseEqual//※高级函数 对对象的浅相等进行判断")])])]),e._v(" "),s("p",[e._v("//有赞、头条面试题")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function looseEqual(a, b) {\n    if (a === b) return true\n    const isObjectA = isObject(a)\n    const isObjectB = isObject(b)\n    if(isObjectA && isObjectB) {\n        try {\n            const isArrayA = Array.isArray(a)\n            const isArrayB = Array.isArray(b)\n            if(isArrayA && isArrayB) {\n                return a.length === b.length && a.every((e, i) => {\n                    return looseEqual(e, b[i])\n                })\n            }else if(!isArrayA && !isArrayB) {\n                const keysA = Object.keys(a)\n                const keysB = Object.keys(b)\n                return keysA.length === keysB.length && keys.every(key => {\n                    return looseEqual(a[key], b[key])\n                })\n            }else {\n                return false\n            }\n        } catch(e) {\n            return false\n        }\n    }else if(!isObjectA && !isObjectB) {\n        return String(a) === String(b)\n    }else {\n        return false\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br")])]),s("ul",[s("li",[e._v("looseIndexOf// 返回索引，如果没找到返回-1，否则执行looseEqual()")]),e._v(" "),s("li",[e._v("once// 确保函数只被调用一次，用到闭包")])]),e._v(" "),s("h3",{attrs:{id:"阶段小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("ul",[s("li",[e._v("cached")]),e._v(" "),s("li",[e._v("polyfillBind")]),e._v(" "),s("li",[e._v("looseEqual")])]),e._v(" "),s("p",[e._v("这三个函数要重点细品！主要的点是：闭包、类型判断，函数之间的互相调用。也即是这部分工具函数的精华！")]),e._v(" "),s("h3",{attrs:{id:"第-356-行-至-第-612-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-356-行-至-第-612-行"}},[e._v("#")]),e._v(" 第 356 行 至 第 612 行")]),e._v(" "),s("p",[e._v("// 定义常量和配置")]),e._v(" "),s("ul",[s("li",[e._v("SSR_ATTR// 服务端渲染")]),e._v(" "),s("li",[e._v("ASSET_TYPES// 全局函数 component、directive、filter")]),e._v(" "),s("li",[e._v("LIFECYCLE_HOOKS// 生命周期，无需多言")]),e._v(" "),s("li",[e._v("config // 全局配置 "),s("a",{attrs:{href:"https://www.cnblogs.com/greatdesert/p/11011015.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("unicodeRegExp//用于解析html标记、组件名称和属性pat的unicode字母")]),e._v(" "),s("li",[e._v("isReserved//  检查变量的开头是 $ 或 _")]),e._v(" "),s("li",[e._v("def// 在一个对象上定义一个属性的构造函数，其中 !!enumerable 强制转换 boolean")]),e._v(" "),s("li",[e._v("parsePath// 解析一个简单路径 TODO:")]),e._v(" "),s("li",[e._v("userAgent// 浏览器识别")]),e._v(" "),s("li",[e._v("inBrowser")]),e._v(" "),s("li",[e._v("_isServer//检测 vue的服务器渲染是否存在, 而且避免webpack去填充process")]),e._v(" "),s("li",[e._v("isNative //这里判断 函数是否是系统函数, 比如 Function Object ExpReg window document 等等, 这些函数应该使用c/c++实现的。这样可以区分 Symbol是系统函数, 还是用户自定义了一个Symbol")]),e._v(" "),s("li",[e._v("hasSymbol//这里使用了ES6的Reflect方法, 使用这个对象的目的是, 为了保证访问的是系统的原型方法, ownKeys 保证key的输出顺序, 先数组 后字符串")]),e._v(" "),s("li",[e._v("_Set// 设置一个Set")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/dhsz/p/7064913.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-616-行至第-706-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-616-行至第-706-行"}},[e._v("#")]),e._v(" 第 616 行至第 706 行")]),e._v(" "),s("p",[e._v("//设置warn,tip等全局变量 TODO:")]),e._v(" "),s("ul",[s("li",[e._v("warn")]),e._v(" "),s("li",[e._v("tip")]),e._v(" "),s("li",[e._v("generateComponentTrace// 生成组件跟踪路径（组件数规则）")]),e._v(" "),s("li",[e._v("formatComponentName// 格式化组件名")])]),e._v(" "),s("h3",{attrs:{id:"第-710-行至第-763-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-710-行至第-763-行"}},[e._v("#")]),e._v(" 第 710 行至第 763 行")]),e._v(" "),s("p",[s("strong",[e._v("Vue核心：数据监听最重要之一的 Dep")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// Dep是订阅者Watcher对应的数据依赖\nvar Dep = function Dep () {\n  //每个Dep都有唯一的ID\n  this.id = uid++;\n  //subs用于存放依赖\n  this.subs = [];\n};\n\n//向subs数组添加依赖\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n//移除依赖\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n//设置某个Watcher的依赖\n//这里添加了Dep.target是否存在的判断，目的是判断是不是Watcher的构造函数调用\n//也就是说判断他是Watcher的this.get调用的，而不是普通调用\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  var subs = this.subs.slice();\n  //通知所有绑定 Watcher。调用watcher的update()\n  for (var i = 0, l = subs.length; i &lt; l; i++) {\n    subs[i].update();\n  }\n};\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br")])]),s("p",[e._v("强烈推荐阅读："),s("a",{attrs:{href:"https://www.cnblogs.com/datiangou/p/10144883.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("Dep 相当于把 Observe 监听到的信号做一个收集（collect dependencies），然后通过dep.notify()再通知到对应 Watcher ，从而进行视图更新。")]),e._v(" "),s("h3",{attrs:{id:"第-767-行至第-900-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-767-行至第-900-行"}},[e._v("#")]),e._v(" 第 767 行至第 900 行")]),e._v(" "),s("p",[s("strong",[e._v("Vue核心：视图更新最重要的 VNode（ Virtual DOM）")])]),e._v(" "),s("ul",[s("li",[e._v("VNode")]),e._v(" "),s("li",[e._v("createEmptyVNode")]),e._v(" "),s("li",[e._v("createTextVNode")]),e._v(" "),s("li",[e._v("cloneVNode")])]),e._v(" "),s("p",[e._v("把你的 template 模板 描述成 VNode，然后一系列操作之后通过 VNode 形成真实DOM进行挂载")]),e._v(" "),s("p",[e._v("更新的时候对比旧的VNode和新的VNode，只更新有变化的那一部分，提高视图更新速度。")]),e._v(" "),s("p",[e._v("e.g.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<div class="parent" style="height:0" href="2222">\n    111111\n</div>\n\n//转成Vnode\n{    \n\n    tag: \'div\',    \n\n    data: {        \n\n        attrs:{href:"2222"}\n\n        staticClass: "parent",        \n\n        staticStyle: {            \n\n            height: "0"\n\n        }\n    },    \n\n    children: [{        \n\n        tag: undefined,        \n\n        text: "111111"\n\n    }]\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br")])]),s("p",[e._v("强烈推荐阅读："),s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1479295",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("methodsToPatch")])]),e._v(" "),s("p",[e._v("将数组的基本操作方法拓展，实现响应式，视图更新。")]),e._v(" "),s("p",[e._v("因为：对于对象的修改是可以直接触发响应式的，但是对数组直接赋值，是无法触发的，但是用到这里经过改造的方法。我们可以明显的看到 ob.dep.notify() 这一核心。")]),e._v(" "),s("h3",{attrs:{id:"阶段小结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-2"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("这一 part 最重要的，毋庸置疑是：Dep 和 VNode，需重点突破！！！")]),e._v(" "),s("h3",{attrs:{id:"第-904-行至第-1073-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-904-行至第-1073-行"}},[e._v("#")]),e._v(" 第 904 行至第 1073 行")]),e._v(" "),s("p",[s("strong",[e._v("Vue核心：数据监听最重要之一的 Observer")])]),e._v(" "),s("ul",[s("li",[e._v("核心的核心！Observer（发布者） => Dep（订阅器） => Watcher（订阅者）")])]),e._v(" "),s("p",[e._v("类比一个生活场景：报社将各种时下热点的新闻收集，然后制成各类报刊，发送到每家门口的邮箱里，订阅报刊人们看到了新闻，对新闻作出评论。")]),e._v(" "),s("p",[e._v("在这个场景里，报社==发布者，新闻==数据，邮箱==订阅器，订阅报刊的人==订阅者，对新闻评论==视图更新")]),e._v(" "),s("ul",[s("li",[e._v("Observer//Observer的调用过程：initState()--\x3eobserve(data)--\x3enew Observer()")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("ul",[s("li",[e._v("※※ defineReactive 函数，定义一个响应式对象，给对象动态添加 getter 和 setter ，用于依赖收集和派发更新。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function defineReactive (\n  obj: Object,\n  key: string,\n  val: any,\n  customSetter?: ?Function,\n  shallow?: boolean\n) {\n  const dep = new Dep()// 1. 为属性创建一个发布者\n\n  const property = Object.getOwnPropertyDescriptor(obj, key)\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  const getter = property && property.get // 依赖收集\n  const setter = property && property.set // 派发更新\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key]\n  }\n\n  let childOb = !shallow && observe(val)// 2. 获取属性值的__ob__属性\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      const value = getter ? getter.call(obj) : val\n      if (Dep.target) {\n        dep.depend()// 3. 添加 Dep\n        if (childOb) {\n          childOb.dep.depend()//4. 也为属性值添加同样的 Dep \n          if (Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      const value = getter ? getter.call(obj) : val\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter()\n      }\n      if (setter) {\n        setter.call(obj, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = !shallow && observe(newVal)\n      dep.notify()\n    }\n  })\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br")])]),s("p",[e._v("第 4 步非常重要。为对象的属性添加 dep.depend(),达到监听对象（引用的值）属性的目的")]),e._v(" "),s("h3",{attrs:{id:"重点备注"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重点备注"}},[e._v("#")]),e._v(" 重点备注")]),e._v(" "),s("p",[e._v("Vue对数组的处理跟对象还是有挺大的不同，length是数组的一个很重要的属性，无论数组增加元素或者删除元素（通过splice，push等方法操作）length的值必定会更新，为什么不直接操作监听length呢？而需要拦截splice，push等方法进行数组的状态更新？")]),e._v(" "),s("p",[e._v("原因是：在数组length属性上用defineProperty拦截的时候，会报错。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Uncaught TypeError: Cannot redefine property: length\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("再用Object.getOwnPropertyDescriptor(arr, 'length')查看一下：//（Object.getOwnPropertyDescriptor用于返回defineProperty.descriptor）")]),e._v(" "),s("p",[e._v("{\nconfigurable: false\nenumerable: false\nvalue: 0\nwritable: true\n}\nconfigurable为false，且MDN上也说重定义数组的length属性在不同浏览器上表现也是不一致的，所以还是老老实实拦截splice，push等方法，或者使用ES6的Proxy。")]),e._v(" "),s("h3",{attrs:{id:"第-1075-行至第-1153-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1075-行至第-1153-行"}},[e._v("#")]),e._v(" 第 1075 行至第 1153 行")]),e._v(" "),s("ul",[s("li",[e._v("set //在对象上设置一个属性。如果是新的属性就会触发更改通知（旧属性也会触发更新通知，因为第一个添加的时候已经监听了，之后自动触发，不再手动触发）")]),e._v(" "),s("li",[e._v("del //删除一个属性，如果必要触发通知")]),e._v(" "),s("li",[e._v("dependArray // 收集数组的依赖\n"),s("a",{attrs:{href:"http://qjzd.net:3000/topic/57cd26dad703dbd15b10c707",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"第-1157-行至第-1568-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1157-行至第-1568-行"}},[e._v("#")]),e._v(" 第 1157 行至第 1568 行")]),e._v(" "),s("p",[e._v("// 配置选项合并策略")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ar strats = config.optionMergeStrategies;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("mergeData")]),e._v(" "),s("li",[e._v("strats.data")]),e._v(" "),s("li",[e._v("mergeDataOrFn")]),e._v(" "),s("li",[e._v("mergeHook")]),e._v(" "),s("li",[e._v("mergeAssets")]),e._v(" "),s("li",[e._v("strats.watch")]),e._v(" "),s("li",[e._v("strats.computed")]),e._v(" "),s("li",[e._v("defaultStrat")]),e._v(" "),s("li",[e._v("checkComponents")]),e._v(" "),s("li",[e._v("validateComponentName")]),e._v(" "),s("li",[e._v("normalizeProps")]),e._v(" "),s("li",[e._v("normalizeInject")]),e._v(" "),s("li",[e._v("normalizeDirectives")]),e._v(" "),s("li",[e._v("assertObjectType")]),e._v(" "),s("li",[e._v("mergeOptions")])]),e._v(" "),s("p",[e._v("这一部分代码写的就是父子组件配置项的合并策略，包括：默认的合并策略、钩子函数的合并策略、filters/props、data合并策略，且包括标准的组件名、props写法有一个统一化规范要求。")]),e._v(" "),s("p",[e._v("一图以蔽之")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mergeoption.jpg",alt:""}})]),e._v(" "),s("p",[e._v("强烈推荐阅读："),s("a",{attrs:{href:"https://segmentfault.com/a/1190000014738314#item-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"阶段小结-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-3"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("这一部分最重要的就是 Observer（观察者） ，这也是 Vue 核心中的核心！其次是 mergeOptions（组件配置项的合并策略），但是通常在用的过程中，就已经了解到了大部分的策略规则。")]),e._v(" "),s("h3",{attrs:{id:"第-1570-行至第-1754-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1570-行至第-1754-行"}},[e._v("#")]),e._v(" 第 1570 行至第 1754 行")]),e._v(" "),s("ul",[s("li",[e._v("resolveAsset// resolveAsset 全局注册组件用到")])]),e._v(" "),s("p",[e._v("e.g.")]),e._v(" "),s("p",[e._v("我们的调用 resolveAsset(context.$options, 'components', tag)，即拿 vm.$options.components[tag]，这样我们就可以在 resolveAsset 的时候拿到这个组件的构造函数，并作为 createComponent 的钩子的参数。")]),e._v(" "),s("ul",[s("li",[e._v("validateProp// prop的格式校验")])]),e._v(" "),s("p",[e._v("校验prop：")]),e._v(" "),s("ol",[s("li",[e._v("prop为Boolean类型时做特殊处理")]),e._v(" "),s("li",[e._v("prop的值为空时，获取默认值，并创建观察者对象")]),e._v(" "),s("li",[e._v("prop验证")])]),e._v(" "),s("ul",[s("li",[e._v("getPropDefaultValue// 获取默认 prop 值")])]),e._v(" "),s("p",[e._v("获取 prop 的默认值 && 创建观察者对象")]),e._v(" "),s("ol",[s("li",[e._v("@param {*} vm vm 实例")]),e._v(" "),s("li",[e._v("@param {*} prop 定义选项")]),e._v(" "),s("li",[e._v("@param {*} vmkey prop 的 key")])]),e._v(" "),s("p",[e._v("// 在非生产环境下（除去 Weex 的某种情况），将对prop进行验证，包括验证required、type和自定义验证函数。")]),e._v(" "),s("ul",[s("li",[e._v("assertProp //验证 prop\nAssert whether a prop is valid.")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("case 1: 验证 required 属性\n   case 1.1: prop 定义时是 required，但是调用组件时没有传递该值（警告）\n   case 1.2: prop 定义时是非 required 的，且 value === null || value === undefined（符合要求，返回）\ncase 2: 验证 type 属性-- value 的类型必须是 type 数组里的其中之一\ncase 3: 验证自定义验证函数\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("ul",[s("li",[e._v("assertType")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("`assertType`函数，验证`prop`的值符合指定的`type`类型，分为三类：\n  - 第一类：通过`typeof`判断的类型，如`String`、`Number`、`Boolean`、`Function`、`Symbol`\n  - 第二类：通过`Object.prototype.toString`判断`Object`/`Array`\n  - 第三类：通过`instanceof`判断自定义的引用类型\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h3",{attrs:{id:"第-1756-行至第-1823-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1756-行至第-1823-行"}},[e._v("#")]),e._v(" 第 1756 行至第 1823 行")]),e._v(" "),s("p",[e._v("// 辅助函数：检测内置类型")]),e._v(" "),s("ul",[s("li",[e._v("getType")]),e._v(" "),s("li",[e._v("isSameType")]),e._v(" "),s("li",[e._v("getTypeIndex")]),e._v(" "),s("li",[e._v("getInvalidTypeMessage")]),e._v(" "),s("li",[e._v("styleValue")]),e._v(" "),s("li",[e._v("isExplicable")]),e._v(" "),s("li",[e._v("isBoolean")])]),e._v(" "),s("h3",{attrs:{id:"第-1827-行至第-1901-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1827-行至第-1901-行"}},[e._v("#")]),e._v(" 第 1827 行至第 1901 行")]),e._v(" "),s("p",[e._v("// 辅助函数：处理错误、错误打印")]),e._v(" "),s("ul",[s("li",[e._v("handleError")]),e._v(" "),s("li",[e._v("invokeWithErrorHandling")]),e._v(" "),s("li",[e._v("globalHandleError")]),e._v(" "),s("li",[e._v("logError")])]),e._v(" "),s("h3",{attrs:{id:"第-1905-行至第-2007-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1905-行至第-2007-行"}},[e._v("#")]),e._v(" 第 1905 行至第 2007 行")]),e._v(" "),s("ul",[s("li",[e._v("flushCallbacks// flushCallbacks 挨个同步执行callbacks中回调")]),e._v(" "),s("li",[e._v("MutationObserver")]),e._v(" "),s("li",[e._v("nextTick// 把传入的 cb 回调函数用 try-catch 包裹后放在一个匿名函数中推入callbacks数组中，这么做是因为防止单个 cb 如果执行错误不至于让整个JS线程挂掉，每个 cb 都包裹是防止这些回调函数如果执行错误不会相互影响，比如前一个抛错了后一个仍然可以执行。")])]),e._v(" "),s("p",[s("strong",[e._v("精髓中的精髓 —— nextTick")])]),e._v(" "),s("p",[e._v("这里有一段很重要的注释")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\n\n在vue2.5之前的版本中，nextTick基本上基于 micro task 来实现的，但是在某些情况下 micro task 具有太高的优先级，并且可能在连续顺序事件之间（例如＃4521，＃6690）或者甚至在同一事件的事件冒泡过程中之间触发（＃6566）。但是如果全部都改成 macro task，对一些有重绘和动画的场景也会有性能影响，如 issue #6813。vue2.5之后版本提供的解决办法是默认使用 micro task，但在需要时（例如在v-on附加的事件处理程序中）强制使用 macro task。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("p",[e._v("什么意思呢？分析下面这段代码。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<span id='name' ref='name'>{{ name }}</span>\n<button @click='change'>change name</button>\n\nmethods: {\n      change() {\n          this.$nextTick(() => console.log('setter前：' + this.$refs.name.innerHTML))\n          this.name = ' vue3 '\n          console.log('同步方式：' + this.$refs.name.innerHTML)\n          setTimeout(() => this.console(\"setTimeout方式：\" + this.$refs.name.innerHTML))\n          this.$nextTick(() => console.log('setter后：' + this.$refs.name.innerHTML))\n          this.$nextTick().then(() => console.log('Promise方式：' + this.$refs.name.innerHTML))\n      }\n  }\n//同步方式：vue2\n//setter前：vue2\n//setter后： vue3 \n//Promise方式： vue3 \n//setTimeout方式： vue3 \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br")])]),s("ol",[s("li",[e._v("同步方式： 当把data中的name修改之后，此时会触发name的 setter 中的 dep.notify 通知依赖本data的render watcher去 update，update 会把 flushSchedulerQueue 函数传递给 nextTick，render watcher在 flushSchedulerQueue 函数运行时 watcher.run 再走 diff -> patch 那一套重渲染 re-render 视图，这个过程中会重新依赖收集，这个过程是异步的；所以当我们直接修改了name之后打印，这时异步的改动还没有被 patch 到视图上，所以获取视图上的DOM元素还是原来的内容。")]),e._v(" "),s("li",[e._v("setter前： setter前为什么还打印原来的是原来内容呢，是因为 nextTick 在被调用的时候把回调挨个push进callbacks数组，之后执行的时候也是 for 循环出来挨个执行，所以是类似于队列这样一个概念，先入先出；在修改name之后，触发把render watcher填入 schedulerQueue 队列并把他的执行函数 flushSchedulerQueue 传递给 nextTick ，此时callbacks队列中已经有了 setter前函数 了，因为这个 cb 是在 setter前函数 之后被push进callbacks队列的，那么先入先出的执行callbacks中回调的时候先执行 setter前函数，这时并未执行render watcher的 watcher.run，所以打印DOM元素仍然是原来的内容。")]),e._v(" "),s("li",[e._v("setter后： setter后这时已经执行完 flushSchedulerQueue，这时render watcher已经把改动 patch 到视图上，所以此时获取DOM是改过之后的内容。")]),e._v(" "),s("li",[e._v("Promise方式： 相当于 Promise.then 的方式执行这个函数，此时DOM已经更改。")]),e._v(" "),s("li",[e._v("setTimeout方式： 最后执行macro task的任务，此时DOM已经更改。")])]),e._v(" "),s("p",[e._v("备注：前文提过，在依赖收集原理的响应式化方法 defineReactive 中的 setter 访问器中有派发更新 dep.notify() 方法，这个方法会挨个通知在 dep 的 subs 中收集的订阅自己变动的 watchers 执行 update。")]),e._v(" "),s("p",[e._v("强烈推荐阅读："),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/55423103",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"_0-行-至-2000-行小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-行-至-2000-行小结"}},[e._v("#")]),e._v(" 0 行 至 2000 行小结")]),e._v(" "),s("p",[e._v("0 至 2000 行主要的内容是：")]),e._v(" "),s("ol",[s("li",[e._v("工具代码")]),e._v(" "),s("li",[e._v("数据监听：Obeserve,Dep")]),e._v(" "),s("li",[e._v("Vnode")]),e._v(" "),s("li",[e._v("nextTick")])]),e._v(" "),s("h3",{attrs:{id:"第-2011-行至第-2232-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2011-行至第-2232-行"}},[e._v("#")]),e._v(" 第 2011 行至第 2232 行")]),e._v(" "),s("ul",[s("li",[e._v("perf// performance")]),e._v(" "),s("li",[e._v("initProxy// 代理对象是es6的新特性，它主要用来自定义对象一些基本操作（如查找，赋值，枚举等）。"),s("a",{attrs:{href:"https://juejin.im/post/5b11db686fb9a01e5b10eae7",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v('//proxy是一个强大的特性，为我们提供了很多"元编程"能力。')]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const handler = {\n    get: function(obj, prop) {\n        return prop in obj ? obj[prop] : 37;\n    }\n};\n\nconst p = new Proxy({}, handler);\np.a = 1;\np.b = undefined;\n\nconsole.log(p.a, p.b);      // 1, undefined\nconsole.log('c' in p, p.c); // false, 37\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5a5227ce6fb9a01c927e85c4",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("traverse// 遍历：_traverse 深度遍历，用于")])]),e._v(" "),s("p",[e._v("traverse 对一个对象做深层递归遍历，因为遍历过程中就是对一个子对象的访问，会触发它们的 getter 过程，这样就可以收集到依赖，也就是订阅它们变化的 watcher，且遍历过程中会把子响应式对象通过它们的 dep id 记录到 seenObjects，避免以后重复访问。")]),e._v(" "),s("ul",[s("li",[e._v("normalizeEvent// normalizeEvents是针对v-model的处理,例如在IE下不支持change事件，只能用input事件代替。")]),e._v(" "),s("li",[e._v("createFnInvoker// 在初始构建实例时，旧节点是不存在的,此时会调用createFnInvoker函数对事件回调函数做一层封装，由于单个事件的回调可以有多个，因此createFnInvoker的作用是对单个，多个回调事件统一封装处理，返回一个当事件触发时真正执行的匿名函数。")]),e._v(" "),s("li",[e._v("updateListeners// updateListeners的逻辑也很简单，它会遍历on事件对新节点事件绑定注册事件，对旧节点移除事件监听，它即要处理原生DOM事件的添加和移除，也要处理自定义事件的添加和移除，")])]),e._v(" "),s("h3",{attrs:{id:"阶段小结-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-4"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5d5a5dbd6fb9a06acc0084dd#heading-7",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue 的事件机制"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-2236-行至第-2422-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2236-行至第-2422-行"}},[e._v("#")]),e._v(" 第 2236 行至第 2422 行")]),e._v(" "),s("ul",[s("li",[e._v("mergeVNodeHook// 重点 合并 VNode")])]),e._v(" "),s("p",[e._v("// 把 hook 函数合并到 def.data.hook[hookey] 中，生成新的 invoker，createFnInvoker 方法")]),e._v(" "),s("p",[e._v("// vnode 原本定义了 init、prepatch、insert、destroy 四个钩子函数，而 mergeVNodeHook 函数就是把一些新的钩子函数合并进来，例如在 transition 过程中合并的 insert 钩子函数，就会合并到组件 vnode 的 insert 钩子函数中，这样当组件插入后，就会执行我们定义的 enterHook 了。")]),e._v(" "),s("ul",[s("li",[e._v("extractPropsFromVNodeData// 抽取相应的从父组件上的prop")]),e._v(" "),s("li",[e._v("checkProp// 校验 Prop")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    // The template compiler attempts to minimize the need for normalization by\n    // statically analyzing the template at compile time.\n    // 模板编译器尝试用最小的需求去规范：在编译时，静态分析模板\n\n    // For plain HTML markup, normalization can be completely skipped because the\n    // generated render function is guaranteed to return Array<VNode>. There are\n    // two cases where extra normalization is needed:\n    // 对于纯 HTML 标签，可跳过标准化，因为生成渲染函数一定会会返回 Vnode Array.有两种情况，需要额外去规范\n\n    // 1. When the children contains components - because a functional component\n    // may return an Array instead of a single root. In this case, just a simple\n    // normalization is needed - if any child is an Array, we flatten the whole\n    // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n    // because functional components already normalize their own children.\n    // 当子级包含组件时-因为功能组件可能会返回Array而不是单个根。在这种情况下，需要规范化-如果任何子级是Array，我们将整个具有Array.prototype.concat的东西。保证只有1级深度，因为功能组件已经规范了自己的子代。\n\n    // 2. When the children contains constructs that always generated nested Arrays,\n    // e.g. <template>, <slot>, v-for, or when the children is provided by user\n    // with hand-written render functions / JSX. In such cases a full normalization\n    // is needed to cater to all possible types of children values.\n    // 当子级包含始终生成嵌套数组的构造时，例如<template>，<slot>，v-for或用户提供子代时,具有手写的渲染功能/ JSX。在这种情况下，完全归一化,才能满足所有可能类型的子代值。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br")])]),s("p",[e._v("Q:这一段话说的是什么意思呢？")]),e._v(" "),s("p",[e._v("A：归一化操作其实就是将多维的数组，合并转换成一个一维的数组。在 Vue 中归一化分为三个级别，")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("不需要进行归一化")])]),e._v(" "),s("li",[s("p",[e._v("只需要简单的归一化处理，将数组打平一层")])]),e._v(" "),s("li",[s("p",[e._v("完全归一化，将一个 N 层的 children 完全打平为一维数组")])])]),e._v(" "),s("p",[e._v("利用递归来处理的，同时处理了一些边界情况。")]),e._v(" "),s("h3",{attrs:{id:"第-2426-行至第-2490-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2426-行至第-2490-行"}},[e._v("#")]),e._v(" 第 2426 行至第 2490 行")]),e._v(" "),s("ul",[s("li",[e._v("initProvide")]),e._v(" "),s("li",[e._v("initInjections")]),e._v(" "),s("li",[e._v("resolveInject")])]),e._v(" "),s("h3",{attrs:{id:"第-2497-行至第-2958-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2497-行至第-2958-行"}},[e._v("#")]),e._v(" 第 2497 行至第 2958 行")]),e._v(" "),s("ul",[s("li",[e._v("resolveSlots// Runtime helper for resolving raw children VNodes into a slot object.")]),e._v(" "),s("li",[e._v("isWhitespace")]),e._v(" "),s("li",[e._v("normalizeScopedSlots")]),e._v(" "),s("li",[e._v("normalizeScopedSlot")]),e._v(" "),s("li",[e._v("proxyNormalSlot")]),e._v(" "),s("li",[e._v("renderList// Runtime helper for rendering v-for lists.")]),e._v(" "),s("li",[e._v("renderSlot// Runtime helper for rendering "),s("code",[e._v("<slot>")])]),e._v(" "),s("li",[e._v("resolveFilter// Runtime helper for resolving filters")]),e._v(" "),s("li",[e._v("checkKeyCodes// Runtime helper for checking keyCodes from config.")]),e._v(" "),s("li",[e._v('bindObjectProps//  Runtime helper for merging v-bind="object" into a VNode\'s data.')]),e._v(" "),s("li",[e._v("renderStatic// Runtime helper for rendering static trees.")]),e._v(" "),s("li",[e._v("markOnce// Runtime helper for v-once.")])]),e._v(" "),s("p",[e._v("这一部分讲的是辅助程序 —— Vue 的各类渲染方法，从字面意思中可以知道一些方法的用途，这些方法用在Vue生成的渲染函数中。")]),e._v(" "),s("ul",[s("li",[e._v("installRenderHelpers// installRenderHelpers 执行以上。")])]),e._v(" "),s("h3",{attrs:{id:"第-2497-行至第-2958-行-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2497-行至第-2958-行-2"}},[e._v("#")]),e._v(" 第 2497 行至第 2958 行")]),e._v(" "),s("ul",[s("li",[e._v("resolveSlots// Runtime helper for resolving raw children VNodes into a slot object.")]),e._v(" "),s("li",[e._v("isWhitespace")]),e._v(" "),s("li",[e._v("normalizeScopedSlots")]),e._v(" "),s("li",[e._v("normalizeScopedSlot")]),e._v(" "),s("li",[e._v("proxyNormalSlot")]),e._v(" "),s("li",[e._v("renderList// Runtime helper for rendering v-for lists.")]),e._v(" "),s("li",[e._v("renderSlot// Runtime helper for rendering "),s("code",[e._v("<slot>")])]),e._v(" "),s("li",[e._v("resolveFilter// Runtime helper for resolving filters")]),e._v(" "),s("li",[e._v("checkKeyCodes// Runtime helper for checking keyCodes from config.")]),e._v(" "),s("li",[e._v('bindObjectProps//  Runtime helper for merging v-bind="object" into a VNode\'s data.')]),e._v(" "),s("li",[e._v("renderStatic// Runtime helper for rendering static trees.")]),e._v(" "),s("li",[e._v("markOnce// Runtime helper for v-once.")])]),e._v(" "),s("p",[e._v("这一部分讲的是辅助程序 —— Vue 的各类渲染方法，从字面意思中可以知道一些方法的用途，这些方法用在Vue生成的渲染函数中。")]),e._v(" "),s("ul",[s("li",[e._v("installRenderHelpers// installRenderHelpers 用于执行以上。")])]),e._v(" "),s("h3",{attrs:{id:"第-2962-行至第-3515-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2962-行至第-3515-行"}},[e._v("#")]),e._v(" 第 2962 行至第 3515 行")]),e._v(" "),s("ul",[s("li",[e._v("FunctionalRenderContext// 创建一个包含渲染要素的函数")]),e._v(" "),s("li",[e._v("createFunctionalComponent")])]),e._v(" "),s("p",[e._v("函数式组件的实现")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  Ctor,                                       //Ctro:组件的构造对象(Vue.extend()里的那个Sub函数)\n  propsData,                                  //propsData:父组件传递过来的数据(还未验证)\n  data,                                       //data:组件的数据\n  contextVm,                                  //contextVm:Vue实例 \n  children                                    //children:引用该组件时定义的子节点\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("// createFunctionalComponent 最后会执行我们的 render 函数")]),e._v(" "),s("p",[e._v("特注：Vue 组件是 Vue 的核心之一")]),e._v(" "),s("p",[e._v("组件分为：异步组件和函数式组件")]),e._v(" "),s("p",[e._v("这里就是"),s("strong",[e._v("函数式组件相关")])]),e._v(" "),s("blockquote",[s("p",[e._v("Vue提供了一种可以让组件变为无状态、无实例的函数化组件。从原理上说，一般子组件都会经过实例化的过程，而单纯的函数组件并没有这个过程，它可以简单理解为一个中间层，只处理数据，不创建实例，也是由于这个行为，它的渲染开销会低很多。实际的应用场景是，当我们需要在多个组件中选择一个来代为渲染，或者在将children,props,data等数据传递给子组件前进行数据处理时，我们都可以用函数式组件来完成，它本质上也是对组件的一个外部包装。")])]),e._v(" "),s("p",[e._v("函数式组件会在组件的对象定义中，将functional属性设置为true，这个属性是区别普通组件和函数式组件的关键。同样的在遇到子组件占位符时，会进入createComponent进行子组件Vnode的创建。**由于functional属性的存在，代码会进入函数式组件的分支中，并返回createFunctionalComponent调用的结果。**注意，执行完createFunctionalComponent后，后续创建子Vnode的逻辑不会执行，这也是之后在创建真实节点过程中不会有子Vnode去实例化子组件的原因。(无实例)")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-dynamic-async.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方说明"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("cloneAndMarkFunctionalResult")]),e._v(" "),s("li",[e._v("mergeProps")]),e._v(" "),s("li",[e._v("componentVNodeHooks")]),e._v(" "),s("li",[e._v("createComponent\n// createComponent 方法创建一个组件的 VNode。这 createComponent 是创建子组件的关键")])]),e._v(" "),s("p",[e._v("// 创建组件的 VNode 时，若组件是函数式组件，则其 VNode 的创建过程将与普通组件有所区别。")]),e._v(" "),s("ul",[s("li",[e._v("createComponentInstanceForVnode // "),s("a",{attrs:{href:"https://github.com/HcySunYang/vue-design/issues/199",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("推荐阅读："),s("a",{attrs:{href:"https://juejin.im/post/5ca2437b51882543b7019f38#heading-7",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("p",[e._v("installComponentHooks // installComponentHooks就是把 componentVNodeHooks的钩子函数合并到data.hook中，，在合并过程中，如果某个时机的钩子已经存在data.hook中，那么通过执行mergeHook函数做合并勾子。")])]),e._v(" "),s("li",[s("p",[e._v("mergeHook$1")])]),e._v(" "),s("li",[s("p",[e._v("transformModel")])]),e._v(" "),s("li",[s("p",[e._v("createElement// 创建元素")])]),e._v(" "),s("li",[s("p",[e._v("_createElement")])]),e._v(" "),s("li",[s("p",[e._v("applyNS")])]),e._v(" "),s("li",[s("p",[e._v("registerDeepBindings")])]),e._v(" "),s("li",[s("p",[e._v("initRender // 初识渲染")])])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/79538534",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"阶段小结-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-5"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("这一部分主要是围绕 Vue 的组件的创建。Vue 将页面划分成各类的组件，组件思想是 Vue 的精髓之一。")]),e._v(" "),s("h3",{attrs:{id:"第-3517-行至第-3894-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-3517-行至第-3894-行"}},[e._v("#")]),e._v(" 第 3517 行至第 3894 行")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("renderMixin // 引入视图渲染混合函数")])]),e._v(" "),s("li",[s("p",[e._v("ensureCtor")])]),e._v(" "),s("li",[s("p",[e._v("createAsyncPlaceholder")])]),e._v(" "),s("li",[s("p",[e._v("resolveAsyncComponent")])]),e._v(" "),s("li",[s("p",[e._v("isAsyncPlaceholder")])]),e._v(" "),s("li",[s("p",[e._v("getFirstComponentChild")])]),e._v(" "),s("li",[s("p",[e._v("initEvents// 初始化事件")])]),e._v(" "),s("li",[s("p",[e._v("add")])]),e._v(" "),s("li",[s("p",[e._v("remove$1")])]),e._v(" "),s("li",[s("p",[e._v("createOnceHandler")])]),e._v(" "),s("li",[s("p",[e._v("updateComponentListeners")])]),e._v(" "),s("li",[s("p",[e._v("eventsMixin // 挂载事件响应相关方法")])])]),e._v(" "),s("h3",{attrs:{id:"第-3898-行至第-4227-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-3898-行至第-4227-行"}},[e._v("#")]),e._v(" 第 3898 行至第 4227 行")]),e._v(" "),s("ul",[s("li",[e._v("setActiveInstance")]),e._v(" "),s("li",[e._v("initLifecycle")]),e._v(" "),s("li",[e._v("lifecycleMixin// 挂载生命周期相关方法")]),e._v(" "),s("li",[e._v("mountComponent")]),e._v(" "),s("li",[e._v("updateChildComponent")]),e._v(" "),s("li",[e._v("isInInactiveTree")]),e._v(" "),s("li",[e._v("activateChildComponent")]),e._v(" "),s("li",[e._v("deactivateChildComponent")]),e._v(" "),s("li",[e._v("callHook")])]),e._v(" "),s("blockquote",[s("p",[e._v("几乎所有JS框架或插件的编写都有一个类似的模式，即向全局输出一个类或者说构造函数，通过创建实例来使用这个类的公开方法，或者使用类的静态全局方法辅助实现功能。相信精通Jquery或编写过Jquery插件的开发者会对这个模式非常熟悉。Vue.js也如出一辙，只是一开始接触这个框架的时候对它所能实现的功能的感叹盖过了它也不过是一个内容较为丰富和精致的大型类的本质。")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5c62218e6fb9a049e063cf5e",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"阶段小结-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-6"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("这里要对 js 的继承有一个深刻的理解。\n"),s("a",{attrs:{href:"https://juejin.im/entry/58dfbe0361ff4b006b166388",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("ol",[s("li",[e._v("类继承")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('function Animal(){\n    this.live=true;\n}\nfunction Dog(name){\n    this.name=name\n}\nDog.prototype=new Animal()\nvar dog1=new Dog("wangcai")\nconsole.log(dog1)// Dog {name: "wangcai"}\nconsole.log(dog1.live)// true\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("构造继承")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('function Animal(name,color){\n    this.name=name;\n    this.color=color;}\nfunction Dog(){\n    Animal.apply(this,arguments)\n}\nvar dog1=new Dog("wangcai","balck")\nconsole.log(dog1)// Dog {name: "wangcai", color: "balck"}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("组合继承（类继承 + 构造继承）")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('function Animal(name,color){\n    this.name=name;\n    this.color=color;\n    this.live=true;\n}\nfunction Dog(){\n    Animal.apply(this, arguments);   \n}\nDog.prototype=new Animal()\nvar dog1=new Dog("wangcai","black")\nconsole.log(dog1)// Dog {name: "wangcai", color: "black", live: true}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("寄生组合式继承")]),e._v(" "),s("li",[e._v("extend继承")])]),e._v(" "),s("p",[e._v("Vue 同 Jquery 一样，本质也是一个大型的类库。")]),e._v(" "),s("p",[e._v("// 定义Vue构造函数，形参options")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function Vue (options) {\n  if (process.env.NODE_ENV !== 'production' && !(this instanceof Vue) {\n    warn('Vue is a constructor and should be called with the `new` keyword')\n  }\n  // ...  \n  this._init(options)\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("// 功能函数")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 引入初始化混合函数\nimport { initMixin } from './init'\n// 引入状态混合函数\nimport { stateMixin } from './state'\n// 引入视图渲染混合函数\nimport { renderMixin } from './render'\n// 引入事件混合函数\nimport { eventsMixin } from './events'\n// 引入生命周期混合函数\nimport { lifecycleMixin } from './lifecycle'\n// 引入warn控制台错误提示函数\nimport { warn } from '../util/index'\n...\n\n// 挂载初始化方法\ninitMixin(Vue)\n// 挂载状态处理相关方法\nstateMixin(Vue)\n// 挂载事件响应相关方法\neventsMixin(Vue)\n// 挂载生命周期相关方法\nlifecycleMixin(Vue)\n// 挂载视图渲染方法\nrenderMixin(Vue)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br")])]),s("h3",{attrs:{id:"第-4231-行至第-4406-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-4231-行至第-4406-行"}},[e._v("#")]),e._v(" 第 4231 行至第 4406 行")]),e._v(" "),s("ul",[s("li",[e._v("resetSchedulerState // 重置状态")]),e._v(" "),s("li",[e._v("flushSchedulerQueue// 据变化最终会把flushSchedulerQueue传入到nextTick中执行flushSchedulerQueue函数会遍历执行watcher.run()方法，watcher.run()方法最终会完成视图更新")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/vdom.png",alt:""}})]),e._v(" "),s("p",[e._v("vue中dom的更像并不是实时的，当数据改变后，vue会把渲染watcher添加到异步队列，异步执行，同步代码执行完成后再统一修改dom。")]),e._v(" "),s("ul",[s("li",[e._v("callUpdatedHooks")]),e._v(" "),s("li",[e._v("queueActivatedComponent")]),e._v(" "),s("li",[e._v("callActivatedHooks")]),e._v(" "),s("li",[e._v("queueWatcher")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1356678",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-4412-行至第-4614-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-4412-行至第-4614-行"}},[e._v("#")]),e._v(" 第 4412 行至第 4614 行")]),e._v(" "),s("ul",[s("li",[e._v("Watcher// !important 重中之重的重点")])]),e._v(" "),s("p",[e._v("这一 part 在 Watcher 的原型链上定义了get、addDep、cleanupDeps、update、run、evaluate、depend、teardown 方法，即 Watcher 的具体实现的一些方法，比如新增依赖、清除、更新试图等。")]),e._v(" "),s("p",[e._v("每个Vue组件都有一个对应的watcher，这个watcher将会在组件render的时候收集组件所依赖的数据，并在依赖有更新的时候，触发组件重新渲染。")]),e._v(" "),s("h3",{attrs:{id:"第-4618-行至第-5071-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-4618-行至第-5071-行"}},[e._v("#")]),e._v(" 第 4618 行至第 5071 行")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export function initMixin (Vue: Class<Component>) {\n  Vue.prototype._init = function (options?: Object) {\n    const vm: Component = this\n    // a uid\n    vm._uid = uid++\n\n    let startTag, endTag\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = `vue-perf-start:${vm._uid}`\n      endTag = `vue-perf-end:${vm._uid}`\n      mark(startTag)\n    }\n    // 如果是Vue的实例，则不需要被observe\n    // a flag to avoid this being observed\n    vm._isVue = true\n    // merge options\n    // 第一步： options参数的处理\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options)\n    } else {\n      // mergeOptions接下来我们会详细讲哦~\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      )\n    }\n    // 第二步： renderProxy\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm)\n    } else {\n      vm._renderProxy = vm\n    }\n    // expose real self\n    vm._self = vm\n    // 第三步： vm的生命周期相关变量初始化\n    initLifecycle(vm)\n    \n    // 第四步： vm的事件监听初始化\n    initEvents(vm)\n    // 第五步： vm的编译render初始化\n    initRender(vm)\n    // 第六步： vm的beforeCreate生命钩子的回调\n    callHook(vm, 'beforeCreate')\n    // 第七步： vm在data/props初始化之前要进行绑定\n    initInjections(vm) // resolve injections before data/props\n    \n    // 第八步： vm的sate状态初始化\n    initState(vm)\n    // 第九步： vm在data/props之后要进行提供\n    initProvide(vm) // resolve provide after data/props\n    // 第十步： vm的created生命钩子的回调\n    callHook(vm, 'created')\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false)\n      mark(endTag)\n      measure(`vue ${vm._name} init`, startTag, endTag)\n    }\n    // 第十一步：render & mount\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br")])]),s("p",[e._v("主要是为我们的Vue原型上定义一个方法_init。然后当我们执行new Vue(options) 的时候，会调用这个方法。而这个_init方法的实现，便是我们需要关注的地方。 前面定义vm实例都挺好理解的，主要我们来看一下mergeOptions这个方法，其实Vue在实例化的过程中，会在代码运行后增加很多新的东西进去。我们把我们传入的这个对象叫options，实例中我们可以通过vm.$options访问到。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5bb471c0f265da0afb335931",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"_0-至-5000-行-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-至-5000-行-总结"}},[e._v("#")]),e._v(" 0 至 5000 行 总结")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/vueRender.jpg",alt:""}})]),e._v(" "),s("p",[e._v("从 0 至 5000 行我们可以清晰看到 Vue 模板编译的轮廓了。")]),e._v(" "),s("ul",[s("li",[e._v("笔者将这一部分出现的关键词进行按顺序罗列：")])]),e._v(" "),s("ol",[s("li",[e._v("function (global, factory)")]),e._v(" "),s("li",[e._v("工具函数")]),e._v(" "),s("li",[e._v("Dep")]),e._v(" "),s("li",[e._v("Observe")]),e._v(" "),s("li",[e._v("VNode")]),e._v(" "),s("li",[e._v("nextTick")]),e._v(" "),s("li",[e._v("事件机制")]),e._v(" "),s("li",[e._v("Render")]),e._v(" "),s("li",[e._v("components")]),e._v(" "),s("li",[e._v("Watcher")])]),e._v(" "),s("p",[e._v("我们可以总结：Vue 的核心就是 VDOM ！对 DOM 对象的操作调整为操作 VNode 对象，采用 diff 算法比较差异，一次 patch。")]),e._v(" "),s("p",[e._v("render 的流程是:")]),e._v(" "),s("ol",[s("li",[e._v("Vue使用HTML的Parser将HTML模板解析为AST")]),e._v(" "),s("li",[e._v("function render(){}")]),e._v(" "),s("li",[e._v("Virtual DOM")]),e._v(" "),s("li",[e._v("watcher将会在组件render的时候收集组件所依赖的数据，并在依赖有更新的时候，触发组件重新渲染")])]),e._v(" "),s("p",[e._v("推荐阅读："),s("a",{attrs:{href:"https://gershonv.github.io/2018/07/04/vue-render/",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-5073-行至第-5446-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-5073-行至第-5446-行"}},[e._v("#")]),e._v(" 第 5073 行至第 5446 行")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 定义 Vue 构造函数\nfunction Vue (options) {\n      if (!(this instanceof Vue)\n      ) {\n        warn('Vue is a constructor and should be called with the `new` keyword');\n      }\n      this._init(options);\n    }\n\n// 将 Vue 作为参数传递给导入的五个方法\ninitMixin(Vue);// 初始化 Mixin\nstateMixin(Vue);// 状态 Mixin\neventsMixin(Vue);// 事件 Mixin\nlifecycleMixin(Vue);// 生命周期 Mixin\nrenderMixin(Vue);// 渲染 Mixin\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("p",[e._v("这一部分就是初始化函数的调用。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// \nObject.defineProperty(Vue.prototype, '$isServer', {\n      get: isServerRendering\n    });\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("为什么这么写？")]),e._v(" "),s("p",[e._v("Object.defineProperty能保护引入的库不被重新赋值，如果你尝试重写，程序会抛出“TypeError: Cannot assign to read only property”的错误。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://wufenfen.github.io/2017/04/24/%E3%80%90%E8%AF%91%E3%80%91Vue%E6%A1%86%E6%9E%B6%E5%BC%95%E5%85%A5JS%E5%BA%93%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"}},[e._v("link-【译】Vue框架引入JS库的正确姿势"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 版本\nVue.version = '2.6.11';\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h3",{attrs:{id:"阶段小结-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-7"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("这一部分是 Vue index.js 的内容,包括 Vue 的整个挂在过程")]),e._v(" "),s("ol",[s("li",[e._v("先进入 initMixin(Vue),在prototype上挂载")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.prototype._init = function (options) {} \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("进入 stateMixin(Vue),在prototype上挂载 Vue.prototype.$data")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.prototype.$props \nVue.prototype.$set = set \nVue.prototype.$delete = del \nVue.prototype.$watch = function(){} \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("进入eventsMixin(Vue),在prototype上挂载")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.prototype.$on \nVue.prototype.$once \nVue.prototype.$off \nVue.prototype.$emit\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("进入lifecycleMixin(Vue),在prototype上挂载")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.prototype._update \nVue.prototype.$forceUpdate \nVue.prototype.$destroy\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("ol",{attrs:{start:"5"}},[s("li",[e._v("最后进入renderMixin(Vue),在prototype上挂载 Vue.prototype.$nextTick")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.prototype._render \nVue.prototype._o = markOnce \nVue.prototype._n = toNumber \nVue.prototype._s = toString \nVue.prototype._l = renderList \nVue.prototype._t = renderSlot\nVue.prototype._q = looseEqual \nVue.prototype._i = looseIndexOf \nVue.prototype._m = renderStatic \nVue.prototype._f = resolveFilter \nVue.prototype._k = checkKeyCodes \nVue.prototype._b = bindObjectProps \nVue.prototype._v = createTextVNode \nVue.prototype._e = createEmptyVNode \nVue.prototype._u = resolveScopedSlots \nVue.prototype._g = bindObjectListeners\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("blockquote",[s("p",[e._v("mergeOptions使用策略模式合并传入的options和Vue.options合并后的代码结构,\n可以看到通过合并策略components,directives,filters继承了全局的,\n这就是为什么全局注册的可以在任何地方使用,因为每个实例都继承了全局的,\n所以都能找到。")])]),e._v(" "),s("p",[e._v("推荐阅读：")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5ab07a63f265da2389258b12#heading-16",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5bb471c0f265da0afb335931#heading-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("new 一个 Vue 对象发生了什么：")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/newvue.png",alt:""}})]),e._v(" "),s("h3",{attrs:{id:"第-5452-行至第-5655-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-5452-行至第-5655-行"}},[e._v("#")]),e._v(" 第 5452 行至第 5655 行")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// these are reserved for web because they are directly compiled away\n// during template compilation\n\n// 这些是为web保留的，因为它们是直接编译掉的\n// 在模板编译期间\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("ul",[s("li",[e._v("isBooleanAttr")]),e._v(" "),s("li",[e._v("genClassForVnode// class 转码获取vonde 中的staticClass 静态class  和class动态class转义成真实dom需要的class格式。然后返回class字符串")]),e._v(" "),s("li",[e._v("mergeClassData// mergeClassData")]),e._v(" "),s("li",[e._v("renderClass// 渲染calss 这里获取到已经转码的calss")]),e._v(" "),s("li",[e._v("stringifyClass// 转码 class，把数组格式，对象格式的calss 全部转化成 字符串格式")]),e._v(" "),s("li",[e._v("stringifyArray// 数组字符串变成字符串，然后用空格 隔开 拼接 起来变成字符串")]),e._v(" "),s("li",[e._v("stringifyObject// 对象字符串变成字符串，然后用空格 隔开 拼接 起来变成字符串")]),e._v(" "),s("li",[e._v("namespaceMap")]),e._v(" "),s("li",[e._v("isHTMLTag")]),e._v(" "),s("li",[e._v("isSVG// 判断svg 标签")]),e._v(" "),s("li",[e._v("isUnknownElement// 检查dom 节点的tag标签 类型 是否是VPre 标签 或者是判断是否是浏览器自带原有的标签")]),e._v(" "),s("li",[e._v("isTextInputType //  //匹配'text,number,password,search,email,tel,url'")])]),e._v(" "),s("p",[e._v("这一 part 没有特别要说的，主要是对 class 的转码、合并和其他二次封装的工具函数。实际上我们在 Vue 源码很多地方看到了这样的封装，在平常的开发中，我们也得要求自己封装基本的函数。如果能形成自己习惯用的函数的库，会方便很多，且对自己能力也是一个提升。")]),e._v(" "),s("h3",{attrs:{id:"第-5659-行至第-5792-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-5659-行至第-5792-行"}},[e._v("#")]),e._v(" 第 5659 行至第 5792 行")]),e._v(" "),s("ul",[s("li",[e._v("createElement // 创建元素，实例化 VNode")]),e._v(" "),s("li",[e._v("createElementNS")]),e._v(" "),s("li",[e._v("createTextNode")]),e._v(" "),s("li",[e._v("createComment")]),e._v(" "),s("li",[e._v("insertBefore")]),e._v(" "),s("li",[e._v("removeChild")]),e._v(" "),s("li",[e._v("appendChild")]),e._v(" "),s("li",[e._v("parentNode")]),e._v(" "),s("li",[e._v("nextSibling")]),e._v(" "),s("li",[e._v("tagName")]),e._v(" "),s("li",[e._v("setTextContent")]),e._v(" "),s("li",[e._v("setStyleScope")]),e._v(" "),s("li",[e._v("nodeOps")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// nodeOps:\n    createElement: createElement$1, //创建一个真实的dom\n    createElementNS: createElementNS, //创建一个真实的dom svg方式\n    createTextNode: createTextNode, // 创建文本节点\n    createComment: createComment,  // 创建一个注释节点\n    insertBefore: insertBefore,  //插入节点 在xxx  dom 前面插入一个节点\n    removeChild: removeChild,   //删除子节点\n    appendChild: appendChild,  //添加子节点 尾部\n    parentNode: parentNode,  //获取父亲子节点dom\n    nextSibling: nextSibling,     //获取下一个兄弟节点\n    tagName: tagName,   //获取dom标签名称\n    setTextContent: setTextContent, //  //设置dom 文本\n    setStyleScope: setStyleScope  //设置组建样式的作用域\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("ul",[s("li",[e._v("ref")]),e._v(" "),s("li",[e._v("registerRef\n// 注册ref或者删除ref。比如标签上面设置了ref='abc' 那么该函数就是为this.$refs.abc 注册ref 把真实的dom存进去")])]),e._v(" "),s("h3",{attrs:{id:"阶段小结-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-8"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("这里的重点想必就是 “ref” 了")]),e._v(" "),s("p",[e._v("在绝大多数情况下，我们最好不要触达另一个组件实例内部或手动操作 DOM 元素。不过也确实在一些情况下做这些事情是合适的。ref 为我们提供了解决途径。")]),e._v(" "),s("p",[e._v("ref属性不是一个标准的HTML属性，只是Vue中的一个属性。")]),e._v(" "),s("h3",{attrs:{id:"第-5794-行至第-6006-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-5794-行至第-6006-行"}},[e._v("#")]),e._v(" 第 5794 行至第 6006 行")]),e._v(" "),s("p",[e._v("Virtual DOM !")]),e._v(" "),s("p",[e._v("没错，这里就是 虚拟 dom 生成的源码相关。")]),e._v(" "),s("ul",[s("li",[e._v("sameVnode")]),e._v(" "),s("li",[e._v("sameInputType")]),e._v(" "),s("li",[e._v("createKeyToOldIdx")]),e._v(" "),s("li",[e._v("createPatchFunction // !important:patch 把 vonde 渲染成真实的 dom")]),e._v(" "),s("li",[e._v("emptyNodeAt")]),e._v(" "),s("li",[e._v("createRmCb")]),e._v(" "),s("li",[e._v("removeNode")]),e._v(" "),s("li",[e._v("isUnknownElement$$1")]),e._v(" "),s("li",[e._v("createElm // 创造 dom 节点")]),e._v(" "),s("li",[e._v("createComponent // 创建组件，并且判断它是否实例化过")]),e._v(" "),s("li",[e._v("initComponent")])]),e._v(" "),s("blockquote",[s("p",[e._v("createElement方法接收一个tag参数，在内部会去判断tag标签的类型，从而去决定是创建一个普通的VNode还是一个组件类VNode；")])]),e._v(" "),s("p",[e._v("createComponent 的实现，在渲染一个组件的时候的 3 个关键逻辑：")]),e._v(" "),s("ol",[s("li",[e._v("构造子类构造函数，")]),e._v(" "),s("li",[e._v("安装组件钩子函数")]),e._v(" "),s("li",[e._v("实例化 vnode。createComponent 后返回的是组件 vnode，它也一样走到 vm._update 方法")])]),e._v(" "),s("p",[e._v("我们传入的 vnode 是组件渲染的 vnode，也就是我们之前说的 vm._vnode，如果组件的根节点是个普通元素，那么 vm._vnode 也是普通的 vnode，这里 createComponent(vnode, insertedVnodeQueue, parentElm, refElm) 的返回值是 false。接下来的过程就系列一的步骤一样了，先创建一个父节点占位符，然后再遍历所有子 VNode 递归调用 createElm，在遍历的过程中，如果遇到子 VNode 是一个组件的 VNode，则重复过程，这样通过一个递归的方式就可以完整地构建了整个组件树。")]),e._v(" "),s("blockquote",[s("p",[e._v("initComponent 初始化组建，如果没有tag标签则去更新真实dom的属性，如果有tag标签，则注册或者删除ref 然后为insertedVnodeQueue.push(vnode);")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/hao123456/p/10616356.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-6008-行至第-6252-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-6008-行至第-6252-行"}},[e._v("#")]),e._v(" 第 6008 行至第 6252 行")]),e._v(" "),s("ul",[s("li",[e._v("reactivateComponent")]),e._v(" "),s("li",[e._v("insert")]),e._v(" "),s("li",[e._v("createChildren")]),e._v(" "),s("li",[e._v("isPatchable")]),e._v(" "),s("li",[e._v("invokeCreateHooks")]),e._v(" "),s("li",[e._v("setScope")]),e._v(" "),s("li",[e._v("addVnodes // 添加 Vnodes")]),e._v(" "),s("li",[e._v("invokeDestroyHook")]),e._v(" "),s("li",[e._v("removeVnodes // 移除 Vnodes")]),e._v(" "),s("li",[e._v("removeAndInvokeRemoveHook")]),e._v(" "),s("li",[e._v("updateChildren // 在patchVnode中提到，如果新老节点都有子节点，但是不相同的时候就会调用 updateChildren，这个函数通过diff算法尽可能的复用先前的DOM节点。")])]),e._v(" "),s("p",[e._v("// diff 算法就在这里辣！"),s("a",{attrs:{href:"https://juejin.im/post/5affd01551882542c83301da",target:"_blank",rel:"noopener noreferrer"}},[e._v("详解link"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n    let oldStartIdx = 0\n    let newStartIdx = 0\n    let oldEndIdx = oldCh.length - 1\n    let oldStartVnode = oldCh[0]\n    let oldEndVnode = oldCh[oldEndIdx]\n    let newEndIdx = newCh.length - 1\n    let newStartVnode = newCh[0]\n    let newEndVnode = newCh[newEndIdx]\n    let oldKeyToIdx, idxInOld, elmToMove, refElm \n    \n    while(oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (isUndef(oldStartVnode)) {\n            oldStartVnode = oldCh[++oldStartIdx]\n        } else if (isUndef(oldEndVnode)) {\n            oldEndVnode = oldCh[--oldEndIdx]\n        } else if (sameVnode(oldStartVnode, newStartVnode)) {\n            patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue)\n            oldStartVnode = oldCh[++oldStartIdx]\n            newStartVnode = newCh[++newStartIdx]\n        } else if (sameVnode(oldEndVnode, newEndVnode)) {\n            patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue)\n            oldEndVnode = oldCh[--oldEndIdx]\n            newEndVnode = newCh[--newEndIdx]\n        } else if (sameVnode(oldStartVnode, newEndVnode)) {\n            patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue)\n            canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n            oldStartVnode = oldCh[++oldStartIdx]\n        newEndVnode = newCh[--newEndIdx]\n        } else if (sameVnode(oldEndVnode, newStartVnode)) {\n            patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue)\n            canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n            oldEndVnode = oldCh[--oldEndIdx]\n            newStartVnode = newCh[++newStartIdx]\n        } else {\n            if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)\n            idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null\n            if (isUndef(idxInOld)) {\n                createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm)\n                newStartVnode = newCh[++newStartIdx]\n            } else {\n                elmToMove = oldCh[idxInOld]\n                if (sameVnode(elmToMove, newStartVnode)) {\n                    patchVnode(elmToMove, newStartVnode, insertedVnodeQueue)\n                    oldCh[idxInOld] = undefined\n                    canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm)\n                    newStartVnode = newCh[++newStartIdx]\n                } else {\n                    createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm)\n                    newStartVnode = newCh[++newStartIdx]\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br")])]),s("ul",[s("li",[e._v("checkDuplicateKeys")]),e._v(" "),s("li",[e._v("findIdxInOld")])]),e._v(" "),s("p",[e._v("reactivateComponent 承接上文 createComponent")]),e._v(" "),s("h3",{attrs:{id:"第-6259-行至第-6561-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-6259-行至第-6561-行"}},[e._v("#")]),e._v(" 第 6259 行至第 6561 行")]),e._v(" "),s("ul",[s("li",[e._v("patchVnode // 如果符合sameVnode，就不会渲染vnode重新创建DOM节点，而是在原有的DOM节点上进行修补，尽可能复用原有的DOM节点。")]),e._v(" "),s("li",[e._v("invokeInsertHook")]),e._v(" "),s("li",[e._v("isRenderedModule")]),e._v(" "),s("li",[e._v("hydrate")]),e._v(" "),s("li",[e._v("assertNodeMatch")]),e._v(" "),s("li",[e._v("patch // !important: patch的本质是将新旧vnode进行比较，创建、删除或者更新DOM节点/组件实例")])]),e._v(" "),s("h3",{attrs:{id:"阶段小结-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-9"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("Vue 的核心思想：组件化。")]),e._v(" "),s("p",[e._v("这一部分是关于构建组件树，形成虚拟 dom ，以及非常重要的 patch 方法。")]),e._v(" "),s("p",[e._v("再来亿遍：")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("原因：当修改某条数据的时候，这时候js会将整个DOM Tree进行替换，这种操作是相当消耗性能的。所以在Vue中引入了Vnode的概念：Vnode是对真实DOM节点的模拟，可以对Vnode Tree进行增加节点、删除节点和修改节点操作。这些过程都只需要操作VNode Tree，不需要操作真实的DOM，大大的提升了性能。修改之后使用diff算法计算出修改的最小单位，在将这些小单位的视图进行更新。")])]),e._v(" "),s("li",[s("p",[e._v("原理：data中定义了一个变量a，并且模板中也使用了它，那么这里生成的Watcher就会加入到a的订阅者列表中。当a发生改变时，对应的订阅者收到变动信息，这时候就会触发Watcher的update方法，实际update最后调用的就是在这里声明的updateComponent。\n当数据发生改变时会触发回调函数updateComponent，updateComponent是对patch过程的封装。patch的本质是将新旧vnode进行比较，创建、删除或者更新DOM节点/组件实例。")])])]),e._v(" "),s("p",[e._v("联系前后QA")]),e._v(" "),s("p",[e._v("Q：vue.js 同时多个赋值是一次性渲染还是多次渲染DOM？")]),e._v(" "),s("p",[e._v("A：官网已给出答案："),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cn.vuejs.org/v2/guide/reactivity.html"),s("OutboundLink")],1)]),e._v(" "),s("blockquote",[s("p",[e._v("可能你还没有注意到，Vue 在更新 DOM 时是异步执行的。只要侦听到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据变更。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作是非常重要的。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部对异步队列尝试使用原生的 Promise.then、MutationObserver 和 setImmediate，如果执行环境不支持，则会采用 setTimeout(fn, 0) 代替。")])]),e._v(" "),s("blockquote",[s("p",[e._v("例如，当你设置 vm.someData = 'new value'，该组件不会立即重新渲染。当刷新队列时，组件会在下一个事件循环“tick”中更新。多数情况我们不需要关心这个过程，但是如果你想基于更新后的 DOM 状态来做点什么，这就可能会有些棘手。虽然 Vue.js 通常鼓励开发人员使用“数据驱动”的方式思考，避免直接接触 DOM，但是有时我们必须要这么做。为了在数据变化之后等待 Vue 完成更新 DOM，可以在数据变化之后立即使用 Vue.nextTick(callback)。这样回调函数将在 DOM 更新完成后被调用。")])]),e._v(" "),s("p",[e._v("这样是不是有种前后连贯起来的感觉，原来 nextTick 是这样子的。")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.im/post/5ddb91e451882572fe6edf69#heading-4",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考link1"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5e2804e1e51d453c9e155f08#heading-4",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考link2"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"第-6566-行至第-7069-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-6566-行至第-7069-行"}},[e._v("#")]),e._v(" 第 6566 行至第 7069 行")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("directives // 官网：https://cn.vuejs.org/v2/guide/custom-directive.html")])]),e._v(" "),s("li",[s("p",[e._v("updateDirectives // 更新指令")])]),e._v(" "),s("li",[s("p",[e._v("_update")])]),e._v(" "),s("li",[s("p",[e._v("normalizeDirectives // 统一directives的格式")])]),e._v(" "),s("li",[s("p",[e._v("getRawDirName // 返回指令名称 或者属性name名称+修饰符")])]),e._v(" "),s("li",[s("p",[e._v("callHook$1 //触发指令钩子函数")])]),e._v(" "),s("li",[s("p",[e._v("updateAttrs // 更新属性")])]),e._v(" "),s("li",[s("p",[e._v("setAttr // 设置属性")])]),e._v(" "),s("li",[s("p",[e._v("baseSetAttr")])]),e._v(" "),s("li",[s("p",[e._v("updateClass // 更新样式")])]),e._v(" "),s("li",[s("p",[e._v("klass")])]),e._v(" "),s("li",[s("p",[e._v('parseFilters // 处理value 解析成正确的value，把过滤器 转换成 vue 虚拟dom的解析方法函数 比如把过滤器 \' ab | c | d\' 转换成 _f("d")(_f("c")(ab))')])]),e._v(" "),s("li",[s("p",[e._v("wrapFilter // 转换过滤器格式")])]),e._v(" "),s("li",[s("p",[e._v("baseWarn // 基础警告")])]),e._v(" "),s("li",[s("p",[e._v("pluckModuleFunction //循环过滤数组或者对象的值，根据key循环 过滤对象或者数组[key]值，如果不存在则丢弃，如果有相同多个的key值，返回多个值的数组")])]),e._v(" "),s("li",[s("p",[e._v("addProp //在虚拟dom中添加prop属性")])]),e._v(" "),s("li",[s("p",[e._v("addAttr //添加attrs属性")])]),e._v(" "),s("li",[s("p",[e._v("addRawAttr //添加原始attr(在预转换中使用)")])]),e._v(" "),s("li",[s("p",[e._v("addDirective //为虚拟dom 添加一个 指令directives属性 对象")])]),e._v(" "),s("li",[s("p",[e._v("addHandler // 为虚拟dom添加events 事件对象属性")])])]),e._v(" "),s("p",[e._v("前面围绕“指令”和“过滤器”的一些基础工具函数。")]),e._v(" "),s("p",[e._v("后面围绕为虚拟 dom 添加属性、事件等具体实现函数。")]),e._v(" "),s("h3",{attrs:{id:"第-7071-行至第-7298-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7071-行至第-7298-行"}},[e._v("#")]),e._v(" 第 7071 行至第 7298 行")]),e._v(" "),s("ul",[s("li",[e._v("getRawBindingAttr")]),e._v(" "),s("li",[e._v("getBindingAttr //  获取 :属性 或者v-bind:属性，或者获取属性 移除传进来的属性name，并且返回获取到 属性的值")]),e._v(" "),s("li",[e._v("getAndRemoveAttr // 移除传进来的属性name，并且返回获取到 属性的值")]),e._v(" "),s("li",[e._v("getAndRemoveAttrByRegex")]),e._v(" "),s("li",[e._v("rangeSetItem")]),e._v(" "),s("li",[e._v("genComponentModel // 为虚拟dom添加model属性")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    /*\n    * Parse a v-model expression into a base path and a final key segment.\n    * Handles both dot-path and possible square brackets.\n    * 将 v-model 表达式解析为基路径和最后一个键段。\n    * 处理点路径和可能的方括号。\n    */\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("ul",[s("li",[e._v("parseModel //转义字符串对象拆分字符串对象  把后一位key分离出来")])]),e._v(" "),s("p",[e._v('// 如果数据是object.info.name的情况下 则返回是 {exp: "object.info",key: "name"}\n// 如果数据是object[info][name]的情况下 则返回是 {exp: "object[info]",key: "name"}')]),e._v(" "),s("ul",[s("li",[e._v("next")]),e._v(" "),s("li",[e._v("eof")]),e._v(" "),s("li",[e._v("parseBracket //检测 匹配[] 一对这样的=括号")]),e._v(" "),s("li",[e._v("parseString // 循环匹配一对''或者\"\"符号")])]),e._v(" "),s("p",[e._v("这一部分包括：原生指令 v-bind 和为虚拟 dom 添加 model 属性，以及格式校验工具函数。")]),e._v(" "),s("h3",{attrs:{id:"第-7300-行至第-7473-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7300-行至第-7473-行"}},[e._v("#")]),e._v(" 第 7300 行至第 7473 行")]),e._v(" "),s("ul",[s("li",[e._v("model")]),e._v(" "),s("li",[e._v('genCheckboxModel // 为input type="checkbox" 虚拟dom添加 change 函数 ，根据v-model是否是数组，调用change函数，调用 set 去更新 checked选中数据的值')]),e._v(" "),s("li",[e._v("genRadioModel // 为虚拟dom  inpu标签 type === 'radio' 添加change 事件 更新值")]),e._v(" "),s("li",[e._v("genSelect // 为虚拟dom添加change 函数 ，change 函数调用 set 去更新 select 选中数据的值")]),e._v(" "),s("li",[e._v("genDefaultModel //  如果虚拟dom标签是  'input' 类型不是checkbox，radio 或者是'textarea' 标签的时候，获取真实的dom的value值调用 change或者input方法执行set方法更新数据")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/hao123456/p/10616356.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"阶段小结-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-10"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("ul",[s("li",[e._v("v-bind、v-model")])]),e._v(" "),s("p",[e._v("区别：")]),e._v(" "),s("ol",[s("li",[e._v("v-bind 用来绑定数据和属性以及表达式，缩写为'：'")]),e._v(" "),s("li",[e._v("v-model 使用在表单中，实现双向数据绑定的，在表单元素外使用不起作用")])]),e._v(" "),s("p",[e._v("Q：你知道v-model的原理吗？说说看")]),e._v(" "),s("p",[e._v("A: v-model本质上是语法糖，即利用v-model绑定数据，其实就是既绑定了数据，又添加了一个input事件监听 "),s("a",{attrs:{href:"https://github.com/haizlin/fe-interview/issues/560",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("自定义指令钩子函数")])]),e._v(" "),s("p",[e._v("一个指令定义对象可以提供如下几个钩子函数 (均为可选)：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("1. bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\n2. inserted：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\n3. update：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。\n4. componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。\n5. unbind：只调用一次，指令与元素解绑时调用。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("ul",[s("li",[e._v("指令钩子函数会被传入以下参数：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('1. el：指令所绑定的元素，可以用来直接操作 DOM 。\n2. binding：一个对象，包含以下属性：\n     name：指令名，不包括 v- 前缀。\n     value：指令的绑定值，例如：v-my-directive="1 + 1" 中，绑定值为 2。\n     oldValue：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。\n     expression：字符串形式的指令表达式。例如 v-my-directive="1 + 1" 中，表达式为 "1 + 1"。\n     arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 "foo"。\n     modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。\n3. vnode：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。\n4. oldVnode：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("除了 el 之外，其它参数都应该是只读的，切勿进行修改。如果需要在钩子之间共享数据，建议通过元素的 dataset 来进行。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/59ffbcc151882554b836ee21",target:"_blank",rel:"noopener noreferrer"}},[e._v("【译】vue 自定义指令的魅力"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-7473-行至第-7697-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7473-行至第-7697-行"}},[e._v("#")]),e._v(" 第 7473 行至第 7697 行")]),e._v(" "),s("ul",[s("li",[e._v("normalizeEvents // 为事件 多添加 change 或者input 事件加进去")]),e._v(" "),s("li",[e._v("createOnceHandler$1")]),e._v(" "),s("li",[e._v("add$1 // 为真实的dom添加事件")]),e._v(" "),s("li",[e._v("remove$2")]),e._v(" "),s("li",[e._v("updateDOMListeners // 更新dom事件")]),e._v(" "),s("li",[e._v("updateDOMProps // 更新真实dom的props属性")]),e._v(" "),s("li",[e._v("shouldUpdateValue // 判断是否需要更新value")]),e._v(" "),s("li",[e._v("isNotInFocusAndDirty")]),e._v(" "),s("li",[e._v("isDirtyWithModifiers // 判断脏数据修改\n"),s("a",{attrs:{href:"https://blog.csdn.net/LVXIANGAN/article/details/85329630",target:"_blank",rel:"noopener noreferrer"}},[e._v("脏数据概念"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"第-7699-行至第-7797-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7699-行至第-7797-行"}},[e._v("#")]),e._v(" 第 7699 行至第 7797 行")]),e._v(" "),s("ul",[s("li",[e._v("domProps")]),e._v(" "),s("li",[e._v("parseStyleText // 把style 字符串 转换成对象")]),e._v(" "),s("li",[e._v("normalizeStyleData // 在同一个vnode上合并静态和动态样式数据")]),e._v(" "),s("li",[e._v("normalizeStyleBinding // 将可能的数组/字符串值规范化为对象")]),e._v(" "),s("li",[e._v("getStyle")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    /**\n    * parent component style should be after child's\n    * so that parent component's style could override it\n    * 父组件样式应该在子组件样式之后\n    * 这样父组件的样式就可以覆盖它\n    * 循环子组件和组件的样式，把它全部合并到一个样式对象中返回 样式对象 如{width:100px,height:200px} 返回该字符串。\n    */\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("ul",[s("li",[e._v("setProp // 设置 prop")])]),e._v(" "),s("h3",{attrs:{id:"第-7799-行至第-7995-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7799-行至第-7995-行"}},[e._v("#")]),e._v(" 第 7799 行至第 7995 行")]),e._v(" "),s("ul",[s("li",[e._v("normalize  // 给css加前缀。解决浏览器兼用性问题，加前缀")]),e._v(" "),s("li",[e._v("updateStyle // 将vonde虚拟dom的css 转义成并且渲染到真实dom的csszhong")]),e._v(" "),s("li",[e._v("addClass // 为真实dom 元素添加class类")]),e._v(" "),s("li",[e._v("removeClass // 删除真实dom的css类名")]),e._v(" "),s("li",[e._v("resolveTransition // 解析vonde中的transition的name属性获取到一个css过度对象类")]),e._v(" "),s("li",[e._v("autoCssTransition // 通过 name 属性获取过渡 CSS 类名   比如标签上面定义name是 fade  css就要定义  .fade-enter-active,.fade-leave-active，.fade-enter,.fade-leave-to 这样的class")]),e._v(" "),s("li",[e._v("nextFrame // 下一帧")])]),e._v(" "),s("h3",{attrs:{id:"第-7997-行至第-8093-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7997-行至第-8093-行"}},[e._v("#")]),e._v(" 第 7997 行至第 8093 行")]),e._v(" "),s("ul",[s("li",[e._v("addTransitionClass // 获取 真实dom addTransitionClass 记录calss类")]),e._v(" "),s("li",[e._v("removeTransitionClass // 删除vonde的class类和删除真实dom的class类")]),e._v(" "),s("li",[e._v("whenTransitionEnds // 获取动画的信息，执行动画。")]),e._v(" "),s("li",[e._v("getTransitionInfo // 获取transition，或者animation 动画的类型，动画个数，动画执行时间")])]),e._v(" "),s("p",[e._v("这一部分关于：对真实 dom 的操作，包括样式的增删、事件的增删、动画类等。")]),e._v(" "),s("p",[e._v("回过头再理一下宏观上的东西，再来亿遍-虚拟DOM：模板 → 渲染函数 → 虚拟DOM树 → 真实DOM")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/vdom2.png",alt:""}})]),e._v(" "),s("p",[e._v("那么这一部分则处在“虚拟DOM树 → 真实DOM”这个阶段")]),e._v(" "),s("h3",{attrs:{id:"第-8093-行至第-8518-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-8093-行至第-8518-行"}},[e._v("#")]),e._v(" 第 8093 行至第 8518 行")]),e._v(" "),s("ul",[s("li",[e._v("getTimeout")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\n\n// 根据本地的依赖方式，Chromium 的旧版本（低于61.0.3163.100）格式化浮点数字，使用逗号而不是点。如果逗号未用点代替，则输入将被四舍五入而导致意外行为\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("ul",[s("li",[e._v("toMs\n// "),s("a",{attrs:{href:"https://github.com/vuejs/vue/pull/8495/files",target:"_blank",rel:"noopener noreferrer"}},[e._v("update toMs function. fix #4894"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("enter")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// activeInstance will always be the <transition> component managing this\n// transition. One edge case to check is when the <transition> is placed\n// as the root node of a child component. In that case we need to check\n// <transition>'s parent for appear check.\n\n// activeInstance 将一直作为<transition>的组件来管理 transition。要检查的一种边缘情况：<transition> 作为子组件的根节点时。在这种情况下，我们需要检查 <transition> 的父项的展现。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("ul",[s("li",[s("p",[e._v("leave // 离开动画")])]),e._v(" "),s("li",[s("p",[e._v("performLeave")])]),e._v(" "),s("li",[s("p",[e._v("checkDuration // only used in dev mode : 检测 val 必需是数字")])]),e._v(" "),s("li",[s("p",[e._v("isValidDuration")])]),e._v(" "),s("li",[s("p",[e._v("getHookArgumentsLength // 检测钩子函数 fns 的长度")])]),e._v(" "),s("li",[s("p",[e._v("_enter")])]),e._v(" "),s("li",[s("p",[e._v("createPatchFunction // path 把vonde 渲染成真实的dom：创建虚拟 dom - 函数体在 5845 行")])]),e._v(" "),s("li",[s("p",[e._v("directive // 生命指令：包括 插入 和 组件更新")])])]),e._v(" "),s("blockquote",[s("p",[e._v("更新指令 比较 oldVnode 和 vnode，根据oldVnode和vnode的情况 触发指令钩子函数bind，update，inserted，insert，componentUpdated，unbind钩子函数")])]),e._v(" "),s("p",[e._v("此节前部分是 transition 动画相关工具函数，后部分关于虚拟 Dom patch、指令的更新。")]),e._v(" "),s("h3",{attrs:{id:"第-8520-行至第-8584-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-8520-行至第-8584-行"}},[e._v("#")]),e._v(" 第 8520 行至第 8584 行")]),e._v(" "),s("ul",[s("li",[e._v("setSelected // 设置选择 - 指令更新的工具函数")]),e._v(" "),s("li",[e._v("actuallySetSelected // 实际选择，在 setSelected() 里调用")]),e._v(" "),s("li",[e._v("hasNoMatchingOption // 没有匹配项 - 指令组件更新工具函数")]),e._v(" "),s("li",[e._v("getValue // 获取 option.value")]),e._v(" "),s("li",[e._v("onCompositionStart // 组成开始 - 指令插入工具函数")]),e._v(" "),s("li",[e._v("onCompositionEnd // 组成结束-指令插入工具函数：防止无故触发输入事件")]),e._v(" "),s("li",[e._v("trigger // 触发事件")])]),e._v(" "),s("h3",{attrs:{id:"第-8592-行至第-8728-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-8592-行至第-8728-行"}},[e._v("#")]),e._v(" 第 8592 行至第 8728 行")]),e._v(" "),s("p",[e._v("// 定义在组件根内部递归搜索可能存在的 transition")]),e._v(" "),s("ul",[s("li",[e._v("locateNode")]),e._v(" "),s("li",[e._v("show // 控制 el 的 display 属性")]),e._v(" "),s("li",[e._v("platformDirectives // 平台指令")]),e._v(" "),s("li",[e._v("transitionProps // 过渡Props对象")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    // in case the child is also an abstract component, e.g. <keep-alive>\n    // we want to recursively retrieve the real component to be rendered\n    // 如果子对象也是抽象组件，例如<keep-alive>\n    // 我们要递归地检索要渲染的实际组件\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ul",[s("li",[e._v("getRealChild")]),e._v(" "),s("li",[e._v("extractTransitionData // 提取 TransitionData")]),e._v(" "),s("li",[e._v("placeholder // 占位提示")]),e._v(" "),s("li",[e._v("hasParentTransition // 判断是否有 ParentTransition")]),e._v(" "),s("li",[e._v("isSameChild // 判断子对象是否相同")])]),e._v(" "),s("h3",{attrs:{id:"第-8730-行至第-9020-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-8730-行至第-9020-行"}},[e._v("#")]),e._v(" 第 8730 行至第 9020 行")]),e._v(" "),s("ul",[s("li",[e._v("Transition // !important")])]),e._v(" "),s("p",[e._v("前部分以及此部分大部分围绕 Transition 这个关键对象。即迎合官网 “过渡 & 动画” 这一节，是我们需要关注的重点！")]),e._v(" "),s("blockquote",[s("p",[e._v("Vue 在插入、更新或者移除 DOM 时，提供多种不同方式的应用过渡效果。包括以下工具：")]),e._v(" "),s("ul",[s("li",[e._v("在 CSS 过渡和动画中自动应用 class")]),e._v(" "),s("li",[e._v("可以配合使用第三方 CSS 动画库，如 Animate.css")]),e._v(" "),s("li",[e._v("在过渡钩子函数中使用 JavaScript 直接操作 DOM")]),e._v(" "),s("li",[e._v("可以配合使用第三方 JavaScript 动画库，如 Velocity.js")])]),e._v(" "),s("p",[e._v("在这里，我们只会讲到进入、离开和列表的过渡，你也可以看下一节的"),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitioning-state.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("管理过渡状态"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("p",[e._v("vue - transition 里面大有东西，这里有一篇"),s("a",{attrs:{href:"https://juejin.im/post/5cf411d8e51d4550a629b222",target:"_blank",rel:"noopener noreferrer"}},[e._v("“细谈”"),s("OutboundLink")],1),e._v("推荐阅读。")]),e._v(" "),s("ul",[s("li",[e._v("props")]),e._v(" "),s("li",[e._v("TransitionGroup // TransitionGroup")]),e._v(" "),s("li",[e._v("callPendingCbs // Pending 回调")]),e._v(" "),s("li",[e._v("recordPosition // 记录位置")]),e._v(" "),s("li",[e._v("applyTranslation // 应用动画 - TransitionGroup.updated 调用")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n// we divide the work into three loops to avoid mixing DOM reads and writes\n// in each iteration - which helps prevent layout thrashing.\n\n//我们将工作分为三个 loops，以避免将 DOM 读取和写入混合在一起\n//在每次迭代中-有助于防止布局冲撞。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("ul",[s("li",[e._v("platformComponents // 平台组件")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 安装平台运行时指令和组件\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("Q: vue自带的内置组件有什么？")]),e._v(" "),s("p",[e._v("A: Vue中内置的组件有以下几种：")]),e._v(" "),s("ol",[s("li",[e._v("component")])]),e._v(" "),s("p",[e._v("component组件：有两个属性---is inline-template")]),e._v(" "),s("p",[e._v("渲染一个‘元组件’为动态组件，按照'is'特性的值来渲染成那个组件")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[e._v("transition")])]),e._v(" "),s("p",[e._v("transition组件：为组件的载入和切换提供动画效果，具有非常强的可定制性，支持16个属性和12个事件")]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("transition-group")])]),e._v(" "),s("p",[e._v("transition-group：作为多个元素/组件的过渡效果")]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[e._v("keep-alive")])]),e._v(" "),s("p",[e._v("keep-alive：包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们")]),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[e._v("slot")])]),e._v(" "),s("p",[e._v("slot：作为组件模板之中的内容分发插槽，slot元素自身将被替换")]),e._v(" "),s("h3",{attrs:{id:"第-9024-行至第-9207-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-9024-行至第-9207-行"}},[e._v("#")]),e._v(" 第 9024 行至第 9207 行")]),e._v(" "),s("p",[e._v("// install platform specific utils\n// 安装平台特定的工具")]),e._v(" "),s("ul",[s("li",[e._v("Vue.config.x")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("ul",[s("li",[e._v("Vue.prototype.$mount\n// public mount method 安装方法 实例方法挂载 vm")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// public mount method\nVue.prototype.$mount = function (\n    el, // 真实dom 或者是 string\n    hydrating //新的虚拟dom vonde\n) {\n    el = el && inBrowser ? query(el) : undefined;\n    return mountComponent(this, el, hydrating)\n};\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[s("strong",[e._v("devtools global hook")]),e._v(" // 开发环境全局 hook Tip")]),e._v(" "),s("ul",[s("li",[e._v("buildRegex // 构建的正则匹配")]),e._v(" "),s("li",[e._v("parseText // 匹配view 指令，并且把他转换成 虚拟dom vonde 需要渲染的函数,比如指令"+e._s(e.name)+"转换成 _s(name)")]),e._v(" "),s("li",[e._v("transformNode // 获取 class 属性和:class或者v-bind的动态属性值，并且转化成字符串 添加到staticClass和classBinding 属性中")]),e._v(" "),s("li",[e._v("genData // 初始化扩展指令 baseDirectives，on,bind,cloak方法，dataGenFns 获取到一个数组，数组中有两个函数 genData（转换 class） 和 genData$1（转换 style）,")]),e._v(" "),s("li",[e._v("transformNode$1 // transformNode$1 获取 style属性和:style或者v-bind的动态属性值，并且转化成字符串 添加到staticStyle和styleBinding属性中")]),e._v(" "),s("li",[e._v("genData$1 // 参见 genData")]),e._v(" "),s("li",[e._v("style$1 // 包含 staticKeys、transformNode、genData 属性")])]),e._v(" "),s("h3",{attrs:{id:"第-9211-行至第-9537-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-9211-行至第-9537-行"}},[e._v("#")]),e._v(" 第 9211 行至第 9537 行")]),e._v(" "),s("ul",[s("li",[e._v("he")]),e._v(" "),s("li",[e._v("isUnaryTag // 工具函数")]),e._v(" "),s("li",[e._v("canBeLeftOpenTag // 工具函数")]),e._v(" "),s("li",[e._v("isNonPhrasingTag // 工具函数\n"),s("strong",[e._v("Regular Expressions")])]),e._v(" "),s("li",[e._v("parseHTML // 解析成 HTML !important")])]),e._v(" "),s("p",[e._v("parseHTML 这个函数实现大概两百多行，是一个比较大的函数体了。")]),e._v(" "),s("p",[e._v("parseHTML 中的方法用于处理HTML开始和结束标签。")]),e._v(" "),s("p",[e._v("parseHTML 方法的整体逻辑是用正则判断各种情况，进行不同的处理。其中调用到了 options 中的自定义方法。")]),e._v(" "),s("p",[e._v("options 中的自定义方法用于处理AST语法树，最终返回出整个AST语法树对象。")]),e._v(" "),s("p",[e._v("贴一下源码，有兴趣可自行感受一二。附一篇详解"),s("a",{attrs:{href:"https://segmentfault.com/a/1190000013592119",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js HTML解析细节学习"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function parseHTML(html, options) {\n    var stack = [];\n    var expectHTML = options.expectHTML;\n    var isUnaryTag$$1 = options.isUnaryTag || no;\n    var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n    var index = 0;\n    var last, lastTag;\n    while (html) {\n        last = html;\n        // Make sure we're not in a plaintext content element like script/style\n        // 确保我们不在像脚本/样式这样的纯文本内容元素中\n        if (!lastTag || !isPlainTextElement(lastTag)) {\n            var textEnd = html.indexOf('<');\n            if (textEnd === 0) {\n                // Comment:\n                if (comment.test(html)) {\n                    var commentEnd = html.indexOf('--\x3e');\n\n                    if (commentEnd >= 0) {\n                        if (options.shouldKeepComment) {\n                            options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n                        }\n                        advance(commentEnd + 3);\n                        continue\n                    }\n                }\n\n                // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n                if (conditionalComment.test(html)) {\n                    var conditionalEnd = html.indexOf(']>');\n\n                    if (conditionalEnd >= 0) {\n                        advance(conditionalEnd + 2);\n                        continue\n                    }\n                }\n\n                // Doctype:\n                // 匹配 html 的头文件\n                var doctypeMatch = html.match(doctype);\n                if (doctypeMatch) {\n                    advance(doctypeMatch[0].length);\n                    continue\n                }\n\n                // End tag:\n                var endTagMatch = html.match(endTag);\n                if (endTagMatch) {\n                    var curIndex = index;\n                    advance(endTagMatch[0].length);\n                    parseEndTag(endTagMatch[1], curIndex, index);\n                    continue\n                }\n\n                // Start tag:\n                // 解析开始标记\n                var startTagMatch = parseStartTag();\n                if (startTagMatch) {\n                    handleStartTag(startTagMatch);\n                    if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n                        advance(1);\n                    }\n                    continue\n                }\n            }\n\n            var text = (void 0),\n                rest = (void 0),\n                next = (void 0);\n            if (textEnd >= 0) {\n                rest = html.slice(textEnd);\n                while (\n                    !endTag.test(rest) &&\n                    !startTagOpen.test(rest) &&\n                    !comment.test(rest) &&\n                    !conditionalComment.test(rest)\n                ) {\n                    // < in plain text, be forgiving and treat it as text\n                    next = rest.indexOf('<', 1);\n                    if (next < 0) {\n                        break\n                    }\n                    textEnd += next;\n                    rest = html.slice(textEnd);\n                }\n                text = html.substring(0, textEnd);\n            }\n\n            if (textEnd < 0) {\n                text = html;\n            }\n\n            if (text) {\n                advance(text.length);\n            }\n\n            if (options.chars && text) {\n                options.chars(text, index - text.length, index);\n            }\n        } else {\n            //  处理是script,style,textarea\n            var endTagLength = 0;\n            var stackedTag = lastTag.toLowerCase();\n            var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n            var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n                endTagLength = endTag.length;\n                if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n                    text = text\n                        .replace(/<!\\--([\\s\\S]*?)--\x3e/g, '$1') // #7298\n                        .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n                }\n                if (shouldIgnoreFirstNewline(stackedTag, text)) {\n                    text = text.slice(1);\n                }\n                if (options.chars) {\n                    options.chars(text);\n                }\n                return ''\n            });\n            index += html.length - rest$1.length;\n            html = rest$1;\n            parseEndTag(stackedTag, index - endTagLength, index);\n        }\n\n        if (html === last) {\n            options.chars && options.chars(html);\n            if (!stack.length && options.warn) {\n                options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), {\n                    start: index + html.length\n                });\n            }\n            break\n        }\n    }\n\n    // Clean up any remaining tags\n    parseEndTag();\n\n    function advance(n) {\n        index += n;\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        var start = html.match(startTagOpen);\n        if (start) {\n            var match = {\n                tagName: start[1],\n                attrs: [],\n                start: index\n            };\n            advance(start[0].length);\n            var end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n                attr.start = index;\n                advance(attr[0].length);\n                attr.end = index;\n                match.attrs.push(attr);\n            }\n            if (end) {\n                match.unarySlash = end[1];\n                advance(end[0].length);\n                match.end = index;\n                return match\n            }\n        }\n    }\n\n    function handleStartTag(match) {\n        var tagName = match.tagName;\n        var unarySlash = match.unarySlash;\n\n        if (expectHTML) {\n            if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n                parseEndTag(lastTag);\n            }\n            if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n                parseEndTag(tagName);\n            }\n        }\n\n        var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n        var l = match.attrs.length;\n        var attrs = new Array(l);\n        for (var i = 0; i < l; i++) {\n            var args = match.attrs[i];\n            var value = args[3] || args[4] || args[5] || '';\n            var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href' ?\n                options.shouldDecodeNewlinesForHref :\n                options.shouldDecodeNewlines;\n            attrs[i] = {\n                name: args[1],\n                value: decodeAttr(value, shouldDecodeNewlines)\n            };\n            if (options.outputSourceRange) {\n                attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n                attrs[i].end = args.end;\n            }\n        }\n\n        if (!unary) {\n            stack.push({\n                tag: tagName,\n                lowerCasedTag: tagName.toLowerCase(),\n                attrs: attrs,\n                start: match.start,\n                end: match.end\n            });\n            lastTag = tagName;\n        }\n\n        if (options.start) {\n            options.start(tagName, attrs, unary, match.start, match.end);\n        }\n    }\n\n    function parseEndTag(tagName, start, end) {\n        var pos, lowerCasedTagName;\n        if (start == null) {\n            start = index;\n        }\n        if (end == null) {\n            end = index;\n        }\n\n        // Find the closest opened tag of the same type\n        if (tagName) {\n            lowerCasedTagName = tagName.toLowerCase();\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n                    break\n                }\n            }\n        } else {\n            // If no tag name is provided, clean shop\n            pos = 0;\n        }\n\n        if (pos >= 0) {\n            // Close all the open elements, up the stack\n            for (var i = stack.length - 1; i >= pos; i--) {\n                if (i > pos || !tagName &&\n                    options.warn\n                ) {\n                    options.warn(\n                        (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"), {\n                            start: stack[i].start,\n                            end: stack[i].end\n                        }\n                    );\n                }\n                if (options.end) {\n                    options.end(stack[i].tag, start, end);\n                }\n            }\n\n            // Remove the open elements from the stack\n            stack.length = pos;\n            lastTag = pos && stack[pos - 1].tag;\n        } else if (lowerCasedTagName === 'br') {\n            if (options.start) {\n                options.start(tagName, [], true, start, end);\n            }\n        } else if (lowerCasedTagName === 'p') {\n            if (options.start) {\n                options.start(tagName, [], false, start, end);\n            }\n            if (options.end) {\n                options.end(tagName, start, end);\n            }\n        }\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br"),s("span",{staticClass:"line-number"},[e._v("72")]),s("br"),s("span",{staticClass:"line-number"},[e._v("73")]),s("br"),s("span",{staticClass:"line-number"},[e._v("74")]),s("br"),s("span",{staticClass:"line-number"},[e._v("75")]),s("br"),s("span",{staticClass:"line-number"},[e._v("76")]),s("br"),s("span",{staticClass:"line-number"},[e._v("77")]),s("br"),s("span",{staticClass:"line-number"},[e._v("78")]),s("br"),s("span",{staticClass:"line-number"},[e._v("79")]),s("br"),s("span",{staticClass:"line-number"},[e._v("80")]),s("br"),s("span",{staticClass:"line-number"},[e._v("81")]),s("br"),s("span",{staticClass:"line-number"},[e._v("82")]),s("br"),s("span",{staticClass:"line-number"},[e._v("83")]),s("br"),s("span",{staticClass:"line-number"},[e._v("84")]),s("br"),s("span",{staticClass:"line-number"},[e._v("85")]),s("br"),s("span",{staticClass:"line-number"},[e._v("86")]),s("br"),s("span",{staticClass:"line-number"},[e._v("87")]),s("br"),s("span",{staticClass:"line-number"},[e._v("88")]),s("br"),s("span",{staticClass:"line-number"},[e._v("89")]),s("br"),s("span",{staticClass:"line-number"},[e._v("90")]),s("br"),s("span",{staticClass:"line-number"},[e._v("91")]),s("br"),s("span",{staticClass:"line-number"},[e._v("92")]),s("br"),s("span",{staticClass:"line-number"},[e._v("93")]),s("br"),s("span",{staticClass:"line-number"},[e._v("94")]),s("br"),s("span",{staticClass:"line-number"},[e._v("95")]),s("br"),s("span",{staticClass:"line-number"},[e._v("96")]),s("br"),s("span",{staticClass:"line-number"},[e._v("97")]),s("br"),s("span",{staticClass:"line-number"},[e._v("98")]),s("br"),s("span",{staticClass:"line-number"},[e._v("99")]),s("br"),s("span",{staticClass:"line-number"},[e._v("100")]),s("br"),s("span",{staticClass:"line-number"},[e._v("101")]),s("br"),s("span",{staticClass:"line-number"},[e._v("102")]),s("br"),s("span",{staticClass:"line-number"},[e._v("103")]),s("br"),s("span",{staticClass:"line-number"},[e._v("104")]),s("br"),s("span",{staticClass:"line-number"},[e._v("105")]),s("br"),s("span",{staticClass:"line-number"},[e._v("106")]),s("br"),s("span",{staticClass:"line-number"},[e._v("107")]),s("br"),s("span",{staticClass:"line-number"},[e._v("108")]),s("br"),s("span",{staticClass:"line-number"},[e._v("109")]),s("br"),s("span",{staticClass:"line-number"},[e._v("110")]),s("br"),s("span",{staticClass:"line-number"},[e._v("111")]),s("br"),s("span",{staticClass:"line-number"},[e._v("112")]),s("br"),s("span",{staticClass:"line-number"},[e._v("113")]),s("br"),s("span",{staticClass:"line-number"},[e._v("114")]),s("br"),s("span",{staticClass:"line-number"},[e._v("115")]),s("br"),s("span",{staticClass:"line-number"},[e._v("116")]),s("br"),s("span",{staticClass:"line-number"},[e._v("117")]),s("br"),s("span",{staticClass:"line-number"},[e._v("118")]),s("br"),s("span",{staticClass:"line-number"},[e._v("119")]),s("br"),s("span",{staticClass:"line-number"},[e._v("120")]),s("br"),s("span",{staticClass:"line-number"},[e._v("121")]),s("br"),s("span",{staticClass:"line-number"},[e._v("122")]),s("br"),s("span",{staticClass:"line-number"},[e._v("123")]),s("br"),s("span",{staticClass:"line-number"},[e._v("124")]),s("br"),s("span",{staticClass:"line-number"},[e._v("125")]),s("br"),s("span",{staticClass:"line-number"},[e._v("126")]),s("br"),s("span",{staticClass:"line-number"},[e._v("127")]),s("br"),s("span",{staticClass:"line-number"},[e._v("128")]),s("br"),s("span",{staticClass:"line-number"},[e._v("129")]),s("br"),s("span",{staticClass:"line-number"},[e._v("130")]),s("br"),s("span",{staticClass:"line-number"},[e._v("131")]),s("br"),s("span",{staticClass:"line-number"},[e._v("132")]),s("br"),s("span",{staticClass:"line-number"},[e._v("133")]),s("br"),s("span",{staticClass:"line-number"},[e._v("134")]),s("br"),s("span",{staticClass:"line-number"},[e._v("135")]),s("br"),s("span",{staticClass:"line-number"},[e._v("136")]),s("br"),s("span",{staticClass:"line-number"},[e._v("137")]),s("br"),s("span",{staticClass:"line-number"},[e._v("138")]),s("br"),s("span",{staticClass:"line-number"},[e._v("139")]),s("br"),s("span",{staticClass:"line-number"},[e._v("140")]),s("br"),s("span",{staticClass:"line-number"},[e._v("141")]),s("br"),s("span",{staticClass:"line-number"},[e._v("142")]),s("br"),s("span",{staticClass:"line-number"},[e._v("143")]),s("br"),s("span",{staticClass:"line-number"},[e._v("144")]),s("br"),s("span",{staticClass:"line-number"},[e._v("145")]),s("br"),s("span",{staticClass:"line-number"},[e._v("146")]),s("br"),s("span",{staticClass:"line-number"},[e._v("147")]),s("br"),s("span",{staticClass:"line-number"},[e._v("148")]),s("br"),s("span",{staticClass:"line-number"},[e._v("149")]),s("br"),s("span",{staticClass:"line-number"},[e._v("150")]),s("br"),s("span",{staticClass:"line-number"},[e._v("151")]),s("br"),s("span",{staticClass:"line-number"},[e._v("152")]),s("br"),s("span",{staticClass:"line-number"},[e._v("153")]),s("br"),s("span",{staticClass:"line-number"},[e._v("154")]),s("br"),s("span",{staticClass:"line-number"},[e._v("155")]),s("br"),s("span",{staticClass:"line-number"},[e._v("156")]),s("br"),s("span",{staticClass:"line-number"},[e._v("157")]),s("br"),s("span",{staticClass:"line-number"},[e._v("158")]),s("br"),s("span",{staticClass:"line-number"},[e._v("159")]),s("br"),s("span",{staticClass:"line-number"},[e._v("160")]),s("br"),s("span",{staticClass:"line-number"},[e._v("161")]),s("br"),s("span",{staticClass:"line-number"},[e._v("162")]),s("br"),s("span",{staticClass:"line-number"},[e._v("163")]),s("br"),s("span",{staticClass:"line-number"},[e._v("164")]),s("br"),s("span",{staticClass:"line-number"},[e._v("165")]),s("br"),s("span",{staticClass:"line-number"},[e._v("166")]),s("br"),s("span",{staticClass:"line-number"},[e._v("167")]),s("br"),s("span",{staticClass:"line-number"},[e._v("168")]),s("br"),s("span",{staticClass:"line-number"},[e._v("169")]),s("br"),s("span",{staticClass:"line-number"},[e._v("170")]),s("br"),s("span",{staticClass:"line-number"},[e._v("171")]),s("br"),s("span",{staticClass:"line-number"},[e._v("172")]),s("br"),s("span",{staticClass:"line-number"},[e._v("173")]),s("br"),s("span",{staticClass:"line-number"},[e._v("174")]),s("br"),s("span",{staticClass:"line-number"},[e._v("175")]),s("br"),s("span",{staticClass:"line-number"},[e._v("176")]),s("br"),s("span",{staticClass:"line-number"},[e._v("177")]),s("br"),s("span",{staticClass:"line-number"},[e._v("178")]),s("br"),s("span",{staticClass:"line-number"},[e._v("179")]),s("br"),s("span",{staticClass:"line-number"},[e._v("180")]),s("br"),s("span",{staticClass:"line-number"},[e._v("181")]),s("br"),s("span",{staticClass:"line-number"},[e._v("182")]),s("br"),s("span",{staticClass:"line-number"},[e._v("183")]),s("br"),s("span",{staticClass:"line-number"},[e._v("184")]),s("br"),s("span",{staticClass:"line-number"},[e._v("185")]),s("br"),s("span",{staticClass:"line-number"},[e._v("186")]),s("br"),s("span",{staticClass:"line-number"},[e._v("187")]),s("br"),s("span",{staticClass:"line-number"},[e._v("188")]),s("br"),s("span",{staticClass:"line-number"},[e._v("189")]),s("br"),s("span",{staticClass:"line-number"},[e._v("190")]),s("br"),s("span",{staticClass:"line-number"},[e._v("191")]),s("br"),s("span",{staticClass:"line-number"},[e._v("192")]),s("br"),s("span",{staticClass:"line-number"},[e._v("193")]),s("br"),s("span",{staticClass:"line-number"},[e._v("194")]),s("br"),s("span",{staticClass:"line-number"},[e._v("195")]),s("br"),s("span",{staticClass:"line-number"},[e._v("196")]),s("br"),s("span",{staticClass:"line-number"},[e._v("197")]),s("br"),s("span",{staticClass:"line-number"},[e._v("198")]),s("br"),s("span",{staticClass:"line-number"},[e._v("199")]),s("br"),s("span",{staticClass:"line-number"},[e._v("200")]),s("br"),s("span",{staticClass:"line-number"},[e._v("201")]),s("br"),s("span",{staticClass:"line-number"},[e._v("202")]),s("br"),s("span",{staticClass:"line-number"},[e._v("203")]),s("br"),s("span",{staticClass:"line-number"},[e._v("204")]),s("br"),s("span",{staticClass:"line-number"},[e._v("205")]),s("br"),s("span",{staticClass:"line-number"},[e._v("206")]),s("br"),s("span",{staticClass:"line-number"},[e._v("207")]),s("br"),s("span",{staticClass:"line-number"},[e._v("208")]),s("br"),s("span",{staticClass:"line-number"},[e._v("209")]),s("br"),s("span",{staticClass:"line-number"},[e._v("210")]),s("br"),s("span",{staticClass:"line-number"},[e._v("211")]),s("br"),s("span",{staticClass:"line-number"},[e._v("212")]),s("br"),s("span",{staticClass:"line-number"},[e._v("213")]),s("br"),s("span",{staticClass:"line-number"},[e._v("214")]),s("br"),s("span",{staticClass:"line-number"},[e._v("215")]),s("br"),s("span",{staticClass:"line-number"},[e._v("216")]),s("br"),s("span",{staticClass:"line-number"},[e._v("217")]),s("br"),s("span",{staticClass:"line-number"},[e._v("218")]),s("br"),s("span",{staticClass:"line-number"},[e._v("219")]),s("br"),s("span",{staticClass:"line-number"},[e._v("220")]),s("br"),s("span",{staticClass:"line-number"},[e._v("221")]),s("br"),s("span",{staticClass:"line-number"},[e._v("222")]),s("br"),s("span",{staticClass:"line-number"},[e._v("223")]),s("br"),s("span",{staticClass:"line-number"},[e._v("224")]),s("br"),s("span",{staticClass:"line-number"},[e._v("225")]),s("br"),s("span",{staticClass:"line-number"},[e._v("226")]),s("br"),s("span",{staticClass:"line-number"},[e._v("227")]),s("br"),s("span",{staticClass:"line-number"},[e._v("228")]),s("br"),s("span",{staticClass:"line-number"},[e._v("229")]),s("br"),s("span",{staticClass:"line-number"},[e._v("230")]),s("br"),s("span",{staticClass:"line-number"},[e._v("231")]),s("br"),s("span",{staticClass:"line-number"},[e._v("232")]),s("br"),s("span",{staticClass:"line-number"},[e._v("233")]),s("br"),s("span",{staticClass:"line-number"},[e._v("234")]),s("br"),s("span",{staticClass:"line-number"},[e._v("235")]),s("br"),s("span",{staticClass:"line-number"},[e._v("236")]),s("br"),s("span",{staticClass:"line-number"},[e._v("237")]),s("br"),s("span",{staticClass:"line-number"},[e._v("238")]),s("br"),s("span",{staticClass:"line-number"},[e._v("239")]),s("br"),s("span",{staticClass:"line-number"},[e._v("240")]),s("br"),s("span",{staticClass:"line-number"},[e._v("241")]),s("br"),s("span",{staticClass:"line-number"},[e._v("242")]),s("br"),s("span",{staticClass:"line-number"},[e._v("243")]),s("br"),s("span",{staticClass:"line-number"},[e._v("244")]),s("br"),s("span",{staticClass:"line-number"},[e._v("245")]),s("br"),s("span",{staticClass:"line-number"},[e._v("246")]),s("br"),s("span",{staticClass:"line-number"},[e._v("247")]),s("br"),s("span",{staticClass:"line-number"},[e._v("248")]),s("br"),s("span",{staticClass:"line-number"},[e._v("249")]),s("br"),s("span",{staticClass:"line-number"},[e._v("250")]),s("br"),s("span",{staticClass:"line-number"},[e._v("251")]),s("br"),s("span",{staticClass:"line-number"},[e._v("252")]),s("br"),s("span",{staticClass:"line-number"},[e._v("253")]),s("br"),s("span",{staticClass:"line-number"},[e._v("254")]),s("br"),s("span",{staticClass:"line-number"},[e._v("255")]),s("br"),s("span",{staticClass:"line-number"},[e._v("256")]),s("br"),s("span",{staticClass:"line-number"},[e._v("257")]),s("br"),s("span",{staticClass:"line-number"},[e._v("258")]),s("br"),s("span",{staticClass:"line-number"},[e._v("259")]),s("br"),s("span",{staticClass:"line-number"},[e._v("260")]),s("br"),s("span",{staticClass:"line-number"},[e._v("261")]),s("br"),s("span",{staticClass:"line-number"},[e._v("262")]),s("br"),s("span",{staticClass:"line-number"},[e._v("263")]),s("br"),s("span",{staticClass:"line-number"},[e._v("264")]),s("br"),s("span",{staticClass:"line-number"},[e._v("265")]),s("br"),s("span",{staticClass:"line-number"},[e._v("266")]),s("br"),s("span",{staticClass:"line-number"},[e._v("267")]),s("br"),s("span",{staticClass:"line-number"},[e._v("268")]),s("br"),s("span",{staticClass:"line-number"},[e._v("269")]),s("br"),s("span",{staticClass:"line-number"},[e._v("270")]),s("br"),s("span",{staticClass:"line-number"},[e._v("271")]),s("br"),s("span",{staticClass:"line-number"},[e._v("272")]),s("br"),s("span",{staticClass:"line-number"},[e._v("273")]),s("br"),s("span",{staticClass:"line-number"},[e._v("274")]),s("br")])]),s("h3",{attrs:{id:"第-9541-行至第-9914-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-9541-行至第-9914-行"}},[e._v("#")]),e._v(" 第 9541 行至第 9914 行")]),e._v(" "),s("p",[s("strong",[e._v("Regular Expressions")]),e._v(" // 相关正则")]),e._v(" "),s("ul",[s("li",[e._v("createASTElement\n// Convert HTML string to AST.")]),e._v(" "),s("li",[e._v("parse // !important")])]),e._v(" "),s("p",[e._v("parse 函数从 9593 行至 9914 行，共三百多行。核心吗？当然核心！")]),e._v(" "),s("p",[e._v("引自 wikipedia：")]),e._v(" "),s("blockquote",[s("p",[e._v("在计算机科学和语言学中，语法分析（英语：syntactic analysis，也叫 parsing）是根据某种给定的形式文法对由单词序列（如英语单词序列）构成的输入文本进行分析并确定其语法结构的一种过程。")]),e._v(" "),s("p",[e._v("语法分析器（parser）通常是作为编译器或解释器的组件出现的，它的作用是进行语法检查、并构建由输入的单词组成的数据结构（一般是语法分析树、抽象语法树等层次化的数据结构）。语法分析器通常使用一个独立的词法分析器从输入字符流中分离出一个个的“单词”，并将单词流作为其输入。实际开发中，语法分析器可以手工编写，也可以使用工具（半）自动生成。")])]),e._v(" "),s("p",[s("strong",[e._v("parse 的整体流程实际上就是先处理了一些传入的options，然后执行了parseHTML 函数，传入了template，options和相关钩子。")])]),e._v(" "),s("p",[e._v("具体实现这里盗一个图：")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/parse.png",alt:""}})]),e._v(" "),s("p",[e._v("parse中的语法分析可以看"),s("a",{attrs:{href:"https://juejin.im/post/5d09a4fef265da1b6b1cd96b#heading-13",target:"_blank",rel:"noopener noreferrer"}},[e._v("这一篇这一节"),s("OutboundLink")],1)]),e._v(" "),s("ol",[s("li",[e._v("start")]),e._v(" "),s("li",[e._v("char")]),e._v(" "),s("li",[e._v("comment")]),e._v(" "),s("li",[e._v("end")])]),e._v(" "),s("p",[e._v("parse、optimize、codegen的核心思想解读可以看"),s("a",{attrs:{href:"https://juejin.im/post/5cfc6ad9e51d4558936aa04d#heading-6",target:"_blank",rel:"noopener noreferrer"}},[e._v("这一篇这一节"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("这里实现的细节还真不少！")]),e._v(" "),s("h3",{attrs:{id:"阶段小结-重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-重点"}},[e._v("#")]),e._v(" 阶段小结（重点）")]),e._v(" "),s("p",[e._v("噫嘘唏！来到第 20 篇的小结！来个图镇一下先！")]),e._v(" "),s("p",[e._v("还记得官方这样的一句话吗？")]),e._v(" "),s("blockquote",[s("p",[e._v("下图展示了实例的生命周期。你不需要立马弄明白所有的东西，不过随着你的不断学习和使用，它的参考价值会越来越高。")])]),e._v(" "),s("p",[e._v("看了这么多，我们再回头看看注释版。")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/vuelife.png",alt:"注释版"}}),s("a",{attrs:{href:"http://www.shangdixinxi.com/detail-1105609.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("上图值得一提的是："),s("span",{staticStyle:{color:"orange"}},[s("b",[e._v('Has "template" option?')]),e._v(" 这个逻辑的细化")])]),e._v(" "),s("blockquote",[s("p",[e._v("碰到是否有 template 选项时，会询问是否要对 template 进行编译：即模板通过编译生成 AST，再由 AST 生成 Vue 的渲染函数，渲染函数结合数据生成 Virtual DOM 树，对 Virtual DOM 进行 diff 和 patch 后生成新的UI。")])]),e._v(" "),s("p",[e._v("如图（此图前文也有提到，见 0 至 5000 行总结）：\n"),s("img",{attrs:{src:"/assets/img/vuelife1.jpg",alt:""}})]),e._v(" "),s("p",[e._v("将 Vue 的源码的“数据监听”、“虚拟 DOM”、“Render 函数”、“组件编译”、结合好，则算是融会贯通了！")]),e._v(" "),s("p",[s("strong",[e._v("一图胜万言")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/vuelife2.png",alt:""}})]),e._v(" "),s("p",[e._v("好好把上面的三张图看懂，便能做到“成竹在胸”，走遍天下的 VUE 原理面试都不用慌了。框架就在这里，细化的东西就需要多多记忆了！")]),e._v(" "),s("h3",{attrs:{id:"第-9916-行至第-10435-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-9916-行至第-10435-行"}},[e._v("#")]),e._v(" 第 9916 行至第 10435 行")]),e._v(" "),s("p",[e._v("🙌 到 1w 行了，自我庆祝一下！")]),e._v(" "),s("ul",[s("li",[e._v("processRawAttrs // parse 方法里用到的工具函数 用于将特性保存到AST对象的attrs属性上")]),e._v(" "),s("li",[e._v("processElement// parse 方法工具函数 元素填充")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export function processElement (\n  element: ASTElement,\n  options: CompilerOptions\n) {\n  processKey(element)\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  )\n\n  processRef(element)\n  processSlotContent(element)\n  processSlotOutlet(element)\n  processComponent(element)\n  for (let i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element\n  }\n  processAttrs(element)\n  return element\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br")])]),s("p",[e._v("可以看到主要函数包括：processKey、processRef、processSlotContent、processSlotOutlet、processComponent、processAttrs 和最后遍历执行的transforms。")]),e._v(" "),s("p",[e._v("processElement完成的slotTarget的赋值，这里则是将所有的slot创建的astElement以对象的形式赋值给currentParent的scopedSlots。以便后期组件内部实例话的时候可以方便去使用vm.$$slot。")]),e._v(" "),s("ul",[s("li",[e._v("processKey")]),e._v(" "),s("li",[e._v("processRef")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("首先最为简单的是processKey和processRef,在这两个函数处理之前，我们的key属性和ref属性都是保存在astElement上面的attrs和attrsMap，经过这两个函数之后，attrs里面的key和ref会被干掉，变成astElement的直属属性。")])]),e._v(" "),s("li",[s("p",[e._v("探讨一下slot的处理方式，我们知道的是，slot的具体位置是在组件中定义的，而需要替换的内容又是组件外面嵌套的代码，Vue对这两块的处理是分开的。")])])]),e._v(" "),s("p",[e._v("先说组件内的属性摘取，主要是slot标签的name属性，这是processSlotOutLet完成的。")]),e._v(" "),s("ul",[s("li",[e._v("processFor")]),e._v(" "),s("li",[e._v("parseFor")]),e._v(" "),s("li",[e._v("processIf")]),e._v(" "),s("li",[e._v("processIfConditions")]),e._v(" "),s("li",[e._v("findPrevElement")]),e._v(" "),s("li",[e._v("addIfCondition")]),e._v(" "),s("li",[e._v("processOnce")]),e._v(" "),s("li",[e._v("processSlotContent")]),e._v(" "),s("li",[e._v("getSlotName")]),e._v(" "),s("li",[e._v("processSlotOutlet")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name') // 就是这一句了。\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn(\n        `\\`key\\` does not work on <slot> because slots are abstract outlets ` +\n        `and can possibly expand into multiple elements. ` +\n        `Use the key on a wrapping element instead.`,\n        getRawBindingAttr(el, 'key')\n      )\n    }\n  }\n}\n// 其次是摘取需要替换的内容，也就是 processSlotContent，这是是处理展示在组件内部的slot，但是在这个地方只是简单的将给el添加两个属性作用域插槽的slotScope和 slotTarget，也就是目标slot。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("ul",[s("li",[e._v("processComponent // processComponent 并不是处理component，而是摘取动态组件的is属性。 processAttrs是获取所有的属性和动态属性。")]),e._v(" "),s("li",[e._v("processAttrs")]),e._v(" "),s("li",[e._v("checkInFor")]),e._v(" "),s("li",[e._v("parseModifiers")]),e._v(" "),s("li",[e._v("makeAttrsMap")])]),e._v(" "),s("p",[e._v("这一部分仍是衔接这 parse function 里的具体实现：start、end、comment、chars四大函数。")]),e._v(" "),s("p",[e._v("流程再回顾一下：")]),e._v(" "),s("p",[e._v("一、普通标签处理流程描述")]),e._v(" "),s("ol",[s("li",[e._v("识别开始标签，生成匹配结构match。")])]),e._v(" "),s("p",[e._v("const match = { // 匹配startTag的数据结构\ntagName: 'div',\nattrs: [\n{ 'id=\"xxx\"','id','=','xxx' },\n...\n],\nstart: index,\nend: xxx\n}\n复制代码\n2. 处理attrs，将数组处理成 {name:'xxx',value:'xxx'}\n3. 生成astElement，处理for,if和once的标签。\n4. 识别结束标签，将没有闭合标签的元素一起处理。\n5. 建立父子关系，最后再对astElement做所有跟Vue 属性相关对处理。slot、component等等。")]),e._v(" "),s("p",[e._v("二、文本或表达式的处理流程描述。")]),e._v(" "),s("ol",[s("li",[e._v("截取符号<之前的字符串，这里一定是所有的匹配规则都没有匹配上，只可能是文本了。")]),e._v(" "),s("li",[e._v("使用chars函数处理该字符串。")]),e._v(" "),s("li",[e._v("判断字符串是否含有delimiters，默认也就是${},有的话创建type为2的节点，否则type为3.")])]),e._v(" "),s("p",[e._v("三、注释流程描述")]),e._v(" "),s("ol",[s("li",[e._v("匹配注释符号。")]),e._v(" "),s("li",[e._v("使用comment函数处理。")]),e._v(" "),s("li",[e._v("直接创建type为3的节点。")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5d01b954f265da1bbf69172e",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考 link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"阶段小结-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-11"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("parseHTML() 和 parse() 这两个函数占了很大的篇幅，值得重点去看看。的确也很多细节，一些正则的匹配，字符串的操作等。从宏观上把握从 template 到 vnode 的 parse 流程也无大问题。")]),e._v(" "),s("h3",{attrs:{id:"第-10437-行至第-10605-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-10437-行至第-10605-行"}},[e._v("#")]),e._v(" 第 10437 行至第 10605 行")]),e._v(" "),s("ul",[s("li",[e._v("isTextTag // function chars() 里的工具函数")]),e._v(" "),s("li",[e._v("isForbiddenTag //  function parseHTML() 用到的工具函数用于检查元素标签是否合法（不是保留命名）")]),e._v(" "),s("li",[e._v("guardIESVGBug // parse start() 中用到的工具函数")]),e._v(" "),s("li",[e._v("checkForAliasModel // checkForAliasModel用于检查v-model的参数是否是v-for的迭代对象")]),e._v(" "),s("li",[e._v("preTransformNode // preTransformNode 方法对el进行预处理，便于后续对标签上的指令和属性进行处理，然后进行树结构的构建，确定el的root, parent, children等属性。总结下来就是生成树节点，构建树结构(关联树节点)。")]),e._v(" "),s("li",[e._v("cloneASTElement // 转换属性，把数组属性转换成对象属性，返回对象 AST元素")]),e._v(" "),s("li",[e._v("text // 为虚拟dom添加textContent 属性")]),e._v(" "),s("li",[e._v("html // 为虚拟dom添加innerHTML 属性")]),e._v(" "),s("li",[e._v("baseOptions")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var baseOptions = {\n  expectHTML: true, //标志 是html\n  modules: modules$1, //为虚拟dom添加staticClass，classBinding，staticStyle，styleBinding，for，\n                      //alias，iterator1，iterator2，addRawAttr ，type ，key， ref，slotName\n                      //或者slotScope或者slot，component或者inlineTemplate ，plain，if ，else，elseif 属性\n  directives: directives$1, //根据判断虚拟dom的标签类型是什么？给相应的标签绑定 相应的 v-model 双数据绑定代码函数，\n                            //为虚拟dom添加textContent 属性，为虚拟dom添加innerHTML 属性\n  isPreTag: isPreTag, // 判断标签是否是 pre\n  isUnaryTag: isUnaryTag, // 匹配标签是否是area,base,br,col,embed,frame,hr,img,input,\n                          // isindex,keygen, link,meta,param,source,track,wbr\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,// 判断标签是否是 colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source\n  isReservedTag: isReservedTag, // 保留标签 判断是不是真的是 html 原有的标签 或者svg标签\n  getTagNamespace: getTagNamespace, // 判断 tag 是否是svg或者math 标签\n  staticKeys: genStaticKeys(modules$1) // 把数组对象 [{ staticKeys:1},{staticKeys:2},{staticKeys:3}]连接数组对象中的 staticKeys key值，连接成一个字符串 str=‘1,2,3’\n};\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("ul",[s("li",[e._v("genStaticKeysCached")])]),e._v(" "),s("h3",{attrs:{id:"第-10607-行至第-10731-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-10607-行至第-10731-行"}},[e._v("#")]),e._v(" 第 10607 行至第 10731 行")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("/**\n  * Goal of the optimizer: walk the generated template AST tree\n  * and detect sub-trees that are purely static, i.e. parts of\n  * the DOM that never needs to change.\n  *\n  * Once we detect these sub-trees, we can:\n  *\n  * 1. Hoist them into constants, so that we no longer need to\n  *    create fresh nodes for them on each re-render;\n  * 2. Completely skip them in the patching process.\n  */\n  // 优化器的目标:遍历生成的模板AST树检测纯静态的子树，即永远不需要更改的DOM。\n  // 一旦我们检测到这些子树，我们可以:\n  // 1。把它们变成常数，这样我们就不需要了\n  // 在每次重新渲染时为它们创建新的节点;\n  // 2。在修补过程中完全跳过它们。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("ul",[s("li",[e._v("optimize // !important:过 parse 过程后，会输出生成 AST 树，接下来需要对这颗树做优化。即这里的 optimize\n// 循环递归虚拟node，标记是不是静态节点\n// 根据node.static或者 node.once 标记staticRoot的状态")]),e._v(" "),s("li",[e._v("genStaticKeys$1")]),e._v(" "),s("li",[e._v("markStatic$1 // 标准静态节点")]),e._v(" "),s("li",[e._v("markStaticRoots // 标注静态根（重要）")]),e._v(" "),s("li",[e._v("isStatic // isBuiltInTag（即tag为component 和slot）的节点不会被标注为静态节点，isPlatformReservedTag（即平台原生标签，web 端如 h1 、div标签等）也不会被标注为静态节点。")]),e._v(" "),s("li",[e._v("isDirectChildOfTemplateFor")])]),e._v(" "),s("h3",{attrs:{id:"阶段小结-12"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-12"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("简单来说：整个 optimize 的过程实际上就干 2 件事情，markStatic(root) 标记静态节点 ，markStaticRoots(root, false) 标记静态根节点。")]),e._v(" "),s("p",[e._v("那么被判断为静态根节点的条件是什么？")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("该节点的所有子孙节点都是静态节点（判断为静态节点要满足 7 个判断，"),s("a",{attrs:{href:"https://juejin.im/post/5d4e3eb7f265da03c61e411e",target:"_blank",rel:"noopener noreferrer"}},[e._v("详见"),s("OutboundLink")],1),e._v("）")])]),e._v(" "),s("li",[s("p",[e._v("必须存在子节点")])]),e._v(" "),s("li",[s("p",[e._v("子节点不能只有一个纯文本节点")])])]),e._v(" "),s("p",[e._v("其实，markStaticRoots()方法针对的都是普通标签节点。表达式节点与纯文本节点都不在考虑范围内。")]),e._v(" "),s("p",[e._v("markStatic()得出的static属性，在该方法中用上了。将每个节点都判断了一遍static属性之后，就可以更快地确定静态根节点：通过判断对应节点是否是静态节点 且 内部有子元素 且 单一子节点的元素类型不是文本类型。")]),e._v(" "),s("blockquote",[s("p",[e._v("只有纯文本子节点时，他是静态节点，但不是静态根节点。静态根节点是 optimize 优化的条件，没有静态根节点，说明这部分不会被优化。")])]),e._v(" "),s("p",[e._v("Q：为什么子节点的元素类型是静态文本类型，就会给 optimize 过程加大成本呢？")]),e._v(" "),s("p",[e._v("A：optimize 过程中做这个静态根节点的优化目是：在 patch 过程中，减少不必要的比对过程，加速更新。但是需要以下成本")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("维护静态模板的存储对象\n一开始的时候，所有的静态根节点 都会被解析生成 VNode，并且被存在一个缓存对象中，就在 Vue.proto._staticTree 中。\n随着静态根节点的增加，这个存储对象也会越来越大，那么占用的内存就会越来越多\n势必要减少一些不必要的存储，所有只有纯文本的静态根节点就被排除了")])]),e._v(" "),s("li",[s("p",[e._v("多层render函数调用\n这个过程涉及到实际操作更新的过程。在实际render 的过程中，针对静态节点的操作也需要调用对应的静态节点渲染函数，做一定的判断逻辑。这里需要一定的消耗。")])])]),e._v(" "),s("p",[e._v("纯文本直接对比即可，不进行 optimize 将会更高效。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5e7595c75188252c1f22524a",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考link"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"第-10733-行至第-10915-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-10733-行至第-10915-行"}},[e._v("#")]),e._v(" 第 10733 行至第 10915 行")]),e._v(" "),s("p",[e._v("// KeyboardEvent.keyCode aliases")]),e._v(" "),s("ul",[s("li",[e._v("keyCodes // 内置按键")]),e._v(" "),s("li",[e._v("keyNames")]),e._v(" "),s("li",[e._v("genGuard // genGuard = condition => "),s("code",[e._v("if(${condition})return null;")])]),e._v(" "),s("li",[e._v("modifierCode //m odifierCode生成内置修饰符的处理")]),e._v(" "),s("li",[e._v("genHandlers")]),e._v(" "),s("li",[e._v("genHandler // 调用genHandler处理events[name]，events[name]可能是数组也可能是独立对象，取决于name是否有多个处理函数。")]),e._v(" "),s("li",[e._v("genKeyFilter // genKeyFilter用于生成一段过滤的字符串：")]),e._v(" "),s("li",[e._v("genFilterCode // 在 genKeyFilter 里被调用")]),e._v(" "),s("li",[e._v("on")]),e._v(" "),s("li",[e._v("bind$1")]),e._v(" "),s("li",[e._v("baseDirectives // CodegenState 里的工具函数")])]),e._v(" "),s("p",[e._v("不管是组件还是普通标签，事件处理代码都在genData的过程中，和之前分析原生事件一致，genHandlers用来处理事件对象并拼接成字符串。")]),e._v(" "),s("h3",{attrs:{id:"第-10921-行至第-11460-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-10921-行至第-11460-行"}},[e._v("#")]),e._v(" 第 10921 行至第 11460 行")]),e._v(" "),s("p",[e._v("// generate(ast, options)")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export function generate (\n  ast: ASTElement | void,\n  options: CompilerOptions\n): CodegenResult {\n  const state = new CodegenState(options)\n  const code = ast ? genElement(ast, state) : '_c(\"div\")'\n  return {\n    render: `with(this){return ${code}}`,\n    staticRenderFns: state.staticRenderFns\n  }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("ul",[s("li",[e._v("CodegenState")]),e._v(" "),s("li",[e._v("generate // ！important")]),e._v(" "),s("li",[e._v("genElement")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export function genElement (el: ASTElement, \nstate: CodegenState): string {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    // 如果是一个静态的树， 如 <div id=\"app\">123</div>\n    // 生成_m()方法\n    // 静态的渲染函数被保存至staticRenderFns属性中\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    // v-once 转化为_o()方法\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    // _l()\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    // v-if 会转换为表达式\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    // 如果是template，处理子节点\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    // 如果是插槽，处理slot\n    return genSlot(el, state)\n  } else {\n    // component or element\n    let code\n    // 如果是组件，处理组件\n    if (el.component) {\n      code = genComponent(el.component, el, state)\n    } else {\n      let data\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData(el, state)\n      }\n\n      const children = el.inlineTemplate ? null : genChildren(el, state, true)\n      code = `_c('${el.tag}'${\n        data ? `,${data}` : '' // data\n      }${\n        children ? `,${children}` : '' // children\n      })`\n    }\n    // module transforms\n    for (let i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code)\n    }\n    return code\n  }\n}\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br")])]),s("ul",[s("li",[e._v("genStatic // genStatic会将ast转化为_m()方法")]),e._v(" "),s("li",[e._v("genOnce // 如果v-once在v-for中，那么就会生成_o()方法， 否则将其视为静态节点")]),e._v(" "),s("li",[e._v("genIf // genIf会将v-if转换为表达式，示例如下")]),e._v(" "),s("li",[e._v("genIfConditions")]),e._v(" "),s("li",[e._v("genFor // v-for会转换为_l()")]),e._v(" "),s("li",[e._v("genData$2")]),e._v(" "),s("li",[e._v("genDirectives // genData() 里调用")]),e._v(" "),s("li",[e._v("genInlineTemplate // genData() 里调用")]),e._v(" "),s("li",[e._v("genScopedSlots // genData() 里调用")]),e._v(" "),s("li",[e._v("genScopedSlot")]),e._v(" "),s("li",[e._v("genChildren // 处理子节点")]),e._v(" "),s("li",[e._v("getNormalizationType // 用于判断是否需要规范化")]),e._v(" "),s("li",[e._v("genNode // 处理 Node")]),e._v(" "),s("li",[e._v("genText // 处理 Text")]),e._v(" "),s("li",[e._v("genComment")]),e._v(" "),s("li",[e._v("genSlot // 处理插槽")]),e._v(" "),s("li",[e._v("genComponent // 处理组件")]),e._v(" "),s("li",[e._v("genProps // 处理 props")]),e._v(" "),s("li",[e._v("transformSpecialNewlines")])]),e._v(" "),s("p",[e._v("这里面的逻辑、细节太多了，不做赘述，有兴趣了解的童鞋可以去看"),s("a",{attrs:{href:"https://juejin.im/post/5ec666fd6fb9a047d112616b",target:"_blank",rel:"noopener noreferrer"}},[e._v("推荐阅读"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"阶段小结-13"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结-13"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),s("p",[e._v("generate方法内部逻辑还是很复杂的，"),s("strong",[e._v("但仅做了一件事情，就是将ast转化为render函数的字符串，形成一个嵌套结构的方法，模版编译生成的_c(),_m(),_l等等其实都是生成vnode的方法")]),e._v("，在执行vue.$mount方法的时候，会调用vm._update(vm._render(), hydrating)方法，此时_render()中方法会执行生成的render()函数，执行后会生成vnode，也就是虚拟dom节点。")]),e._v(" "),s("h3",{attrs:{id:"第-11466-行至第-11965-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-11466-行至第-11965-行"}},[e._v("#")]),e._v(" 第 11466 行至第 11965 行")]),e._v(" "),s("ul",[s("li",[e._v("prohibitedKeywordRE // 正则校验：禁止关键字")]),e._v(" "),s("li",[e._v("unaryOperatorsRE // 正则校验：一元表达式操作")]),e._v(" "),s("li",[e._v("stripStringRE // 正则校验：脚本字符串")]),e._v(" "),s("li",[e._v("detectErrors // 检测错误工具函数")]),e._v(" "),s("li",[e._v("checkNode // 检查 Node")]),e._v(" "),s("li",[e._v("checkEvent // 检查 Event")]),e._v(" "),s("li",[e._v("checkFor // 检查 For 循环")]),e._v(" "),s("li",[e._v("checkIdentifier // 检查 Identifier")]),e._v(" "),s("li",[e._v("checkExpression // 检查表达式")]),e._v(" "),s("li",[e._v("checkFunctionParameterExpression // 检查函数表达式")]),e._v(" "),s("li",[e._v("generateCodeFrame")]),e._v(" "),s("li",[e._v("repeat$1")]),e._v(" "),s("li",[e._v("createFunction // 构建函数")]),e._v(" "),s("li",[e._v("createCompileToFunctionFn // 构建编译函数")]),e._v(" "),s("li",[e._v("compile // !important")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("return function createCompiler (baseOptions) {\nfunction compile (\n    template,\n    options\n) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n\n    var warn = function (msg, range, tip) {\n    (tip ? tips : errors).push(msg);\n    };\n\n    if (options) {\n    if (options.outputSourceRange) {\n        // $flow-disable-line\n        var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n        warn = function (msg, range, tip) {\n        var data = { msg: msg };\n        if (range) {\n            if (range.start != null) {\n            data.start = range.start + leadingSpaceLength;\n            }\n            if (range.end != null) {\n            data.end = range.end + leadingSpaceLength;\n            }\n        }\n        (tip ? tips : errors).push(data);\n        };\n    }\n    // merge custom modules\n    if (options.modules) {\n        finalOptions.modules =\n        (baseOptions.modules || []).concat(options.modules);\n    }\n    // merge custom directives\n    if (options.directives) {\n        finalOptions.directives = extend(\n        Object.create(baseOptions.directives || null),\n        options.directives\n        );\n    }\n    // copy other options\n    for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n        finalOptions[key] = options[key];\n        }\n    }\n    }\n\n    finalOptions.warn = warn;\n\n    var compiled = baseCompile(template.trim(), finalOptions);\n    {\n    detectErrors(compiled.ast, warn);\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br")])]),s("p",[e._v("再看这张图，对于“模板编译”是不是有一种新的感觉了。")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/vuelife2.png",alt:""}})]),e._v(" "),s("ul",[s("li",[e._v("compileToFunctions")])]),e._v(" "),s("p",[e._v("// 最后的最后")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    return Vue;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("哇！历时一个月左右，我终于完成啦！！！激动 + 释然 + 感恩 + 小满足 + ......")]),e._v(" "),s("p",[e._v("这生啃给我牙齿都啃酸了！不过本瓜又成长啦！")]),e._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),s("p",[e._v("emmm，本来打算再多修补一下，但是看到 vue3 的源码解析已有版本出来啦（扶朕起来，朕还能学），时不我待，向下一个目标前进吧！")]),e._v(" "),s("p",[e._v("后续仍会修补此文，您的点赞是我最大的动力！")])],1)}),[],!1,null,null,null);n.default=t.exports}}]);