(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{548:function(e,t,n){"use strict";n.r(t);var r=n(2),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),n("p",[e._v("源码阅读可能会迟到，但是一定不会缺席！")]),e._v(" "),n("p",[e._v("众所周知，以下代码就是 vue 的一种直接上手方式。通过 cdn 可以在线打开 vue.js。一个文件，一万行源码，能让万千开发者赖以生存，它究竟做了什么？让人品味。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<html>\n<head></head>\n<body>\n    <div id=\"app\">\n        {{ message }}\n    </div>\n</body>\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"><\/script>\n<script>\n    var app = new Vue({\n        el: '#app',\n        data: {\n            message: 'See Vue again!'\n        },\n    })\n<\/script>\n</html>\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br")])]),n("p",[e._v("源码cdn地址："),n("a",{attrs:{href:"https://cdn.jsdelivr.net/npm/vue/dist/vue.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cdn.jsdelivr.net/npm/vue/dist/vue.js"),n("OutboundLink")],1),e._v("，当下版本：v2.6.11")]),e._v(" "),n("p",[e._v("选择生啃的原因是，自认为已经有一定的基础，且可以更自主地选择代码段分轻重来阅读，一方面测试自己的掌握程度，一方面追求更直观的源码阅读。")]),e._v(" "),n("p",[e._v("当然你也可以选择在 "),n("a",{attrs:{href:"https://github.com/vuejs/vue/tree/dev/src",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/vuejs/vue/tree/dev/src"),n("OutboundLink")],1),e._v(" 分模块的阅读，也可以看各路大神的归类整理。")]),e._v(" "),n("p",[e._v("笔者尽量按 500 行作为一个模块来形成一个 md 文件，结合注释、自己的理解、以及附上对应查询链接来逐行细读源码。")]),e._v(" "),n("p",[e._v("目的：自我梳理，分享交流。")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（1/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（2/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc3.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（3/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc4.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（4/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc5.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（5/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc6.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（6/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc7.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（7/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc8.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（8/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc9.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（9/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc10.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（10/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc11.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（11/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc12.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（12/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc13.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（13/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc14.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（14/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc15.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（15/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc16.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（16/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc17.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（17/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc18.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（18/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc19.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（19/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc20.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（20/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc20.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（21/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc20.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（22/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc20.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（23/24）"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tuaran.github.io/views/2020/studyVuesc20.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js v2.6.11 生啃一万行源码（24/24）"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"正文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[e._v("#")]),e._v(" 正文")]),e._v(" "),n("h3",{attrs:{id:"第-2011-行至第-2232-行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第-2011-行至第-2232-行"}},[e._v("#")]),e._v(" 第 2011 行至第 2232 行")]),e._v(" "),n("ul",[n("li",[e._v("perf// performance")]),e._v(" "),n("li",[e._v("initProxy// 代理对象是es6的新特性，它主要用来自定义对象一些基本操作（如查找，赋值，枚举等）。"),n("a",{attrs:{href:"https://juejin.im/post/5b11db686fb9a01e5b10eae7",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v('//proxy是一个强大的特性，为我们提供了很多"元编程"能力。')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const handler = {\n    get: function(obj, prop) {\n        return prop in obj ? obj[prop] : 37;\n    }\n};\n\nconst p = new Proxy({}, handler);\np.a = 1;\np.b = undefined;\n\nconsole.log(p.a, p.b);      // 1, undefined\nconsole.log('c' in p, p.c); // false, 37\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5a5227ce6fb9a01c927e85c4",target:"_blank",rel:"noopener noreferrer"}},[e._v("link"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("traverse// 遍历：_traverse 深度遍历，用于")])]),e._v(" "),n("p",[e._v("traverse 对一个对象做深层递归遍历，因为遍历过程中就是对一个子对象的访问，会触发它们的 getter 过程，这样就可以收集到依赖，也就是订阅它们变化的 watcher，且遍历过程中会把子响应式对象通过它们的 dep id 记录到 seenObjects，避免以后重复访问。")]),e._v(" "),n("ul",[n("li",[e._v("normalizeEvent// normalizeEvents是针对v-model的处理,例如在IE下不支持change事件，只能用input事件代替。")]),e._v(" "),n("li",[e._v("createFnInvoker// 在初始构建实例时，旧节点是不存在的,此时会调用createFnInvoker函数对事件回调函数做一层封装，由于单个事件的回调可以有多个，因此createFnInvoker的作用是对单个，多个回调事件统一封装处理，返回一个当事件触发时真正执行的匿名函数。")]),e._v(" "),n("li",[e._v("updateListeners// updateListeners的逻辑也很简单，它会遍历on事件对新节点事件绑定注册事件，对旧节点移除事件监听，它即要处理原生DOM事件的添加和移除，也要处理自定义事件的添加和移除，")])]),e._v(" "),n("h3",{attrs:{id:"阶段小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结"}},[e._v("#")]),e._v(" 阶段小结")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5d5a5dbd6fb9a06acc0084dd#heading-7",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue 的事件机制"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"第-2236-行至第-2422-行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第-2236-行至第-2422-行"}},[e._v("#")]),e._v(" 第 2236 行至第 2422 行")]),e._v(" "),n("ul",[n("li",[e._v("mergeVNodeHook// 重点 合并 VNode")])]),e._v(" "),n("p",[e._v("// 把 hook 函数合并到 def.data.hook[hookey] 中，生成新的 invoker，createFnInvoker 方法")]),e._v(" "),n("p",[e._v("// vnode 原本定义了 init、prepatch、insert、destroy 四个钩子函数，而 mergeVNodeHook 函数就是把一些新的钩子函数合并进来，例如在 transition 过程中合并的 insert 钩子函数，就会合并到组件 vnode 的 insert 钩子函数中，这样当组件插入后，就会执行我们定义的 enterHook 了。")]),e._v(" "),n("ul",[n("li",[e._v("extractPropsFromVNodeData// 抽取相应的从父组件上的prop")]),e._v(" "),n("li",[e._v("checkProp// 校验 Prop")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    // The template compiler attempts to minimize the need for normalization by\n    // statically analyzing the template at compile time.\n    // 模板编译器尝试用最小的需求去规范：在编译时，静态分析模板\n\n    // For plain HTML markup, normalization can be completely skipped because the\n    // generated render function is guaranteed to return Array<VNode>. There are\n    // two cases where extra normalization is needed:\n    // 对于纯 HTML 标签，可跳过标准化，因为生成渲染函数一定会会返回 Vnode Array.有两种情况，需要额外去规范\n\n    // 1. When the children contains components - because a functional component\n    // may return an Array instead of a single root. In this case, just a simple\n    // normalization is needed - if any child is an Array, we flatten the whole\n    // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n    // because functional components already normalize their own children.\n    // 当子级包含组件时-因为功能组件可能会返回Array而不是单个根。在这种情况下，需要规范化-如果任何子级是Array，我们将整个具有Array.prototype.concat的东西。保证只有1级深度，因为功能组件已经规范了自己的子代。\n\n    // 2. When the children contains constructs that always generated nested Arrays,\n    // e.g. <template>, <slot>, v-for, or when the children is provided by user\n    // with hand-written render functions / JSX. In such cases a full normalization\n    // is needed to cater to all possible types of children values.\n    // 当子级包含始终生成嵌套数组的构造时，例如<template>，<slot>，v-for或用户提供子代时,具有手写的渲染功能/ JSX。在这种情况下，完全归一化,才能满足所有可能类型的子代值。\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br")])]),n("p",[e._v("Q:这一段话说的是什么意思呢？")]),e._v(" "),n("p",[e._v("A：归一化操作其实就是将多维的数组，合并转换成一个一维的数组。在 Vue 中归一化分为三个级别，")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("不需要进行归一化")])]),e._v(" "),n("li",[n("p",[e._v("只需要简单的归一化处理，将数组打平一层")])]),e._v(" "),n("li",[n("p",[e._v("完全归一化，将一个 N 层的 children 完全打平为一维数组")])])]),e._v(" "),n("p",[e._v("利用递归来处理的，同时处理了一些边界情况。")]),e._v(" "),n("h3",{attrs:{id:"第-2426-行至第-2490-行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第-2426-行至第-2490-行"}},[e._v("#")]),e._v(" 第 2426 行至第 2490 行")]),e._v(" "),n("ul",[n("li",[e._v("initProvide")]),e._v(" "),n("li",[e._v("initInjections")]),e._v(" "),n("li",[e._v("resolveInject")])])])}),[],!1,null,null,null);t.default=s.exports}}]);