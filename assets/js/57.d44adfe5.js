(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{557:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("本文首发在我的博客："),t("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202040.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("前端阿瓜每周速记（2020 第 40 周）"),t("OutboundLink")],1)]),a._v(" "),t("Boxx"),a._v(" "),t("p",[a._v("从这周开始，周记改为"),t("strong",[a._v("简问简答模式")]),a._v("。原因是：之前的模式，依然越写越复杂，有悖初衷，遂大改之，以期减少周记压力和增加笔记效益。")]),a._v(" "),t("h2",{attrs:{id:"q-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[a._v("#")]),a._v(" Q & A")]),a._v(" "),t("h3",{attrs:{id:"alias-是什么意思"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alias-是什么意思"}},[a._v("#")]),a._v(" alias 是什么意思？")]),a._v(" "),t("p",[a._v("这个词虽仅偶尔会出现，但不宜被忽略。")]),a._v(" "),t("ol",[t("li",[a._v("linux-alias")])]),a._v(" "),t("blockquote",[t("p",[a._v("在 linux 中，alias 命令（注意全为小写）的功能是设置命令的别名，以简写命令，提高操作效率。根据参数的不同，该命令可查看已设定的别名，或为命令设置新的别名。对于用户自定义别名，仅当前登录期内有效；也可修改配置文件使其长期有效。")])]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("nginx-alias")])]),a._v(" "),t("p",[a._v("在配置 nginx 的时候，也会出现 alias，nginx 通过 alias 设置虚拟目录。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/moon3/p/11095645.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("了解更多"),t("OutboundLink")],1)]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("webpack-alias")])]),a._v(" "),t("p",[a._v("通过设置 resolve 属性可以配置查找“commonJS／AMD模块”的基路径，设置别名 alias 可以让后续引用的地方减少路径的复杂度。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("    resolve: {\n        // 设置别名\n        alias: {\n            '@': resolve('src')// 这样配置后 @ 可以指向 src 目录\n        }\n    }\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("现在知道啥是 alias 了吧？ alias 就是"),t("strong",[a._v("别名")]),a._v("的意思，也理解为"),t("strong",[a._v("虚拟目录")]),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"promise-prototype-finally-返回什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-prototype-finally-返回什么"}},[a._v("#")]),a._v(" Promise.prototype.finally 返回什么？")]),a._v(" "),t("p",[a._v("先看下官方文档的解释：")]),a._v(" "),t("p",[a._v("Promise.prototype.finally(onFinally)")]),a._v(" "),t("blockquote",[t("p",[a._v("添加一个事件处理回调于当前promise对象，并且在原promise对象解析完毕后，返回一个新的promise对象。回调会在当前promise运行完毕后被调用，无论当前promise的状态是完成(fulfilled)还是失败(rejected)。")])]),a._v(" "),t("p",[a._v("finally方法和then以及catch一样，都可以返回一个新的Promise，只是细节上有点区别，finally返回的Promise将以finally之前的then的返回值来resolve（进入fulfilled状态）。")]),a._v(" "),t("p",[a._v("这里有一段代码，以供自测：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new Promise(function(resolve,reject){\n    resolve(1)\n}).finally(function(data){\n    console.log(data)\n    return 3\n}).then(function(x){\n    console.log(x)\n})\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("h3",{attrs:{id:"使用-cnpm-有什么问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-cnpm-有什么问题"}},[a._v("#")]),a._v(" 使用 cnpm 有什么问题？")]),a._v(" "),t("p",[a._v("由于一些不可抗逆的因素，总会让你再次用起 cnpm ,但是我想你已不再是从前那个少年了，用之前一定得知道这些坑。\n// TOANSWER")]),a._v(" "),t("h3",{attrs:{id:"javascript-语句后应该加分号么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-语句后应该加分号么"}},[a._v("#")]),a._v(" JavaScript 语句后应该加分号么？")]),a._v(" "),t("p",[a._v("最近设置 eslint 规则，有这样的一个小问题让人疑惑。一直秉持的态度是加或者不加都可，但是既然启用了代码规范校验，那么就应该是"),t("strong",[a._v("非 0 即 1")]),a._v("的问题，不是薛定谔的逗号。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.zhihu.com/question/20298345/answer/49551142",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaScript 语句后应该加分号么？ - 尤雨溪的回答 - 知乎"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"跨域用proxy解决有什么优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域用proxy解决有什么优势"}},[a._v("#")]),a._v(" 跨域用proxy解决有什么优势？")]),a._v(" "),t("p",[a._v("// TOANSWER")]),a._v(" "),t("h3",{attrs:{id:"知道-a-b-c-表达式的含义吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知道-a-b-c-表达式的含义吗"}},[a._v("#")]),a._v(" 知道 a ?.b ?.c 表达式的含义吗？")]),a._v(" "),t("p",[a._v("给个关键词自行搜索吧：“ES2020 链判断运算符”")]),a._v(" "),t("h3",{attrs:{id:"eslint-如何识别-es2020"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eslint-如何识别-es2020"}},[a._v("#")]),a._v(" eslint　如何识别　es2020？")]),a._v(" "),t("p",[a._v("这个问题承接上一个问题，因为 eslint 自动修正格式的时候不能识别 ES2020 链判断运算符。")]),a._v(" "),t("p",[a._v("// TOANSWER")]),a._v(" "),t("h2",{attrs:{id:"单词学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单词学习"}},[a._v("#")]),a._v(" 单词学习")]),a._v(" "),t("p",[a._v("英语单词嘛，这东西注定是"),t("strong",[a._v("活到老学到老")])]),a._v(" "),t("p",[a._v("以后的周记都加上这个吧！！！奥利给！！！学英语！！！")])],1)}),[],!1,null,null,null);s.default=r.exports}}]);