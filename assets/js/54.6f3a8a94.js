(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{547:function(e,t,r){"use strict";r.r(t);var a=r(2),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("Boxx"),e._v(" "),r("p",[e._v("本瓜准备开始写这样的一个系列：《前端阿瓜每周速记》")]),e._v(" "),r("p",[e._v("用于记录每周或亲身经历、或道听途说、或意外所感的有关前端技术二三。")]),e._v(" "),r("p",[e._v("坚持一周一更！以期同各位相好们，哦，不，同各位同好们分享交流 ~")]),e._v(" "),r("ul",[r("li",[e._v("为什么是速记呢？")])]),e._v(" "),r("p",[e._v("毕竟不是全职写文，工作生活之余，遇到自己想写的，又不想随便水一水、或只做一个搬运工，往往需要查阅大量相关知识来吸收、总结、抽离、创新，时间上太紧，难成好作。")]),e._v(" "),r("p",[e._v("想去探索的点却又繁多、冗杂，食之不易，弃之可惜！遂速记之，抛砖引玉，期待日后涓涓细流有幸汇聚成河！")]),e._v(" "),r("ul",[r("li",[e._v("撰文不易 点赞鼓励")])]),e._v(" "),r("p",[e._v("本系列不会影响长篇输出，如“前端书签整理”、“TS 学习”、“Vue3 源码”等等，关注不迷路！")]),e._v(" "),r("h2",{attrs:{id:"撰文记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#撰文记录"}},[e._v("#")]),e._v(" 撰文记录")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202034.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 34 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202035.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 35 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202040.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 40 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202043.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 43 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202044.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 44 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202045.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 45 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202046.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 46 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202050.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 50 周）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202103.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2021 第 03 周）"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"_2020第50周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第50周"}},[e._v("#")]),e._v(" 2020第50周")]),e._v(" "),r("h3",{attrs:{id:"cannot-find-module-debug"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cannot-find-module-debug"}},[e._v("#")]),e._v(" Cannot find module 'debug'")]),e._v(" "),r("p",[e._v("rm -rf node_modules; npm install works almost all the time 😆")]),e._v(" "),r("h3",{attrs:{id:"fullpage-js-报-licensekey-错"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fullpage-js-报-licensekey-错"}},[e._v("#")]),e._v(" fullpage.js 报 licenseKey 错")]),e._v(" "),r("p",[e._v("在fullpage.js文件中查找licenseKey，删除如下代码")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("if(!isOK){\n　　showError('error', 'Fullpage.js version 3 has changed its license to GPLv3 and it requires a `licenseKey` option. Read about it here:');\n　　showError('error', 'https://github.com/alvarotrigo/fullPage.js#options.');\n}\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("p",[e._v("删除后将下一行的else也删掉，变成如下代码")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("if(l && l.length < 20){\n　　console.warn('%c This website was made using fullPage.js slider. More info on the following website:', msgStyle);\n　　console.warn('%c https://alvarotrigo.com/fullPage/', msgStyle);\n}\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h3",{attrs:{id:"copy-webpack-plugin-报错"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#copy-webpack-plugin-报错"}},[e._v("#")]),e._v(" copy-webpack-plugin 报错")]),e._v(" "),r("p",[e._v("正确写法")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("    new CopyWebpackPlugin({\n      patterns: [\n        { from: 'utils', to: 'utils' },\n      ],\n    }),\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br")])]),r("p",[e._v("注意版本和格式")]),e._v(" "),r("h3",{attrs:{id:"avoid-using-javascript-keyword-as-property-name-return"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#avoid-using-javascript-keyword-as-property-name-return"}},[e._v("#")]),e._v(' avoid using JavaScript keyword as property name: "return"')]),e._v(" "),r("blockquote",[r("p",[e._v("Vue's expression validation can only parse expressions supported by the Node version you are using, so object spread is not supported unless you use Node 8.6+.")])]),e._v(" "),r("h3",{attrs:{id:"单词学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单词学习"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),r("ul",[r("li",[e._v("Circadian 昼夜节律")]),e._v(" "),r("li",[e._v("compulsory 强制性的")])]),e._v(" "),r("h2",{attrs:{id:"_2020第46周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第46周"}},[e._v("#")]),e._v(" 2020第46周")]),e._v(" "),r("h3",{attrs:{id:"关于大型-web-项目思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于大型-web-项目思考"}},[e._v("#")]),e._v(" 关于大型 web 项目思考")]),e._v(" "),r("p",[e._v("代码规范、项目结构规范、组件规范、业务梳理、命名规范、开发规范、工具统一、注释规范......")]),e._v(" "),r("p",[e._v("为了不让代码成为 shit mountain!")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/51509816",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.zhihu.com/question/51509816"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"cnpm-ps1-禁止运行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cnpm-ps1-禁止运行"}},[e._v("#")]),e._v(" cnpm.ps1 禁止运行？")]),e._v(" "),r("p",[e._v("解决：")]),e._v(" "),r("ol",[r("li",[e._v("在系统中搜索框 输入 Windos PowerShell")]),e._v(" "),r("li",[e._v("点击“管理员身份运行”")]),e._v(" "),r("li",[e._v("输入“ set-ExecutionPolicy RemoteSigned”回车")]),e._v(" "),r("li",[e._v("根据提示，输入A，回车")]),e._v(" "),r("li",[e._v("再次回到cnpm -v执行成功。")])]),e._v(" "),r("p",[e._v("原理？")]),e._v(" "),r("h3",{attrs:{id:"单词学习-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单词学习-2"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),r("p",[e._v("sill 门槛")]),e._v(" "),r("h2",{attrs:{id:"_2020第45周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第45周"}},[e._v("#")]),e._v(" 2020第45周")]),e._v(" "),r("h3",{attrs:{id:"如何更规范-gitflow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何更规范-gitflow"}},[e._v("#")]),e._v(" 如何更规范 gitflow ？")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/petervanderdoes/gitflow-avh",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitflow-avh 官方地址"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("大致流程是：")]),e._v(" "),r("p",[e._v("不同feature在不同feature分支上单独开发(或测试)。")]),e._v(" "),r("p",[e._v("确定版本号和此版本将要发布的功能后，将相应featusre分支统一向develop分支合并，然后拉出新的release预发布分支。// 多分支、多功能并行开发。")]),e._v(" "),r("p",[e._v("release分支作为持续集成关注的分支，修复bug。")]),e._v(" "),r("p",[e._v("待release分支测试验收通过后，统一向master分支和develop分支合并，并在master分支打tag。")]),e._v(" "),r("p",[e._v("根据tag发布apk版本。")]),e._v(" "),r("p",[e._v("若线上发现严重bug，需走hotfix流程。")]),e._v(" "),r("p",[e._v("基于master分支拉出hotfix分支修复线上问题。")]),e._v(" "),r("p",[e._v("bug修复完成统一向master和develop分支合并。")]),e._v(" "),r("p",[e._v("master分支打上新的tag，发布新版本。")]),e._v(" "),r("p",[e._v("避免产生这样的问题："),r("a",{attrs:{href:"https://v2ex.com/t/565241",target:"_blank",rel:"noopener noreferrer"}},[e._v("因为 git pull 和同事闹僵了。"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("img",{attrs:{src:"/assets/img/gitlife.png",alt:""}})]),e._v(" "),r("p",[r("img",{attrs:{src:"/assets/img/gitlife1.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"commit-之后是先-pull-还是先-push"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#commit-之后是先-pull-还是先-push"}},[e._v("#")]),e._v(" commit 之后是先 pull 还是先 push ？")]),e._v(" "),r("p",[e._v("先 pull：将远程仓库代码同步到本地仓库。如遇冲突，解决冲突，重复commit->pull，直到没有冲突。")]),e._v(" "),r("blockquote",[r("p",[e._v("使用merge命令合并分支，解决完冲突，执行git add .和git commit -m'fix conflict'。这个时候会产生一个commit。")])]),e._v(" "),r("blockquote",[r("p",[e._v("使用rebase命令合并分支，解决完冲突，执行git add .和git rebase --continue，不会产生额外的commit。这样的好处是，‘干净’，分支上不会有无意义的解决分支的commit；坏处，如果合并的分支中存在多个commit，需要重复处理多次冲突。")])]),e._v(" "),r("p",[r("a",{attrs:{href:"http://gitbook.liuhui998.com/4_2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("rebase"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"命令行实现传输-windows-文件到-linux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命令行实现传输-windows-文件到-linux"}},[e._v("#")]),e._v(" 命令行实现传输 windows 文件到 linux ？")]),e._v(" "),r("p",[e._v("scp local_file remote_username@remote_ip:remote_folder")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1535602",target:"_blank",rel:"noopener noreferrer"}},[e._v("scp 服务器之间的拷贝命令"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"webp-图片优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webp-图片优缺点"}},[e._v("#")]),e._v(" WEBP 图片优缺点？")]),e._v(" "),r("p",[e._v("优：体积更小")]),e._v(" "),r("p",[e._v("缺：目前兼容性差（仅 chrome、opera）")]),e._v(" "),r("h3",{attrs:{id:"node-js-中的-unhandledpromiserejectionwarning-问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-js-中的-unhandledpromiserejectionwarning-问题"}},[e._v("#")]),e._v(" Node.js 中的 UnhandledPromiseRejectionWarning 问题？")]),e._v(" "),r("p",[e._v("构建任务中 html 解析错误，出现了一个 Unhandled Rejection，所以我们可以添加一个 unhandledRejection 事件监听，直接退出：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("process.on('unhandledRejection', error => {\n  console.error('unhandledRejection', error);\n  process.exit(1) // To exit with a 'failure' code\n});\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h3",{attrs:{id:"npm-生成错误的语法树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#npm-生成错误的语法树"}},[e._v("#")]),e._v(" npm 生成错误的语法树？")]),e._v(" "),r("blockquote",[r("p",[e._v("如果你的现有项目依赖了 webpack 3.x，我们推荐使用 Yarn (opens new window)而不是 npm 来安装 VuePress。因为在这种情形下，npm 会生成错误的依赖树。")])]),e._v(" "),r("p",[e._v("为？")]),e._v(" "),r("h3",{attrs:{id:"how-to-fix-avoid-mutating-a-prop-directly-in-vue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-to-fix-avoid-mutating-a-prop-directly-in-vue"}},[e._v("#")]),e._v(" How to fix “Avoid mutating a prop directly” in Vue ?")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://medium.com/javascript-in-plain-english/avoid-mutating-a-prop-directly-7b127b9bca5b",target:"_blank",rel:"noopener noreferrer"}},[e._v("avoid-mutating-a-prop-directly"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("原因：")]),e._v(" "),r("blockquote",[r("p",[e._v("The reason why Vue doesn’t recommend to modify the prop data because if the parent component has a different value, the data in the child component will be re-render.")])]),e._v(" "),r("p",[e._v("解决：")]),e._v(" "),r("p",[e._v("答案就写在了问题中，把 props 的变量用另一个写在 computed 或者 data 里的变量转换一下。")]),e._v(" "),r("ul",[r("li",[e._v("这里特别注意： props 是单向传递的，不能写在 v-model 中，可以先让 props 变量赋给一个 data 值，再用 watch 监听一下，实现最终效果。")])]),e._v(" "),r("h3",{attrs:{id:"单词学习-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单词学习-3"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),r("p",[e._v("Context 上下文")]),e._v(" "),r("p",[e._v("optimize 优化 v.")]),e._v(" "),r("p",[e._v("draft 草稿")]),e._v(" "),r("p",[e._v("embed 嵌入")]),e._v(" "),r("h2",{attrs:{id:"_2020第44周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第44周"}},[e._v("#")]),e._v(" 2020第44周")]),e._v(" "),r("h3",{attrs:{id:"_1pt等于几px"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1pt等于几px"}},[e._v("#")]),e._v(" 1pt等于几px？")]),e._v(" "),r("p",[e._v("pt 是绝对单位，px 是相对单位，无法作比。")]),e._v(" "),r("h3",{attrs:{id:"git-diff-对比原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-diff-对比原理"}},[e._v("#")]),e._v(" git--diff 对比原理？")]),e._v(" "),r("p",[e._v("Myers 差分算法，具体的实现就是"),r("strong",[e._v("图搜索")])]),e._v(" "),r("p",[e._v("推荐阅读")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://chenshinan.github.io/2019/05/02/git%E7%94%9F%E6%88%90diff%E5%8E%9F%E7%90%86%EF%BC%9AMyers%E5%B7%AE%E5%88%86%E7%AE%97%E6%B3%95/",target:"_blank",rel:"noopener noreferrer"}},[e._v("git生成diff原理：Myers差分算法"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cjting.me/2017/05/13/how-git-generate-diff/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git 是怎样生成 diff 的：Myers 算法"),r("OutboundLink")],1)])]),e._v(" "),r("h3",{attrs:{id:"慎用-box-sizing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#慎用-box-sizing"}},[e._v("#")]),e._v(" 慎用 box-sizing ？")]),e._v(" "),r("p",[e._v("box-sizing:border-box 即把 padding 和 border 的宽度放在 width 里面，这个东西需要按需取用，注意影响范围，否则会影响到其它组件的布局。个人觉得并无一定必要。这不是回到 IE 的盒模型去了吗？现在都是采用标准的盒模型，需要统一。")]),e._v(" "),r("h3",{attrs:{id:"使用基变合并代码会导致代码丢失吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用基变合并代码会导致代码丢失吗"}},[e._v("#")]),e._v(" 使用基变合并代码会导致代码丢失吗？")]),e._v(" "),r("p",[e._v("不知道具体是不是基变合并导致的。")]),e._v(" "),r("p",[e._v("具体的场景是：")]),e._v(" "),r("p",[e._v("在 vsCode 上 commit 代码，然后在 sourceTree 上拉取代码，这个时候 sourceTree 并未将刚才的 commit 状态更新，然后勾选基变合并，最终报错：“合并前请先提交”，然后执行 undo 操作，发现代码有丢失的情况 QAQ。")]),e._v(" "),r("p",[e._v("暂未复现，先记之。")]),e._v(" "),r("h3",{attrs:{id:"单词学习-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单词学习-4"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),r("p",[e._v("terminal 终端")]),e._v(" "),r("p",[e._v("Suspension 悬浮")]),e._v(" "),r("h2",{attrs:{id:"_2020第43周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第43周"}},[e._v("#")]),e._v(" 2020第43周")]),e._v(" "),r("h3",{attrs:{id:"sourcetree-如何执行-undo-commit-before-push"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sourcetree-如何执行-undo-commit-before-push"}},[e._v("#")]),e._v(" SourceTree 如何执行  undo commit before push？")]),e._v(" "),r("ul",[r("li",[e._v("解决方案一")])]),e._v(" "),r("p",[e._v("用 "),r("strong",[e._v("GithubDesktop")]),e._v(" 的 undo 操作，但是我想你不会愿意同时操作两个git图形软件。SourceTree 有项目分支图谱，GithubDesktop 有更美观的界面和 undo 按钮，选哪一个更好呢？")]),e._v(" "),r("ul",[r("li",[e._v("解决方案二")])]),e._v(" "),r("p",[e._v("使用命令行")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git reset --hard HEAD^ // 直接抛弃掉提交的commit\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git reset --soft HEAD~1 // 所更改返回到暂存区\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[r("a",{attrs:{href:"https://stackoverflow.com/questions/1611215/remove-a-git-commit-which-has-not-been-pushed",target:"_blank",rel:"noopener noreferrer"}},[e._v("remove-a-git-commit-which-has-not-been-pushed"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("Be careful when using git reset --hard HEAD^ as you will lose changes in the commited files (you changes will be deleted). There are two branches to this question: To revert a commit but still have changes on disk do so git reset --soft HEAD~1 –")])]),e._v(" "),r("ul",[r("li",[e._v("方案三？sourceTree 上有按钮可以直接操作的吗？")])]),e._v(" "),r("p",[e._v("选择你要回退到的对应版本下，右键选择“重置当前分支到此次提交”。可选择“软合并”、“混合合并”、“硬合并”，分别对应“修改文件放到staged”、“修改文件放在changes”、“丢弃掉修改文件”。")]),e._v(" "),r("h3",{attrs:{id:"单词学习-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单词学习-5"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),r("p",[e._v("deliver 下发")]),e._v(" "),r("h2",{attrs:{id:"_2020第40周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第40周"}},[e._v("#")]),e._v(" 2020第40周")]),e._v(" "),r("h3",{attrs:{id:"alias-是什么意思"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#alias-是什么意思"}},[e._v("#")]),e._v(" alias 是什么意思？")]),e._v(" "),r("p",[e._v("这个词虽仅偶尔会出现，但不宜被忽略。")]),e._v(" "),r("ol",[r("li",[e._v("linux-alias")])]),e._v(" "),r("blockquote",[r("p",[e._v("在 linux 中，alias 命令（注意全为小写）的功能是设置命令的别名，以简写命令，提高操作效率。根据参数的不同，该命令可查看已设定的别名，或为命令设置新的别名。对于用户自定义别名，仅当前登录期内有效；也可修改配置文件使其长期有效。")])]),e._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[e._v("nginx-alias")])]),e._v(" "),r("p",[e._v("在配置 nginx 的时候，也会出现 alias，nginx 通过 alias 设置虚拟目录。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/moon3/p/11095645.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("了解更多"),r("OutboundLink")],1)]),e._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[e._v("webpack-alias")])]),e._v(" "),r("p",[e._v("通过设置 resolve 属性可以配置查找“commonJS／AMD模块”的基路径，设置别名 alias 可以让后续引用的地方减少路径的复杂度。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("    resolve: {\n        // 设置别名\n        alias: {\n            '@': resolve('src')// 这样配置后 @ 可以指向 src 目录\n        }\n    }\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br")])]),r("p",[e._v("现在知道啥是 alias 了吧？ alias 就是"),r("strong",[e._v("别名")]),e._v("的意思，也理解为"),r("strong",[e._v("虚拟目录")]),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"promise-prototype-finally-返回什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#promise-prototype-finally-返回什么"}},[e._v("#")]),e._v(" Promise.prototype.finally 返回什么？")]),e._v(" "),r("p",[e._v("先看下官方文档的解释：")]),e._v(" "),r("p",[e._v("Promise.prototype.finally(onFinally)")]),e._v(" "),r("blockquote",[r("p",[e._v("添加一个事件处理回调于当前promise对象，并且在原promise对象解析完毕后，返回一个新的promise对象。回调会在当前promise运行完毕后被调用，无论当前promise的状态是完成(fulfilled)还是失败(rejected)。")])]),e._v(" "),r("p",[e._v("finally方法和then以及catch一样，都可以返回一个新的Promise，只是细节上有点区别，finally返回的Promise将以finally之前的then的返回值来resolve（进入fulfilled状态）。")]),e._v(" "),r("p",[e._v("这里有一段代码，以供自测：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("new Promise(function(resolve,reject){\n    resolve(1)\n}).finally(function(data){\n    console.log(data)\n    return 3\n}).then(function(x){\n    console.log(x)\n})\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br")])]),r("h3",{attrs:{id:"使用-cnpm-有什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-cnpm-有什么问题"}},[e._v("#")]),e._v(" 使用 cnpm 有什么问题？")]),e._v(" "),r("p",[e._v("由于一些不可抗逆的因素，总会让你再次用起 cnpm ,但是我想你已不再是从前那个少年了，用之前一定得知道这些坑。\n// TOANSWER")]),e._v(" "),r("h3",{attrs:{id:"javascript-语句后应该加分号么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-语句后应该加分号么"}},[e._v("#")]),e._v(" JavaScript 语句后应该加分号么？")]),e._v(" "),r("p",[e._v("最近设置 eslint 规则，有这样的一个小问题让人疑惑。一直秉持的态度是加或者不加都可，但是既然启用了代码规范校验，那么就应该是"),r("strong",[e._v("非 0 即 1")]),e._v("的问题，不是薛定谔的逗号。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/20298345/answer/49551142",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript 语句后应该加分号么？ - 尤雨溪的回答 - 知乎"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"跨域用proxy解决有什么优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#跨域用proxy解决有什么优势"}},[e._v("#")]),e._v(" 跨域用proxy解决有什么优势？")]),e._v(" "),r("p",[e._v("// TOANSWER")]),e._v(" "),r("h3",{attrs:{id:"知道-a-b-c-表达式的含义吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#知道-a-b-c-表达式的含义吗"}},[e._v("#")]),e._v(" 知道 a ?.b ?.c 表达式的含义吗？")]),e._v(" "),r("p",[e._v("给个关键词自行搜索吧：“ES2020 链判断运算符”")]),e._v(" "),r("h3",{attrs:{id:"eslint-如何识别-es2020"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-如何识别-es2020"}},[e._v("#")]),e._v(" eslint　如何识别　es2020？")]),e._v(" "),r("p",[e._v("这个问题承接上一个问题，因为 eslint 自动修正格式的时候不能识别 ES2020 链判断运算符。")]),e._v(" "),r("p",[e._v("// TOANSWER")]),e._v(" "),r("h3",{attrs:{id:"单词学习-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单词学习-6"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),r("p",[e._v("英语单词嘛，这东西注定是"),r("strong",[e._v("活到老学到老")])]),e._v(" "),r("p",[e._v("以后的周记都加上这个吧！！！奥利给！！！学英语！！！")]),e._v(" "),r("h2",{attrs:{id:"_2020第35周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第35周"}},[e._v("#")]),e._v(" 2020第35周")]),e._v(" "),r("h3",{attrs:{id:"接口长时间-pending-是为什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接口长时间-pending-是为什么"}},[e._v("#")]),e._v(" 接口长时间 pending 是为什么？")]),e._v(" "),r("p",[e._v("本周在实际开发中出现了一个问题，前端请求已经发出，后端说没有收到请求，查看请求又是 pending 状态，后续的请求也都是 pending ，那么请求卡在哪儿呢？")]),e._v(" "),r("p",[e._v("了解后发现，原因通常有以下三点：")]),e._v(" "),r("ol",[r("li",[e._v("后台有断点。")]),e._v(" "),r("li",[e._v("数据库修改了东西，没有提交，记录处于锁定状态，这样我们操作这个记录如修改，将不会返回。")]),e._v(" "),r("li",[e._v("前端调用接口是按照异步方式处理，在没得到后台返回前，请求是被挂起的。额外提一点：你明白 ajax 的 async:false 设置吗？")])]),e._v(" "),r("p",[e._v("按照原因就可以快速定位问题啦。最后查明是第二点所致。")]),e._v(" "),r("p",[e._v("在实际的接口对接场景中，往往会出现一些问题处在灰色地带，前端以为是后端的锅，后端以为是前端的锅，导致解决起来不顺利。")]),e._v(" "),r("p",[e._v("所以，有一个比较广的技术面，能一下指出问题是否责任唯一非常重要。")]),e._v(" "),r("p",[e._v("这个问题结束了吗？并没有。")]),e._v(" "),r("h3",{attrs:{id:"http-status"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-status"}},[e._v("#")]),e._v(" Http Status")]),e._v(" "),r("p",[e._v("这里想说的不是类似返回的状态码这部分内容，如需要可移步："),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("这里想说的是 "),r("strong",[e._v("HTTP 就绪状态")])]),e._v(" "),r("blockquote",[r("p",[e._v("HTTP 就绪状态表示请求的状态或情形。它用于确定该请求是否已经开始、是否得到了响应或者请求/响应模型是否已经完成。它还可以帮助确定读取服务器提供的响应文本或数据是否安全。")])]),e._v(" "),r("p",[e._v("我们都知道异步请求的本质是基于 "),r("strong",[e._v("XMLHttpRequest")]),e._v(" 对象，以下几个属性需要知道：")]),e._v(" "),r("ul",[r("li",[e._v("open()：建立到服务器的新请求。")]),e._v(" "),r("li",[e._v("send()：向服务器发送请求。")]),e._v(" "),r("li",[e._v("abort()：退出当前请求。")]),e._v(" "),r("li",[e._v("readyState：提供当前 HTML 的就绪状态。")]),e._v(" "),r("li",[e._v("responseText：服务器返回的请求响应文本。")])]),e._v(" "),r("p",[e._v("其中 readyState 有五种就绪状态：")]),e._v(" "),r("ul",[r("li",[e._v("0：请求没有发出（在调用 open() 之前）。")]),e._v(" "),r("li",[e._v("1：请求已经建立但还没有发出（调用 send() 之前）。")]),e._v(" "),r("li",[e._v("2：请求已经发出正在处理之中（这里通常可以从响应得到内容头部）。")]),e._v(" "),r("li",[e._v("3：请求已经处理，响应中通常有部分数据可用，但是服务器还没有完成响应。")]),e._v(" "),r("li",[e._v("4：响应已完成，可以访问服务器响应并使用它。")])]),e._v(" "),r("p",[e._v("所有状态码的第一个数字代表了响应的五种状态之一。如果不想仅停留在 AJAX 的基本知识，“readyState 每种状态出现的时机”便是你可以去拓展的地方了。")]),e._v(" "),r("p",[e._v("Q：服务器处理完请求如何告知客户端呢？")]),e._v(" "),r("p",[e._v("A：答案是 XMLHttpRequest 另一个简单属性 "),r("strong",[e._v("onreadystatechange")]),e._v("。")]),e._v(" "),r("blockquote",[r("p",[e._v("该属性允许指定一个回调函数。回调允许服务器反向调用 Web 页面中的代码。它也给了服务器一定程度的控制权，当服务器完成请求之后，会查看 XMLHttpRequest 对象，特别是 onreadystatechange 属性。然后调用该属性指定的任何方法。")])]),e._v(" "),r("p",[e._v("e.g.")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('function getCustomerInfo() {\n  var phone = document.getElementById("phone").value;\n  var url = "/cgi-local/lookupCustomer.php?phone=" + escape(phone);\n  request.open("GET", url, true);\n  request.onreadystatechange = updatePage; // 执行回调\n  request.send(null);\n}\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br")])]),r("p",[e._v("为什么要说以上的这些呢？因为我们有时候发现，状态码并不好用或不能用，更多的去了解异步请求，如就绪状态的变化，能为你提供又一个利器去解决此类问题（请求到哪了）。")]),e._v(" "),r("h3",{attrs:{id:"回顾-chrome-的-waterfall"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回顾-chrome-的-waterfall"}},[e._v("#")]),e._v(" 回顾 Chrome 的 Waterfall")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("Queueing")]),e._v(". 出现下面的情况时，浏览器会把当前请求放入队列中进行排队")]),e._v(" "),r("ul",[r("li",[e._v("有更高优先级的请求时.")]),e._v(" "),r("li",[e._v("和目标服务器已经建立了6个TCP连接（最多6个，适用于HTTP/1.0和HTTP/1.1）")]),e._v(" "),r("li",[e._v("浏览器正在硬盘缓存上简单的分配空间")])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Stalled")]),e._v(". 请求会因为上面的任一个原因而阻塞。")])]),e._v(" "),r("li",[r("p",[e._v("DNS Lookup. 浏览器起正在解析IP地址。")])]),e._v(" "),r("li",[r("p",[e._v("Proxy negotiation. 浏览器正在与代理服务器协商请求。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Request sent")]),e._v(". 正在发送请求。")])]),e._v(" "),r("li",[r("p",[e._v("ServiceWorker Preparation. 浏览器正在启动服务程序。")])]),e._v(" "),r("li",[r("p",[e._v("Request to ServiceWorker. 该请求发送给 service worker。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Waiting (TTFB)")]),e._v(". 浏览器等待响应第一个字节到达的时间，包含来回的延迟时间和服务器准备响应的时间。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Content Download")]),e._v(". 浏览器正在接收响应。")])]),e._v(" "),r("li",[r("p",[e._v("Receiving Push. 浏览器接收推送的数据。")])]),e._v(" "),r("li",[r("p",[e._v("Reading Push. 浏览器正在读取之前收到的本地数据。")])]),e._v(" "),r("li",[r("p",[e._v("DNS Lookup - 在浏览器和服务器进行通信之前, 必须经过DNS查询, 将域名转换成IP地址. 在这个阶段, 你可以处理的东西很少. 但幸运的是, 并非所有的请求都需要经过这一阶段.")])]),e._v(" "),r("li",[r("p",[e._v("Initial Connection - 在浏览器发送请求之前, 必须建立TCP连接. 这个过程仅仅发生在瀑布图中的开头几行, 否则这就是个性能问题(后边细说).")])]),e._v(" "),r("li",[r("p",[e._v("SSL/TLS Negotiation - 如果你的页面是通过SSL/TLS这类安全协议加载资源, 这段时间就是浏览器建立安全连接的过程. 目前Google将HTTPS作为其 搜索排名因素 之一, SSL/TLS 协商的使用变得越来越普遍了.")])]),e._v(" "),r("li",[r("p",[e._v("Time To First Byte (TTFB) - TTFB 是浏览器请求发送到服务器的时间+服务器处理请求时间+响应报文的第一字节到达浏览器的时间. 我们用这个指标来判断你的web服务器是否性能不够, 或者说你是否需要使用CDN.")])]),e._v(" "),r("li",[r("p",[e._v("Downloading - 这是浏览器用来下载资源所用的时间. 这段时间越长, 说明资源越大. 理想情况下, 你可以通过控制资源的大小来控制这段时间的长度.")])])]),e._v(" "),r("p",[e._v("查看更多："),r("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/network/reference#timing-explanation",target:"_blank",rel:"noopener noreferrer"}},[e._v("timing-explanation - developers.google.com"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"vuex-plugin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vuex-plugin"}},[e._v("#")]),e._v(" vuex plugin")]),e._v(" "),r("p",[e._v("显然，Vuex plugin 没有另外几个核心模块（State、Getters、Mutations、Actions、Modules）来的亮眼，使用频率也没那么高。")]),e._v(" "),r("p",[e._v("但它也真的不容错过！")]),e._v(" "),r("blockquote",[r("p",[e._v("通过 Vuex 插件可以非常容易的扩展一些很酷的功能。Vuex 社区中的开发人员已经创建了大量的免费插件供你使用，有许多你能想象的功能，还有一些你可能没有想到的功能。")])]),e._v(" "),r("p",[e._v("比如：状态持久化，同步标签页、窗口，语言本地化，管理多个加载状态，缓存操作等。"),r("a",{attrs:{href:"https://vuejsdevelopers.com/2017/09/11/vue-js-vuex-plugins/?jsdojo_id=medium_vpl",target:"_blank",rel:"noopener noreferrer"}},[e._v("实践"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("原理：")]),e._v(" "),r("p",[e._v("Vuex 的 store 接受 plugins 选项，这个选项暴露出每次 mutation 的钩子。Vuex 插件就是一个函数，它接收 store 作为唯一参数：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("const myPlugin = store => {\n  // 当 store 初始化后调用\n  store.subscribe((mutation, state) => {\n    // 每次 mutation 之后调用\n    // mutation 的格式为 { type, payload }\n  })\n}\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br")])]),r("p",[e._v("然后像这样使用：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("const store = new Vuex.Store({\n  // ...\n  plugins: [myPlugin]\n})\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h3",{attrs:{id:"_5-个常用-plugin-插件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-个常用-plugin-插件"}},[e._v("#")]),e._v(" 5 个常用 plugin 插件")]),e._v(" "),r("ol",[r("li",[e._v("状态持久化："),r("a",{attrs:{href:"https://github.com/robinvdvleuten/vuex-persistedstate",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex-persistedstate"),r("OutboundLink")],1),e._v(" 再也不用担心刷新后状态被清除啦。")]),e._v(" "),r("li",[e._v("同步标签页和窗口："),r("a",{attrs:{href:"https://github.com/xanf/vuex-shared-mutations",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex-shared-mutations"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("语言本地化："),r("a",{attrs:{href:"https://github.com/dkfbasel/vuex-i18n",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex-i18n"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("管理多个加载状态："),r("a",{attrs:{href:"https://github.com/f/vue-wait",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex-loading"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("缓存操作："),r("a",{attrs:{href:"https://github.com/superwf/vuex-cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex-cache"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000012184535",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"文章分享"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文章分享"}},[e._v("#")]),e._v(" 文章分享")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2011/10/dont_call_yourself_a_programmer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("不要自称为程序员"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("九年前的一篇文章，比较有感触的不是“不要自称为程序员”，而是“90%的编程工作来自内部软件”。")]),e._v(" "),r("p",[e._v("目前，大部分的程序员的工作还是偏内部项目或者2B端多一点吧，这些项目的确或多或少存在文中所述问题。")]),e._v(" "),r("p",[e._v("但是改变不想接受的，接受不能改变的。当下，我们能做的是：自我要求。把项目做好，也能有面向大众机会。")]),e._v(" "),r("h3",{attrs:{id:"chrome只能创建6个tcp连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chrome只能创建6个tcp连接"}},[e._v("#")]),e._v(" chrome只能创建6个TCP连接？")]),e._v(" "),r("p",[e._v("Chrome 有个机制，同一个域名同时最多只能建立 6 个 TCP 连接，如果在同一个域名下同时有 10 个请求发生，那么其中 4 个请求会进入排队等待状态，直至进行中的请求完成。当然，如果当前请求数量少于 6，会直接进入下一步，建立 TCP 连接。")]),e._v(" "),r("h3",{attrs:{id:"关于package-json中dependencies和devdependencies的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于package-json中dependencies和devdependencies的区别"}},[e._v("#")]),e._v(" 关于package.json中dependencies和Devdependencies的区别")]),e._v(" "),r("p",[e._v("dependencies是生产环境所需要的依赖如vue，elementUI，axios等。")]),e._v(" "),r("p",[e._v("而Devdependencies是开发环境所需要的依赖如webpack，babel-loader等。Devdependencies只存在与开发阶段，也就是说项目打包过后不会用到这些依赖。")]),e._v(" "),r("p",[e._v("另附 package-lock.json：是当 node_modules 或 package.json 发生变化时自动生成的文件。这个文件主要功能是确定当前安装的包的依赖，以便后续重新安装的时候生成相同的依赖，而忽略项目开发过程中有些依赖已经发生的更新。")]),e._v(" "),r("p",[e._v("另附 npm 如何安装到固定版本：")]),e._v(" "),r("p",[e._v("npm install vue-template-compiler@2.6.10")]),e._v(" "),r("h3",{attrs:{id:"推荐阅读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[e._v("#")]),e._v(" 推荐阅读")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/xml/wa-ajaxintro2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 JavaScript 和 Ajax 发出异步请求 -\tBrett McLaughlin"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"_2020第34周"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2020第34周"}},[e._v("#")]),e._v(" 2020第34周")]),e._v(" "),r("h3",{attrs:{id:"值传递、引用传递、解释型、编译型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#值传递、引用传递、解释型、编译型"}},[e._v("#")]),e._v(" 值传递、引用传递、解释型、编译型")]),e._v(" "),r("p",[e._v("我知道你知道，JS 值有两大类型：基本类型和引用类型。基本类型按值传递，引用类型按引用传递。非常优秀，背的简直不要太熟，但你有想过为什么要这么划分吗？")]),e._v(" "),r("p",[e._v("这些变量保存在哪里？内存中？")]),e._v(" "),r("p",[e._v("内存的分配策略是如何的呢？")]),e._v(" "),r("p",[e._v("为什么是内存，不是 CPU？不是外存？"),r("sup",[e._v("本瓜在面试中被问过，面试官多半是后端或架构师")])]),e._v(" "),r("p",[e._v("不要方，抱紧我。芜湖起飞！🚀")]),e._v(" "),r("h3",{attrs:{id:"内存分配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存分配"}},[e._v("#")]),e._v(" 内存分配")]),e._v(" "),r("p",[e._v("程序运行时的内存分配的策略有三种：")]),e._v(" "),r("ol",[r("li",[e._v("静态存储。")]),e._v(" "),r("li",[e._v("栈式存储。")]),e._v(" "),r("li",[e._v("堆式存储。")])]),e._v(" "),r("blockquote",[r("p",[e._v("静态存储分配：是指在")]),r("div",{staticStyle:{color:"pink","font-wight":"500"}},[e._v("编译时")]),e._v("就能"),r("strong",[e._v("确定")]),e._v("每个数据目标在"),r("strong",[e._v("运行时刻的存储空间")]),e._v("需求,因而在编译时就可以给他们分配固定的内存空间.这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在,也不允许有嵌套或者递归的结构出现,因为它们都会导致编译程序无法计算准确的存储空间需求."),r("p"),e._v(" "),r("p",[e._v("栈式存储分配：也可称为动态存储分配,是由一个类似于堆栈的运行栈来实现的.和静态存储分配相反,在栈式存储方案中,程序对数据区的需求在编译时是完全未知的,只有到"),r("strong",[e._v("运行的时候才能够知道")]),e._v(",但是规定在运行中进入一个程序模块时,必须"),r("strong",[e._v("知道该程序模块所需的数据区大小")]),e._v("才能够为其分配内存.和我们在数据结构所熟知的栈一样,栈式存储分配按照"),r("strong",[e._v("先进后出")]),e._v("的原则进行分配。")]),e._v(" "),r("p",[e._v("堆式存储分配：则专门负责在编译时或运行时模块入口处都"),r("strong",[e._v("无法确定存储要求的数据结构")]),e._v("的内存分配,比如可变长度串和对象实例.堆由大片的可利用块或空闲块组成,堆中的内存可以按照任意顺序分配和释放.")])]),e._v(" "),r("p",[e._v("JS 是脚本语言，是解释型语言，即"),r("strong",[e._v("运行时翻译")]),e._v("。不清楚"),r("strong",[e._v("解释型语言")]),e._v("和"),r("strong",[e._v("编译型语言")]),e._v("的参见"),r("a",{attrs:{href:"https://blog.csdn.net/zhu_xun/article/details/16921413",target:"_blank",rel:"noopener noreferrer"}},[e._v("这篇"),r("OutboundLink")],1),e._v("。简单来说：解释型语言是边运行边翻译，编译型语言是翻译完后再运行。")]),e._v(" "),r("p",[e._v("那么可推断出内存分配策略采用的是"),r("strong",[e._v("栈式存储")]),e._v("和"),r("strong",[e._v("堆式存储")]),e._v("。（实际上也确实如此）")]),e._v(" "),r("p",[e._v("基础类型因为大小固定，采用"),r("strong",[e._v("栈式存储")]),e._v("。定义时，即系统自动分配，可直接访问，遵循后进先出原则。")]),e._v(" "),r("p",[e._v("引用类型因大小不固定，采用"),r("strong",[e._v("堆式存储")]),e._v("。")]),e._v(" "),r("blockquote",[r("p",[e._v("JS 不允许直接访问堆内存中的位置，因此我们不能直接操作对象的堆内存空间。")])]),e._v(" "),r("p",[e._v("操作对象时，实质上操作的是这个对象的引用，可理解为：在栈内存中的一个指针，指向堆内存的某个地址。")]),e._v(" "),r("ul",[r("li",[e._v("堆栈存储的优缺对比")])]),e._v(" "),r("p",[e._v("栈内存优缺：")]),e._v(" "),r("p",[e._v("优:  大小固定有限制，存取快，销毁快。")]),e._v(" "),r("p",[e._v("缺：不够灵活。编译时确定大小，运行时进行分配。")]),e._v(" "),r("p",[e._v("堆内存优缺：")]),e._v(" "),r("p",[e._v("优：编译器不必知道要从堆里分配多少存储空间，保存数据更灵活。")]),e._v(" "),r("p",[e._v("缺：运行时请求操作系统分配给自己内存，分配和销毁都要占用时间，效率非常低。")]),e._v(" "),r("p",[e._v("简单做了个图：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/12f5a833d8264708867ec4e44bc31fdc~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"共享传递"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#共享传递"}},[e._v("#")]),e._v(" 共享传递")]),e._v(" "),r("p",[e._v("来看一道题（来自京东面试）：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('function changeObjProperty(o) {\n  o.siteUrl = "http://www.baidu.com"\n  o = {}\n  o.siteUrl = "http://www.google.com"\n} \nlet webSite = {};\nchangeObjProperty(webSite);\nconsole.log(webSite.siteUrl);\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br")])]),r("p",[e._v("实际上，o 与后传进来的 webSite 的指针相同，o 是 webSite 的指针的副本，修改 o.siteUrl 会改变原指针，而直接修改 o ，不会改变原指针。这种传递值的方式叫做"),r("strong",[e._v("共享传递")])]),e._v(" "),r("blockquote",[r("p",[e._v("Stack Overflow 的解释：对于传递到函数参数的对象类型，如果直接改变了拷贝的引用的指向地址，那是不会影响到原来的那个对象；如果是通过拷贝的引用，去进行内部的值的操作，那么就会改变到原来的对象的。")])]),e._v(" "),r("p",[e._v("简单做了个图：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b3dbc4849b24324ba9047f777f2e2be~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"内存管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[e._v("#")]),e._v(" 内存管理")]),e._v(" "),r("p",[e._v("几乎所有的语言的内存管理都要进行下面这三个步骤：")]),e._v(" "),r("ol",[r("li",[e._v("分配你所需要的内存。")]),e._v(" "),r("li",[e._v("使用分配到的内存（读、写）。")]),e._v(" "),r("li",[e._v("不需要时将其释放或归还。")])]),e._v(" "),r("blockquote",[r("p",[e._v("为了不让程序员费心分配内存，JavaScript 在定义变量时就完成了内存分配。———— MDN")])]),e._v(" "),r("p",[e._v("（os:还用我说什么吗？“JS是最好的语言”打在评论中。）")]),e._v(" "),r("p",[e._v("小结：")]),e._v(" "),r("p",[e._v("这里提到了的只是冰山一角，深可至 V8 引擎原理、计算机系统原理等。有兴趣的小伙伴可自行探索，CV不是计算机，这才是计算机！")]),e._v(" "),r("h3",{attrs:{id:"jquery-1-8-2-xss-攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jquery-1-8-2-xss-攻击"}},[e._v("#")]),e._v(" JQuery 1.8.2 XSS 攻击")]),e._v(" "),r("p",[e._v("本司安全组在扫码代码安全时检测出了本瓜所在项目存在 Jqurey 版本过低导致的 XSS 攻击（中危）。"),r("a",{attrs:{href:"https://snyk.io/vuln/SNYK-JS-JQUERY-565129",target:"_blank",rel:"noopener noreferrer"}},[e._v("报告"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("没道理啊，都是 Vue 项目，哪里来的 JQuery，后来全局搜索发现，还真有！原因是 svn 上后台的老旧模板引用了 JQuery 依赖。（别奇怪，历史遗留问题导致各种情况都会出现。）")]),e._v(" "),r("h3",{attrs:{id:"自查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自查"}},[e._v("#")]),e._v(" 自查")]),e._v(" "),r("p",[e._v("不查不知道，一查吓一跳，就连比较新的 JQuery 版本也存在 XSS 漏洞。")]),e._v(" "),r("p",[e._v("例（动动手）：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('<html>\n    <head>\n        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"><\/script>\n    </head>\n    <body>\n        <div id="div"></div>\n        <button onclick="test()">xss</button>\n        <script>\n            function test(){\n                    $(\'#div\').html(\'document.getElementById("div").innerHTML="<style><style /><img src=x onerror=alert(document.cookie)></style>"\');\n            }\n        <\/script>\n    </body>\n</html>\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br"),r("span",{staticClass:"line-number"},[e._v("10")]),r("br"),r("span",{staticClass:"line-number"},[e._v("11")]),r("br"),r("span",{staticClass:"line-number"},[e._v("12")]),r("br"),r("span",{staticClass:"line-number"},[e._v("13")]),r("br"),r("span",{staticClass:"line-number"},[e._v("14")]),r("br")])]),r("p",[e._v("不同的版本下，不同的攻击字符串的标签匹配真是五花八门。")]),e._v(" "),r("p",[e._v("JQuery 很多函数/方法都是XSS接收器。所以说在我们用 JQuery 时，必须注意对 DOM 所做的更改以及传递，不要相信用户输入，常升级 JQuery 版本等。（套一个 Vue，渐进式不香吗？）")]),e._v(" "),r("p",[e._v("更多在 "),r("a",{attrs:{href:"http://www.dvwa.co.uk",target:"_blank",rel:"noopener noreferrer"}},[e._v("DVWA"),r("OutboundLink")],1),e._v(" 和"),r("a",{attrs:{href:"https://segmentfault.com/a/1190000019484055",target:"_blank",rel:"noopener noreferrer"}},[e._v("应用示例"),r("OutboundLink")],1),e._v("，也可借助辅助自查网站 "),r("a",{attrs:{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cross Site Scripting Prevention"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[e._v("#")]),e._v(" 类型")]),e._v(" "),r("p",[e._v("回顾三种 XSS 类型：")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("DOM 型（DOM XSS），即用户输入没有提交到服务器，只是被前端js接收并显示所引起的XSS。")])]),e._v(" "),r("li",[r("p",[e._v("反射型（Reflected XSS），即用户输入被提交到服务器，服务器将用户输入写入本次请求的response的")]),r("html"),e._v("内引起的XSS。"),r("p")]),e._v(" "),r("li",[r("p",[e._v("存储型（Stored XSS），即用户输入被提交到服务器，服务器将用户输入写入到非本次请求的response的")]),r("html"),e._v("内引起的XSS。"),r("p")])]),e._v(" "),r("h3",{attrs:{id:"webpack-按需引入、预先加载-import、import"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webpack-按需引入、预先加载-import、import"}},[e._v("#")]),e._v(' webpack 按需引入、预先加载 import、import ("")')]),e._v(" "),r("p",[e._v("最近在重构个站，重拾 webpack 打包。")]),e._v(" "),r("ul",[r("li",[e._v("按需引入和预先加载")])]),e._v(" "),r("p",[e._v("按需引入其实就是“延迟加载”，等到需要用的时候再加载。")]),e._v(" "),r("p",[e._v("预先加载是“提前加载”，把要用的东西先加载准备好。")]),e._v(" "),r("p",[e._v("这二者之前的平衡，决定了 webpack 的打包策略。")]),e._v(" "),r("ul",[r("li",[e._v('*import import ("")')])]),e._v(" "),r("p",[e._v("前者指的是 ES6 的 import，静态的 import 语句用于导入由另一个模块导出的绑定。一般放在 js 头部。"),r("strong",[e._v("编译时加载")])]),e._v(" "),r("p",[e._v("后者指的是 webpack 的import，动态地加载模块。调用 import() 之处，被作为分离的模块起点，意思是，被请求的模块和它引用的所有子模块，会分离到一个单独的 chunk 中。"),r("strong",[e._v("运行时加载")])]),e._v(" "),r("p",[e._v("所以，对于按需加载来说：")]),e._v(" "),r("p",[e._v("如果是单页面应用的话，按照路由实现按需加载。监听路由，触发对应的 import('')。")]),e._v(" "),r("p",[e._v("如果是多页面应用的话，在 HtmlWebpackPlugin 中设置 chunks，即可按需加载。")]),e._v(" "),r("h3",{attrs:{id:"axios-会手动封装吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#axios-会手动封装吗"}},[e._v("#")]),e._v(" axios 会手动封装吗？")]),e._v(" "),r("p",[e._v("包含内容：拦截器、错误码、提示、请求类型、请求头、请求取消等。")]),e._v(" "),r("h3",{attrs:{id:"vuex-plugin-了解多少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vuex-plugin-了解多少"}},[e._v("#")]),e._v(" vuex plugin 了解多少？")]),e._v(" "),r("p",[e._v("核心的 State、Getter、Mutation、Action、Module 用的多，那 Plugin 呢？")]),e._v(" "),r("p",[e._v("解答：")]),e._v(" "),r("p",[e._v("通过 Vuex Plugin 可以轻松实现一些很酷的扩展功能。")]),e._v(" "),r("p",[e._v("例：")]),e._v(" "),r("ul",[r("li",[e._v("vuex-persistedstate 实现状态持久化")]),e._v(" "),r("li",[e._v("vuex-shared-mutations 同步标签页、窗口")]),e._v(" "),r("li",[e._v("vuex-loading 管理多个加载状态")])]),e._v(" "),r("h3",{attrs:{id:"中国有多少市"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#中国有多少市"}},[e._v("#")]),e._v(" 中国有多少市？")]),e._v(" "),r("p",[e._v("你估一下大概有多少地级市呢？如果要用 Echart 绘全国市级别的数据，打算如何处理呢？")]),e._v(" "),r("h3",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Explaining Value vs. Reference in Javascript"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Memory_Management",target:"_blank",rel:"noopener noreferrer"}},[e._v("内存管理-MDN"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.aliyun.com/article/63722",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据结构之堆和栈"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap",target:"_blank",rel:"noopener noreferrer"}},[e._v("what-and-where-are-the-stack-and-heap"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000013126460",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript到底是解释型语言还是编译型语言?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/zhu_xun/article/details/16921413",target:"_blank",rel:"noopener noreferrer"}},[e._v("解释型语言和编译型语言的区别"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903618999500808#heading-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("10分钟了解JS堆、栈以及事件循环的概念"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/39c6ecc1b184",target:"_blank",rel:"noopener noreferrer"}},[e._v("栈内存和堆内存的一点小结"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/52b5a1879aa1",target:"_blank",rel:"noopener noreferrer"}},[e._v("内存中的堆和栈到底是什么"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903751090700295",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS 编译器都做了啥？"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903997615128583#heading-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS 变量存储？栈 & 堆？NONONO!"),r("OutboundLink")],1),e._v(" ⭐")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/10",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript深入之参数按值传递 "),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://snyk.io/test/npm/jquery/1.8.2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cross-site Scripting (XSS)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://vulnerabledoma.in/jquery_htmlPrefilter_xss.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("jquery_htmlPrefilter_xss"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/91437488",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何实施一次XSS攻击"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://stackoverflow.com/questions/8318581/html-vs-innerhtml-jquery-javascript-xss-attacks",target:"_blank",rel:"noopener noreferrer"}},[e._v("html-vs-innerhtml-jquery-javascript-xss-attacks"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://imweb.io/topic/582293894067ce9726778be9",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node中没搞明白require和import，你会被坑的很惨"),r("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);