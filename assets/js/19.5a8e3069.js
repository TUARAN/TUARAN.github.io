(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{522:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"算法刷题-i"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法刷题-i"}},[s._v("#")]),s._v(" 算法刷题（Ⅰ）")]),s._v(" "),a("h2",{attrs:{id:"leetcode-1-两数之和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-1-两数之和"}},[s._v("#")]),s._v(" leetcode-1 两数之和")]),s._v(" "),a("h3",{attrs:{id:"我的答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案"}},[s._v("#")]),s._v(" 我的答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let arrIndex1;\n    let arrIndex2;\n    let once=true\n    nums.map((i,index)=>{\n        nums.map((j,itemindex)=>{\n            if(index!==itemindex&&once){\n                if(i+j===target){\n                    arrIndex1=index;\n                    arrIndex2=itemindex;\n                    once=false\n                }\n            }\n        })\n    })\n    return [arrIndex1,arrIndex2]\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"更优答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更优答案"}},[s._v("#")]),s._v(" 更优答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    const existedObj = {};\n    for (let i = 0; i < nums.length; i++) {\n        const number = nums[i];\n        existedObj[number] = i;\n    }\n    for (let i = 0; i < nums.length; i++) {\n        const foundNumber = target - nums[i];\n        if (existedObj[foundNumber] && i !== existedObj[foundNumber]) {\n            return [i, existedObj[foundNumber]];\n        }\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("时间复杂度一个是O(n)方，一个是O(n²)")]),s._v(" "),a("p",[s._v("后者将数组的value和index转化成对象，这是一种思路。")]),s._v(" "),a("h3",{attrs:{id:"修改后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改后"}},[s._v("#")]),s._v(" 修改后")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var twoSum = function(nums, target) {\n    var obj={}\n    for(let i=0;i<nums.length;i++){\n        obj[nums[i]]=i\n    }\n    for(let i=0;i<nums.length;i++){\n        var diff=target-nums[i]\n        if(obj[diff]&&i!==obj[diff]){\n            return[i,obj[diff]]\n        }\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"leetcode-88-合并两个有序数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-88-合并两个有序数组"}},[s._v("#")]),s._v(" leetcode-88 合并两个有序数组")]),s._v(" "),a("h3",{attrs:{id:"优秀解答"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("p",[s._v("// 太棒了，值得思考")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */\nvar merge = function(nums1, m, nums2, n) {\n   // 初始化两个指针的指向，初始化 nums1 尾部索引k\n    let i = m - 1, j = n - 1, k = m + n - 1\n    // 当两个数组都没遍历完时，指针同步移动\n    while(i >= 0 && j >= 0) {\n        // 取较大的值，从末尾往前填补\n        if(nums1[i] >= nums2[j]) {\n            nums1[k] = nums1[i] \n            i-- \n            k--\n        } else {\n            nums1[k] = nums2[j] \n            j-- \n            k--\n        }\n    }\n    \n    // nums2 留下的情况，特殊处理一下 \n    while(j>=0) {\n        nums1[k] = nums2[j]  \n        k-- \n        j--\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h3",{attrs:{id:"小结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("举例参数：[2,4,6],3,[3,7],2")]),s._v(" "),a("p",[s._v("合并的话肯定就是 5 位，又因为这两个数组都是已经排过序了的，然后利用m,n这两个参数，朝这个方向展开。")]),s._v(" "),a("h2",{attrs:{id:"leetcode-15-三数求和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-15-三数求和"}},[s._v("#")]),s._v(" leetcode-15 三数求和")]),s._v(" "),a("p",[s._v("思路：先排序，固定一个值，然后用双指针对撞。")]),s._v(" "),a("h3",{attrs:{id:"优秀解答-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答-2"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nconst threeSum = function(nums) {\n    // 用于存放结果数组\n    let res = [] \n    // 目标值为0\n    let sum = 0\n    // 给 nums 排序\n    nums = nums.sort((a,b)=>{\n        return a-b\n    })\n    // 缓存数组长度\n    const len = nums.length\n    // 注意我们遍历到倒数第三个数就足够了，因为左右指针会遍历后面两个数\n    for(let i=0;i<len-2;i++) {\n        // 左指针 j\n        let j=i+1 \n        // 右指针k\n        let k=len-1   \n        // 如果遇到重复的数字，则跳过\n        if(i>0&&nums[i]===nums[i-1]) {\n            continue\n        }\n        while(j<k) {\n            // 三数之和小于0，左指针前进\n            if(nums[i]+nums[j]+nums[k]<0){\n                j++\n               // 处理左指针元素重复的情况\n               while(j<k&&nums[j]===nums[j-1]) {\n                    j++\n                }\n            } else if(nums[i]+nums[j]+nums[k]>0){\n                // 三数之和大于0，右指针后退\n                k--\n               \n               // 处理右指针元素重复的情况\n               while(j<k&&nums[k]===nums[k+1]) {\n                    k--\n                }\n            } else {\n                // 得到目标数字组合，推入结果数组\n                res.push([nums[i],nums[j],nums[k]])\n                \n                // 左右指针一起前进\n                j++  \n                k--\n               \n                // 若左指针元素重复，跳过\n                while(j<k&&nums[j]===nums[j-1]) {\n                    j++\n                }  \n               \n               // 若右指针元素重复，跳过\n               while(j<k&&nums[k]===nums[k+1]) {\n                    k--\n                }\n            }\n        }\n    }\n    \n    // 返回结果数组\n    return res\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br")])]),a("h2",{attrs:{id:"leetcode-9-回文数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-9-回文数"}},[s._v("#")]),s._v(" leetcode-9 回文数")]),s._v(" "),a("h3",{attrs:{id:"我的答案-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-2"}},[s._v("#")]),s._v(" 我的答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function(x) {\n    var x1=(x+"").split("").reverse().join("")\n    return x1===(x+"")\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"优秀解答-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答-3"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function(x) {\n    const str = x.toString();\n    for (let i = 0; i <= parseInt(str.length/2); i++) {\n        if (str[i] !== str[str.length - 1 - i]) {\n            return false;\n        }\n    }\n    return true;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"小结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("转化成字符串，然后利用字符串的对称性。虽然都是这样，但是下面这种性能要更好。")]),s._v(" "),a("h2",{attrs:{id:"leetcode-125-回文字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-125-回文字符串"}},[s._v("#")]),s._v(" leetcode-125 回文字符串")]),s._v(" "),a("h3",{attrs:{id:"我的答案-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-3"}},[s._v("#")]),s._v(" 我的答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * @param {string} s\n * @return {boolean}\n */\nvar isPalindrome = function(s) {\n    s=s.replace(/\\W/g,"").toLowerCase()// 关键是这一行代码。/\\w/：单词字符  /\\W/:非单词字符\n    var s1=s.split("").reverse().join("")\n    return s1===s\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("// 操作字符串的时候正则则显得很关键了")]),s._v(" "),a("h3",{attrs:{id:"更优解答"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更优解答"}},[s._v("#")]),s._v(" 更优解答")]),s._v(" "),a("p",[s._v("类同于 leetcode-9 回文数，采用for循环，二分字符串，首位对比。")]),s._v(" "),a("h2",{attrs:{id:"阶段总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阶段总结"}},[s._v("#")]),s._v(" 阶段总结")]),s._v(" "),a("p",[s._v("综上五道题目")]),s._v(" "),a("p",[s._v("对数组的操作比较多，在对数组的操作中要熟悉双指针遍历。")]),s._v(" "),a("p",[s._v("在处理“回文”问题呢，需要用到的就是对称性！")]),s._v(" "),a("ul",[a("li",[s._v("“两数之和”：不推荐用双循环，要用到对象（map）的特性；")]),s._v(" "),a("li",[s._v("“合并两个有序数组”：关键是双指针，只要是提到“有序”和“数组”则应该考虑到双指针；")]),s._v(" "),a("li",[s._v("“三数求和”：也是，规定首位，然后用双指针对撞。然后遍历；")]),s._v(" "),a("li",[s._v("“回文数”：则用到字符串的对称性。")]),s._v(" "),a("li",[s._v("“回文数字符串”：操作字符串，正则需要牢记。可以通过转成数组reserve()，也可以二分，首尾比较。")])]),s._v(" "),a("h2",{attrs:{id:"leetcode-2-初识链表-两数相加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-2-初识链表-两数相加"}},[s._v("#")]),s._v(" leetcode-2 初识链表-两数相加")]),s._v(" "),a("h2",{attrs:{id:"leetcode-21-有序链表的合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-21-有序链表的合并"}},[s._v("#")]),s._v(" leetcode-21 有序链表的合并")]),s._v(" "),a("h2",{attrs:{id:"leetcode-146-lru-缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-146-lru-缓存机制"}},[s._v("#")]),s._v(" leetcode-146 LRU 缓存机制")]),s._v(" "),a("h3",{attrs:{id:"答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#答案"}},[s._v("#")]),s._v(" 答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number} capacity\n */\nvar LRUCache = function(capacity) {\n    this.map = new Map();\n    this.maxLength = capacity;\n};\n\n/** \n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function(key) {\n    if(this.map.has(key)) {\n        let value = this.map.get(key);\n        this.map.delete(key);\n        this.map.set(key, value);\n        return value;\n    }\n    return -1 \n};\n\n\n/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function(key, value) {\n    if (this.map.has(key)) {\n        this.map.delete(key)\n    }\n    this.map.set(key, value);\n    if(this.map.size > this.maxLength) {\n        this.map.delete(this.map.keys().next().value);\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("h3",{attrs:{id:"小结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("利用 map，首先思路比代码要重要，先有思路，再实现代码，一点不慌。")]),s._v(" "),a("h2",{attrs:{id:"leetcode-146-lfu-缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-146-lfu-缓存机制"}},[s._v("#")]),s._v(" leetcode-146 LFU 缓存机制")]),s._v(" "),a("h3",{attrs:{id:"答案-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#答案-2"}},[s._v("#")]),s._v(" 答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number} capacity\n */\nvar LFUCache = function(capacity) {\n  this.size = capacity\n  this.valueMap = new Map()     // 记录值\n  this.useMap = new Map()       // 记录使用次数\n};\n\n/** \n * @param {number} key\n * @return {number}\n */\nLFUCache.prototype.get = function(key) {\n  if (this.valueMap.has(key)){       // 当存在时 删掉原来的重新添加  使用值加1\n    let use = this.useMap.get(key)\n    let value = this.valueMap.get(key)\n    this.valueMap.delete(key)\n    this.useMap.set(key, use + 1)\n    this.valueMap.set(key, value)\n    return value\n  } else {\n    return -1\n  }\n};\n\n/** \n * @param {number} key \n * @param {number} value\n * @return {void}\n */\nLFUCache.prototype.put = function(key, value) {\n  if(this.size === 0) return\n  let min = Math.min(...this.useMap.values())  // 缓存下 最小使用值\n  if (this.valueMap.has(key)) {                // 如果存在 值重新赋, use加一\n    this.valueMap.set(key, value)\n    let use = this.useMap.get(key)\n    this.useMap.set(key, use + 1)\n  } else {                                     // 不存在就直接加\n    this.valueMap.set(key, value)\n    this.useMap.set(key, 1)\n  }\n  // 当超出, 删掉不常用的 当碰到用的次数相同的删掉 较前未使用的\n  if(this.valueMap.size > this.size){\n    let it = this.valueMap.keys()              // 缓存 key 遍历器\n    let delKey = it.next().value\n    while(this.useMap.get(delKey) !== min){    // 获取使用值为 min 的key\n      delKey = it.next().value\n    }\n    this.useMap.delete(delKey)                 // 删掉该项\n    this.valueMap.delete(delKey)\n  }\n};\n\n/**\n * Your LFUCache object will be instantiated and called as such:\n * var obj = new LFUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n *\n**/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br")])]),a("h3",{attrs:{id:"小结-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-5"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("注释要比代码先写。")]),s._v(" "),a("h2",{attrs:{id:"leetcode-2-合并两个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-2-合并两个数"}},[s._v("#")]),s._v(" leetcode-2 合并两个数")]),s._v(" "),a("h3",{attrs:{id:"手撸答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手撸答案"}},[s._v("#")]),s._v(" 手撸答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)\nOutput: 7 -> 0 -> 8\nExplanation: 342 + 465 = 807.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n    let node=null //声明输出结果 ListNode\n    let arg=arguments[2]//第3个参数，代表是否要进位\n    if(l1||l2){// 当l1或l2存在\n        let l1val=l1?l1:null// 定义l1的值\n        let l2val=l2?l2:null// 定义l2的值\n        let l1nextVal=l1.next?l1.next.val:null// 定义l1.next的值\n        let l2nextVal=l2.next?l2.next.val:null// 定义l2.next的值\n        let val=arg?l1val+l2val+1:l1val+l2val\n        node=new ListNode(val%10)\n        node.next=addTwoNumbers(l1nextVal,l2nextVal,val>=10)\n    }else{\n        node=new ListNode(1)\n        node.next=null\n    }\n    return node\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h3",{attrs:{id:"正确答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正确答案"}},[s._v("#")]),s._v(" 正确答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var addTwoNumbers = function(l1, l2) {\n     let node = null\n    const carry = arguments[2]\n    if (l1 || l2) {\n        const val1 = l1 ? l1.val : 0\n        const val2 = l2 ? l2.val : 0\n        const next1 = l1 ? l1.next : null\n        const next2 = l2 ? l2.next : null\n        const val = carry ? val1 + val2 + 1 : val1 + val2\n        node = new ListNode(val % 10)\n        node.next = addTwoNumbers(next1, next2, val >= 10)  \n    } else if (carry) {\n        node = new ListNode(1)\n        node.next = null\n    }\n    return node\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"小结-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-6"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("递归的思想")]),s._v(" "),a("p",[s._v("先只管第一遍：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("赋值,val1,val2,next1,next2")])]),s._v(" "),a("li",[a("p",[s._v("newListNode 的第一个值等于 val1+val2，然后取余")])]),s._v(" "),a("li",[a("p",[s._v("进位：如果 next1.val + next2.val >=10，则要向前进一位。则")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("val = carry ? val1 + val2 + 1 : val1 + val2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("递归")])]),s._v(" "),a("h2",{attrs:{id:"leetcode-3-字符串的最长连续不重复长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-3-字符串的最长连续不重复长度"}},[s._v("#")]),s._v(" leetcode-3 字符串的最长连续不重复长度")]),s._v(" "),a("h3",{attrs:{id:"我的答案-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-4"}},[s._v("#")]),s._v(" 我的答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {string} s\n * @return {number}\n */\n// 需求：求字符串的最长连续不重复长度\nvar lengthOfLongestSubstring = function(s) {\n    if(s==='')return 0\n    if(s.length===1)return 1\n    // 设两个指针，左边先固定，然后右边遍历，得出长度，然后再移动左边指针\n    let sArr=s.split(\"\")\n    let left;\n    let lenArr=[];\n    for(let j=0;j<sArr.length;j++){\n         left=sArr[j]\n         let count=0\n         for(let i=j+1;i<sArr.length;i++){\n            if(sArr[i]!==left){\n                   count++\n            }else{\n                lenArr.push(count)\n            }\n        }\n    }\n    lenArr.sort((a,b)=>{\n        return a-b\n    })\n    if(lenArr.length<1){\n        return s.length\n    }\n    return lenArr[lenArr.length-1]\n};\n//false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("h3",{attrs:{id:"参考答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考答案"}},[s._v("#")]),s._v(" 参考答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var lengthOfLongestSubstring = function(s) {\n    let max_len = 0;\n    let curr = 0;\n    let hash = {}; \n    if(s.length < 2) {\n        return s.length;\n    }\n    for(let i = 0; i < s.length;  i++) {\n        if(hash[s[i]] == null) {\n            curr += 1;\n        } else {\n            curr = Math.min(i - hash[s[i]], curr + 1);\n        }\n        max_len = Math.max(max_len, curr);\n        hash[s[i]] = i; //save the index\n    }\n    return max_len;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"小结-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-7"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("双层for循环都可以转化为obj的hash,这样减少时间复杂度。")]),s._v(" "),a("h2",{attrs:{id:"leetcode-4-两个数组的中位数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-4-两个数组的中位数"}},[s._v("#")]),s._v(" leetcode-4 两个数组的中位数")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/median-of-two-sorted-arrays/",target:"_blank",rel:"noopener noreferrer"}},[s._v("leetcode-4"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"我的答案-pass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-pass"}},[s._v("#")]),s._v(" 我的答案-pass")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */\nvar findMedianSortedArrays = function(nums1, nums2) {\n    let sumArr=nums1.concat(nums2) // 拼接数组\n    sumArr.sort((a,b)=>{ // 排序拼接的数组\n        return a-b\n    })\n    let mid=0\n    let midIndex1=sumArr.length/2 - 1\n    let midIndex2=sumArr.length/2\n    if(midIndex1%1===0){ // 能被整除\n        mid=(sumArr[midIndex1]+sumArr[midIndex2])/2\n    }else{\n        mid=sumArr[Math.floor(sumArr.length/2)]\n    }\n    return mid\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h2",{attrs:{id:"leetcode-5-最长回文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-5-最长回文"}},[s._v("#")]),s._v(" leetcode-5 最长回文")]),s._v(" "),a("h3",{attrs:{id:"我的答案-超时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-超时"}},[s._v("#")]),s._v(" 我的答案-超时")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    // 先写一个验证回文的函数\n    function palindrome(str){\n        let reverseStr=str.split("").reverse().join("")\n        if(str===reverseStr){\n            return true\n        }else{\n            return false\n        }\n    }\n    // 特殊情况处理\n    let sArr=s.split("");\n    let strArr=[];\n    // 拿到连续的字符串的数组\n    for(let j=0;j<sArr.length;j++){\n            for(let i=1;i<=sArr.length;i++){\n                strArr.push(s.slice(j,i))\n            }\n    }\n    // 校验字符串数组是回文的，记录长度\n    let lenArr=[];// 长度数组\n    let resArr=[];\n    for(let i=0;i<strArr.length;i++){\n        if(palindrome(strArr[i])){\n            lenArr.push(strArr[i].length)\n            resArr.push(strArr[i])\n        }\n    };\n    // 返回最大长度\n    let resLen=Math.max(...lenArr);\n    let res=\'\'\n    // 返回最长回文字符串\n    for(let i=0;i<resArr.length;i++){\n        if(resArr[i].length===resLen){\n            res=resArr[i]\n        }\n    }\n    return res;\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("h3",{attrs:{id:"优秀解答1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答1"}},[s._v("#")]),s._v(" 优秀解答1")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var longestPalindrome = function(s) {\n    let maxSub = '';\n    \n    const bubbleFromCenter = (left, right) => {\n        while(left >= 0 && right < s.length && s[left] === s[right]) {\n            left--;\n            right++;\n        }\n        return s.slice(left+1, right)\n    }\n    \n    for(let i = 0; i < s.length; i++) {\n        const sub1 = bubbleFromCenter(i, i);\n        const sub2 = bubbleFromCenter(i, i+1);\n        const sub = sub1.length > sub2.length ? sub1 : sub2\n        if(sub.length > maxSub.length) {\n            maxSub = sub\n        }\n    }\n    return maxSub\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h3",{attrs:{id:"优秀解答2及解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答2及解读"}},[s._v("#")]),s._v(" 优秀解答2及解读")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {string} s\n * @return {string}\n */\n var longestPalindrome(s) {\n\t if (s.length < 2) return s; // base case\n\t \n\t let maxL = 0; // max left boundary 最大左边界\n\t let maxR = 0; // max right boundary 最大右边界\n\t let maxPalindromicLength; // maxR - maxL 最大长度\n\t let L = 0; // current left boundary 当前左边界\n\t let R = 0; // current right boundary 当前右边界\n\t let maxIndex = s.length - 1;\n\t let i = 0; // main iterator // 迭代\n\t \n\t while (i < s.length) {\n\t\t L = i, R = i; // reset current left & right boundaries\n\t\t \n\t\t // move right boundary if there are duplicates // 当有重复时，移动右边的指针\n\t\twhile (R < maxIndex && s[R] === s[R + 1]) {\n\t\t\t R++;\n\t\t}\n\t\t\n\t\ti = R + 1; // set our iterator for the next iteration\n\t\t\n\t\t// expand left and right boundaries\n\t\twhile (L > 0 && R < maxIndex && s[L - 1] === s[R + 1]) {// 当左边界 -1 等于右边界 +1  ，左右指针都移动，这很关键。\n\t\t\tL--;\n\t\t\tR++;\n\t\t}\n\t\t\n\t\tmaxPalindromicLength = maxR - maxL;// 最长回文长度\n\t\t\n\t\t// if current palindrome is longer than max palindrome// 当前回文小于最长回文\n\t\tif (R - L > maxPalindromicLength) {\n\t\t\tmaxL = L, maxR = R;\n\t\t\t\n\t\t\t// if we reached the maximum possible palindromic length, return our string\n\t\t\tif (maxPalindromicLength === maxIndex) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\treturn generateStr(s, maxL, maxR);\n}\n\n// generate our palindrome\nfunction generateStr(s, start, end) {// 生成结果回文\n\tlet str = '';\n\t\n\tfor (let i = start; i <= end; i++) {\n\t\tstr += s[i];\n\t}\n\t\n\treturn str;\n}\n\t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br")])]),a("h3",{attrs:{id:"小结-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-8"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("怎样判断一个字符串里有回文：")]),s._v(" "),a("ol",[a("li",[s._v('出现重复："abc" 肯定没有，"abcc" 才可能有回文 "cc",所以，先设左右指针。')]),s._v(" "),a("li",[s._v('左指针，右指针初始等于0："aba"，是回文。letf - 1 ===right + 1。')])]),s._v(" "),a("p",[s._v('如果是 "abca" ，不满足以上情况。')]),s._v(" "),a("h2",{attrs:{id:"leetcode-6-曲折转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-6-曲折转换"}},[s._v("#")]),s._v(" leetcode-6 曲折转换")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/zigzag-conversion/",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"我的答案-fail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-fail"}},[s._v("#")]),s._v(" 我的答案-fail")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var convert = function(s, numRows) {\n    // 曲折转换\n    // 将字符串纵向展开\n    // numRows-2 折叠的中间列有这么多列\n    // 一个流程是一个回折\n    let line2Num= numRows-2 // 有几列单的元素\n    let sArr=s.split(\"\");\n    let sLen=sArr.length;\n    let count=0 // 迭代\n    let turns= sLen- (sLen % (numRows+1))/numRows;// 有几个回则\n    let line=[];\n    let single=[];\n    let oneTurnStr=''\n    for(let n=0;n< turns;n++){\n        oneTravel(n)\n    }\n    return oneTurnStr\n    function oneTravel(n){\n        \n        for(let i=n*numRows;i<numRows;i++){\n            oneTurnStr+=s[i]// 第一行\n        }\n        for(let i=1;i<=line2Num;i++){\n            oneTurnStr+=sArr[numRows+i]// 第一行\n        }\n        return oneTurnStr\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h3",{attrs:{id:"优秀答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀答案"}},[s._v("#")]),s._v(" 优秀答案")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var convert = function(s, numRows) {\n  let result = [];\n  let row = 0;\n  let goingUp = false;\n  for (let i = 0; i < s.length; i++) {\n    result[row] = (result[row] || '') + s[i]; // append letter to active row\n    if (goingUp) {\n      row--;\n      if (row === 0) goingUp = false; // reverse direction if goingUp and reaching top\n    } else {\n      row++;\n      if (row === numRows - 1) goingUp = true; // reverse direction after reaching bottom\n    }\n    \n  }\n  return result.join('');\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"小结-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-9"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("用变量记录关键元素")]),s._v(" "),a("h2",{attrs:{id:"leetcode-7-翻转数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-7-翻转数字"}},[s._v("#")]),s._v(" leetcode-7 翻转数字")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/reverse-integer/",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"我的答案-pass-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-pass-2"}},[s._v("#")]),s._v(" 我的答案-pass")]),s._v(" "),a("p",[s._v("// 难度 easy")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * @param {number} x\n * @return {number}\n */\nvar reverse = function(x) {\n    let str=x+""\n    let ifNegative=false\n    if(str.slice(0,1)===\'-\'){\n        ifNegative=true\n    }\n    let strReverse=str.split("").reverse().join("")\n    let resInt=parseInt(strReverse)\n    if(ifNegative){// 判断是否是负数\n        resInt=-resInt\n    }\n    if(resInt<-Math.pow(2,31)||resInt>Math.pow(2,31)-1){// 判断是否在区间内\n        return 0\n    }\n    return resInt\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"优秀解答-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答-4"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var reverse = function(x) {\n   var reversed = 0;\n    const max = Math.pow(2, 31) - 1\n    const min = Math.pow(-2, 31)\n\n while (x != 0) {\n  reversed *= 10;\n  reversed += x % 10;\n  x -= x % 10;\n  x /= 10;\n }\n return reversed > min && reversed < max ? reversed : 0\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"leetcode-8-字符串转数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-8-字符串转数字"}},[s._v("#")]),s._v(" leetcode-8 字符串转数字")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/string-to-integer-atoi/",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"我的答案-fail-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-fail-2"}},[s._v("#")]),s._v(" 我的答案-fail")]),s._v(" "),a("p",[s._v("// go crazy")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var myAtoi = function(str) {\n    // 为空\n    if(str.length<1||str==='-'||str==='+'||str.slice(0,2)==='+-'||str.slice(0,2)==='-+'){\n        return 0;\n    }\n     str=str.replace(/\\D+(^-)|\\s+|\\+/g,\"\")\n    if(isNaN(parseInt(str))){\n        return 0;\n    }\n    // 特殊情况处理\n    // 首字母是非\"-\"字符\n    if(/\\D+|\\+/.test(str.slice(0,1))&&str.slice(0,1)!='-'){\n      return 0\n    }\n    // 超出范围倒叙\n    if(parseInt(str)>Math.pow(2,31)||parseInt(str)<-Math.pow(2,31)){\n        return reverseInt(str)\n    }\n    //else\n    return parseInt(str)===NaN?0:parseInt(str)\n};\nfunction reverseInt(numStr){\n    let num=parseInt(numStr)\n    if(num<0){\n        numStr.slice(1,numStr.length-1)\n        return -Math.pow(2,31)\n    }else{\n       return Math.pow(2,31)\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("h3",{attrs:{id:"优秀解答-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答-5"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var myAtoi = function(str) {\n    let match = str.match(/^\\s*[-+]?\\d+/)\n    if (match === null) return 0\n    let to_return = parseInt(match.join(''))\n    if (to_return > 2147483647) return 2147483647\n    if (to_return < -2147483648) return -2147483648\n    return to_return    \n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"小结-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-10"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("差距在哪：正则表达式还是用的不熟呀！")]),s._v(" "),a("h2",{attrs:{id:"leetcode-10-正则匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-10-正则匹配"}},[s._v("#")]),s._v(" leetcode-10 正则匹配")]),s._v(" "),a("ul",[a("li",[s._v("hard to be done "),a("a",{attrs:{href:"https://leetcode.com/problems/palindrome-number/",target:"_blank",rel:"noopener noreferrer"}},[s._v("link"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"leetcode-11-包含最多水"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-11-包含最多水"}},[s._v("#")]),s._v(" leetcode-11 包含最多水")]),s._v(" "),a("h3",{attrs:{id:"我的答案-pass-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-pass-3"}},[s._v("#")]),s._v(" 我的答案-pass")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var maxArea = function(height) {\n    // 求装最多水即求最大面积\n    // 假设数组[6,7],面积s = 6*1 = 6,取最短边 乘以 下标的差值\n    // 假设数组[3,6,7]，面积s1=3*1 s2=3*2 s3=6*1,最大面积就是 6\n    let L=0;// 左指针\n    \n    let sArr=[];// sArr 的最大值就是最终结果\n    let len=height.length;\n    while(L<len){\n          let R=L+1;// 右指针\n          let oneTurnArr=[];\n           for(let i=0;i<len-1-L;i++){\n               let long=Math.min(height[L],height[R])\n               oneTurnArr[i]=(R-L)*long;\n               R++\n           }\n        sArr[L]=Math.max(...oneTurnArr);\n        L++;\n    }\n    return Math.max(...sArr);\n};\nconsole.log(maxArea([1,8,6,2,5,4,8,3,7]))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("// 问题：双循环，耗时有点久")]),s._v(" "),a("h3",{attrs:{id:"优秀解答-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答-6"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} height\n * @return {number}\n */\nvar maxArea = function(height) {\n    let max = 0;\n    let leftIndex = 0;\n    let rightIndex = height.length - 1;\n    \n    while (leftIndex < rightIndex) {\n        const left = height[leftIndex];\n        const right = height[rightIndex];\n        const area = (rightIndex - leftIndex) * Math.min(left, right);\n        max = Math.max(max, area);\n        \n        if (left < right) {\n            leftIndex += 1;\n        } else {\n            rightIndex -= 1;\n        }\n    }\n    \n    return max;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"小结-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-11"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("可以不用双循环的，设定一个面积值，然后再设双指针，向中间对撞。")]),s._v(" "),a("h1",{attrs:{id:"算法刷题-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法刷题-ii"}},[s._v("#")]),s._v(" 算法刷题（Ⅱ）")]),s._v(" "),a("p",[s._v("之前刷 leetcode 是按照序号来刷的，没有做到归并整理，很难真正吸收。所以现在调整策略为“分类刷 leetcode”")]),s._v(" "),a("p",[s._v("且之前在 leetcode 外网刷题，现在开了 leetcode 中文网，那以后就在中文网里刷题好啦！")]),s._v(" "),a("p",[s._v("https://leetcode-cn.com/problemset/all/")]),s._v(" "),a("h2",{attrs:{id:"_1343-大小为-k-且平均值大于等于阈值的子数组数目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1343-大小为-k-且平均值大于等于阈值的子数组数目"}},[s._v("#")]),s._v(" 1343. 大小为 K 且平均值大于等于阈值的子数组数目")]),s._v(" "),a("p",[s._v("滑动窗口")]),s._v(" "),a("h3",{attrs:{id:"我的答案-超时-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的答案-超时-2"}},[s._v("#")]),s._v(" 我的答案- 超时")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var numOfSubarrays = function(arr, k, threshold) {// 固定窗口长度的滑动窗口\n    let slideArr=[];\n    let count=0;\n    let targetSum=k*threshold\n    function judge(slideArr){// 判断计数\n        let sum=0\n        for(let i=0,len=slideArr.length;i<len;i++){// 滑动窗口数组求和\n            sum+=slideArr[i]\n        }\n        if(sum>=targetSum){\n            count++;\n        }\n    }\n    for(let i=0;i<k;i++){// 初始滑动窗口\n        slideArr.push(arr[i])    \n    }\n    judge(slideArr)// init judge\n    // 移动\n    for(let i=k,len=arr.length;i<len;i++){// 自左向右移动\n        slideArr=slideArr.splice(1,slideArr.length-1)// 切掉第一个\n        slideArr.push(arr[i])// 拼接后一个\n        judge(slideArr)\n    }\n    // 边界值考虑: 如果窗口长度为 1\n    return count;// 返回\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h3",{attrs:{id:"优秀解答-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优秀解答-7"}},[s._v("#")]),s._v(" 优秀解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * \n * @param {*} arr 数组\n * @param {*} k 子数组长度\n * @param {*} threshold 子数组平均值\n */\n\nvar numsOfsubarray = function(arr, k, threshold) {\n  let sums = 0; // 子数组的和\n  let nums = 0; // 最后返回值，即符合条件的子数组个数\n  let len = arr.length; // 数组的长度\n  let target = k * threshold; // 子数组的目标和，大于等于这个值就满足条件\n\n  // 判断边界条件, 数组的长度 < 给定的子数组的长度, 必然不符合\n  if (len < k) return 0;\n\n  // 初始子数组的和\n  for (let i = 0; i < k; i++) sums += arr[i];\n  // 如果初始子数组就满足条件，nums加1\n  if (sums >= target) nums++;\n\n  for (let i = k; i < len; i++) {\n    // 这两步是整个算法的关键\n    // 新子数组和计算，即老子数组的和减去老子数组的第一个index的值，再加上当前index的值\n    // 可以理解为长度为k的窗口往后移动一位\n    sums -= arr[i - k]; // i = 3, k = 3, 就是减去arr[0]\n    sums += arr[i]; // 再加上arr[3]\n    if (sums >= target) nums++;\n  }\n  return nums;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);