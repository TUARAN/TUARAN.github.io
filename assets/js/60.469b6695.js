(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{555:function(e,t,a){"use strict";a.r(t);var r=a(2),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("本文首发在我的博客："),a("a",{attrs:{href:"https://tuaran.github.io/series/fe-weekly/wd202045.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端阿瓜每周速记（2020 第 45 周）"),a("OutboundLink")],1)]),e._v(" "),a("Boxx"),e._v(" "),a("h2",{attrs:{id:"q-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[e._v("#")]),e._v(" Q & A")]),e._v(" "),a("h3",{attrs:{id:"如何更规范-gitflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何更规范-gitflow"}},[e._v("#")]),e._v(" 如何更规范 gitflow ？")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/petervanderdoes/gitflow-avh",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitflow-avh 官方地址"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("大致流程是：")]),e._v(" "),a("p",[e._v("不同feature在不同feature分支上单独开发(或测试)。")]),e._v(" "),a("p",[e._v("确定版本号和此版本将要发布的功能后，将相应featusre分支统一向develop分支合并，然后拉出新的release预发布分支。// 多分支、多功能并行开发。")]),e._v(" "),a("p",[e._v("release分支作为持续集成关注的分支，修复bug。")]),e._v(" "),a("p",[e._v("待release分支测试验收通过后，统一向master分支和develop分支合并，并在master分支打tag。")]),e._v(" "),a("p",[e._v("根据tag发布apk版本。")]),e._v(" "),a("p",[e._v("若线上发现严重bug，需走hotfix流程。")]),e._v(" "),a("p",[e._v("基于master分支拉出hotfix分支修复线上问题。")]),e._v(" "),a("p",[e._v("bug修复完成统一向master和develop分支合并。")]),e._v(" "),a("p",[e._v("master分支打上新的tag，发布新版本。")]),e._v(" "),a("p",[e._v("避免产生这样的问题："),a("a",{attrs:{href:"https://v2ex.com/t/565241",target:"_blank",rel:"noopener noreferrer"}},[e._v("因为 git pull 和同事闹僵了。"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/gitlife.png",alt:""}})]),e._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/gitlife1.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"commit-之后是先-pull-还是先-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit-之后是先-pull-还是先-push"}},[e._v("#")]),e._v(" commit 之后是先 pull 还是先 push ？")]),e._v(" "),a("p",[e._v("先 pull：将远程仓库代码同步到本地仓库。如遇冲突，解决冲突，重复commit->pull，直到没有冲突。")]),e._v(" "),a("blockquote",[a("p",[e._v("使用merge命令合并分支，解决完冲突，执行git add .和git commit -m'fix conflict'。这个时候会产生一个commit。")])]),e._v(" "),a("blockquote",[a("p",[e._v("使用rebase命令合并分支，解决完冲突，执行git add .和git rebase --continue，不会产生额外的commit。这样的好处是，‘干净’，分支上不会有无意义的解决分支的commit；坏处，如果合并的分支中存在多个commit，需要重复处理多次冲突。")])]),e._v(" "),a("p",[a("a",{attrs:{href:"http://gitbook.liuhui998.com/4_2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("rebase"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"命令行实现传输-windows-文件到-linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行实现传输-windows-文件到-linux"}},[e._v("#")]),e._v(" 命令行实现传输 windows 文件到 linux ？")]),e._v(" "),a("p",[e._v("scp local_file remote_username@remote_ip:remote_folder")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1535602",target:"_blank",rel:"noopener noreferrer"}},[e._v("scp 服务器之间的拷贝命令"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"webp-图片优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webp-图片优缺点"}},[e._v("#")]),e._v(" WEBP 图片优缺点？")]),e._v(" "),a("p",[e._v("优：体积更小")]),e._v(" "),a("p",[e._v("缺：目前兼容性差（仅 chrome、opera）")]),e._v(" "),a("h3",{attrs:{id:"node-js-中的-unhandledpromiserejectionwarning-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-中的-unhandledpromiserejectionwarning-问题"}},[e._v("#")]),e._v(" Node.js 中的 UnhandledPromiseRejectionWarning 问题？")]),e._v(" "),a("p",[e._v("构建任务中 html 解析错误，出现了一个 Unhandled Rejection，所以我们可以添加一个 unhandledRejection 事件监听，直接退出：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("process.on('unhandledRejection', error => {\n  console.error('unhandledRejection', error);\n  process.exit(1) // To exit with a 'failure' code\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"npm-生成错误的语法树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-生成错误的语法树"}},[e._v("#")]),e._v(" npm 生成错误的语法树？")]),e._v(" "),a("blockquote",[a("p",[e._v("如果你的现有项目依赖了 webpack 3.x，我们推荐使用 Yarn (opens new window)而不是 npm 来安装 VuePress。因为在这种情形下，npm 会生成错误的依赖树。")])]),e._v(" "),a("p",[e._v("为？")]),e._v(" "),a("h3",{attrs:{id:"how-to-fix-avoid-mutating-a-prop-directly-in-vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-fix-avoid-mutating-a-prop-directly-in-vue"}},[e._v("#")]),e._v(" How to fix “Avoid mutating a prop directly” in Vue ?")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://medium.com/javascript-in-plain-english/avoid-mutating-a-prop-directly-7b127b9bca5b",target:"_blank",rel:"noopener noreferrer"}},[e._v("avoid-mutating-a-prop-directly"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("原因：")]),e._v(" "),a("blockquote",[a("p",[e._v("The reason why Vue doesn’t recommend to modify the prop data because if the parent component has a different value, the data in the child component will be re-render.")])]),e._v(" "),a("p",[e._v("解决：")]),e._v(" "),a("p",[e._v("答案就写在了问题中，把 props 的变量用另一个写在 computed 或者 data 里的变量转换一下。")]),e._v(" "),a("ul",[a("li",[e._v("这里特别注意： props 是单向传递的，不能写在 v-model 中，可以先让 props 变量赋给一个 data 值，再用 watch 监听一下，实现最终效果。")])]),e._v(" "),a("h2",{attrs:{id:"单词学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单词学习"}},[e._v("#")]),e._v(" 单词学习")]),e._v(" "),a("p",[e._v("Context 上下文")]),e._v(" "),a("p",[e._v("optimize 优化 v.")]),e._v(" "),a("p",[e._v("draft 草稿")]),e._v(" "),a("p",[e._v("embed 嵌入")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);